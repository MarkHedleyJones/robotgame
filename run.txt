Game seed: 28193011
Match seed: 28193011-0
--------------------------- running turn 0 ---------------------------
--------------------------- running turn 1 ---------------------------
frontline_radius = 0
( 2, 6) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(13, 2) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 3, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
( 6, 2) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 2,12) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
(10, 1) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 4, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
(16,12) (enemy)     vulnerability = 13 attack_ratio =  1 health_diffs = 50
( 3, 4) (enemy)     vulnerability =  5 attack_ratio = -1 health_diffs = -50
(11,17) (friendly)  vulnerability = 14 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0   0   0                              
 2                       0   0   0  24  26   0  22   0   0                      
 3               0  18  20   0  24  26  28  26  24  22   0  38  46              
 4               0   0  22  24  26  28  30  28  26  34  42  50  58              
 5          18   0  22  24  26  28  30  32  30  38  46  54  62  70  78          
 6          20  22  24  26  28  30  32  34  42  50  58  66  74  82  90          
 7      20  22  24  26  28  30  32  34  46  54  62  70  78  86  94  102  90      
 8      22  24  26  28  30  32  34  46  58  66  74  82  90  98  106  114  102      
 9      24  26  28  30  32  34  46  58  70  78  86  94  102  110  118  126  114      
10      22  24  26  28  30  42  54  66  78  86  94  102  110  118  126  134  122      
11      20  22  24  26  38  50  62  74  86  94  102  110  118  126  134   0  130      
12          20  22  34  46  58  70  82  94  102  110  118  126  134   0   0          
13          18  20  22  34  46  58  70  82  90  98  106  114  122  130   0          
14              18  20  22  34  46  58  70  78  86  94  102  110  118              
15              16  18  20  22  34  46  58  66  74  82  90  98  106              
16                      18  20  22  34  46  54  62  70  78                      
17                              20  22  34  42  20                              
18                                                                              
--------------------------- running turn 2 ---------------------------
frontline_radius = 0
( 2, 7) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
(11,16) (friendly)  vulnerability = 12 attack_ratio =  1 health_diffs = 50
( 3,12) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 3, 3) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(15,12) (enemy)     vulnerability = 11 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 2) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 5, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 3, 5) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18  10  22  24  12  12  12  20   8                      
 3              16  18  10  10  10  26  28  12  24   8   8   8  36              
 4               8  20  22  10  26  28  30  28  26  24   8  40  48              
 5           8   8   8  24  26  28  30  32  30  28  36  44  52  60  48          
 6          20   8  24  26  28  30  32  34  32  40  48  56  64  72  60          
 7      20  22  24  26  28  30  32  34  36  44  52  60  68  76  84  72  60      
 8      22  24  26  28  30  32  34  36  48  56  64  72  80  88  96  84  72      
 9      24  26  28  30  32  34  36  48  60  68  76  84  92  100  108  96  84      
10      22  24  26  28  30  32  44  56  68  76  84  92  100  108  116  104  92      
11      20  22  24  26  28  40  52  64  76  84  92  100  108  116  110  112  100      
12          20  22  24  36  48  60  72  84  92  100  108  116  110  110  110          
13          18  20  22  24  36  48  60  72  80  88  96  104  112  110  108          
14              18  20  22  24  36  48  60  68  76  84  92  100  108              
15              16  18  20  22  24  36  48  56  64  72  80  88  96              
16                      18  20  22  24  36  44  22  60  68                      
17                              20  22  24  32  40                              
18                                                                              
--------------------------- running turn 3 ---------------------------
frontline_radius = 0
( 9, 2) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  0
(14,12) (enemy)     vulnerability = 11 attack_ratio =  1 health_diffs = 50
( 4,12) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 4, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,15) (friendly)  vulnerability = 10 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(12, 3) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 5, 3) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  14  22  20                              
 2                      18  10  22  14  14  14  22  10  18                      
 3              16  18  10  10  10  26  14  26  10  10  10  38  26              
 4               8  20  22  10  26  28  30  28  26  10  42  50  38              
 5           8   8   8  24  26  28  30  32  30  38  46  54  62  50  38          
 6          20   8  24  26  28  30  32  34  42  50  58  66  74  62  50          
 7      20  22  24  26  28  30  32  34  46  54  62  70  78  86  74  62  50      
 8      22  24  26  28  30  32  34  46  58  66  74  82  90  98  86  74  62      
 9      24  26  28  30  32  34  46  58  70  78  86  94  102  110  98  86  74      
10      22  24  26  28  30  42  54  66  78  86  94  102  110  118  106  94  82      
11      20  22  24  26  38  50  62  74  86  94  102  110  118  112  114  102  90      
12          20  22  24  46  58  70  82  94  102  110  118  112  112  112  110          
13          18  20  22  34  46  58  70  82  90  98  106  114  112  110  98          
14              18  20  22  34  46  58  70  78  86  94  102  110  98              
15              16  18  20  22  34  46  58  66  24  82  90  98  86              
16                      18  20  22  34  46  54  62  70  78                      
17                              20  22  34  42  50                              
18                                                                              
--------------------------- running turn 4 ---------------------------
frontline_radius = 0
( 3, 8) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
(13,12) (enemy)     vulnerability = 11 attack_ratio =  1 health_diffs = 50
( 8, 2) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 4, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 5,12) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 3) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  2
(11,14) (friendly)  vulnerability =  8 attack_ratio =  1 health_diffs = 50
( 5, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -2
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  10  12  12  12  24  12  20  28                      
 3              16  18  10  10  10  12  28  12  12  12  40  28  16              
 4              18  10  22  10  26  28  30  28  12  44  52  40  28              
 5          18  10  10  10  26  28  30  32  40  48  56  64  52  40  28          
 6          20  22  10  26  28  30  32  44  52  60  68  76  64  52  40          
 7      20  22  24  26  28  30  32  44  56  64  72  80  88  76  64  52  40      
 8      22  24  26  28  30  32  44  56  68  76  84  92  100  88  76  64  52      
 9      24  26  28  30  32  44  56  68  80  88  96  104  112  100  88  76  64      
10      22  24  26  28  40  52  64  76  88  96  104  112  120  108  96  84  72      
11      20  22  24  36  48  60  72  84  96  104  112  120  114  116  104  92  80      
12          20  32  44  26  68  80  92  104  112  120  114  114  114  112  100          
13          18  20  32  44  56  68  80  92  100  108  116  114  112  100  88          
14              18  20  32  44  56  68  80  88  26  104  112  100  88              
15              16  18  20  32  44  56  68  76  84  92  100  88  76              
16                      18  20  32  44  56  64  72  80  88                      
17                              20  32  44  52  60                              
18                                                                              
--------------------------- running turn 5 ---------------------------
frontline_radius = 0
(12,12) (enemy)     vulnerability = 11 attack_ratio =  0 health_diffs =  0
( 4, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -1
( 4, 4) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 6, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 3, 9) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 6,12) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
(11,13) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
(10, 3) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 7, 2) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                               0  22  24  22  20                              
 2                      18   0   0   0  26  14  22  30  18                      
 3              16  18  10  10   0  26  14  14  14  42  30  18  16              
 4              18  10  22  10  26  28  30  14  46  54  42  30  18              
 5          18  10  10  10  26  28  30  42  50  58  66  54  42  30  18          
 6          20  22  10  26  28  30  42  54  62  70  78  66  54  42  30          
 7      20  22  24  26  28  30  42  54  66  74  82  90  78  66  54  42  30      
 8      22  24  26  28  30  42  54  66  78  86  94  102  90  78  66  54  42      
 9      24  26  28  30  42  54  66  78  90  98  106  114  102  90  78  66  54      
10      22  24  26  38  50  62  74  86  98  106  114  122  110  98  86  74  62      
11      20  22  34  46  58  70  82  94  106  114  122  116  118  106  94  82  70      
12          30  42  54  66  28  90  102  114  122  116  116  116  114  102  90          
13          18  30  42  54  66  78  90  102  110  28  116  114  102  90  78          
14              18  30  42  54  66  78  90  98  106  114  102  90  78              
15              16  18  30  42  54  66  78  86  94  102  90  78  66              
16                      18  30  42  54  66  74  82  90  78                      
17                              30  42  54  62  70                              
18                                                                              
--------------------------- running turn 6 ---------------------------
frontline_radius = 0
( 7, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 9) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 4, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -1
(12,12) (enemy)     vulnerability = 12 attack_ratio =  0 health_diffs =  9
( 4, 4) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12,13) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs = -9
( 7,12) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 5, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18   2  12  24   2  24  32  40  28                      
 3              16  18   2   2   2   2   2   2  44  52  40  28  16              
 4              18  10  22   2  12  28   2  48  56  64  52  40  28              
 5          18  10  10  10  26  28  40  52  60  68  76  64  52  40  28          
 6          20  22  10  26  28  40  52  64  72  80  88  76  64  52  40          
 7      20  22  24  26  28  40  52  64  76  84  92  100  88  76  64  52  40      
 8      22  24  26  28  40  52  64  76  88  96  104  112  100  88  76  64  52      
 9      24  26  28  30  52  64  76  88  100  108  116  124  112  100  88  76  64      
10      22  24  36  48  60  72  84  96  108  116  124  132  120  108  96  84  72      
11      20  32  44  56  68  80  92  104  116  124  132  16  128  116  104  92  80      
12          40  52  64  76  88  30  112  124  132  16  16  16  124  112  100          
13          28  40  52  64  76  88  100  112  120  128  16  124  112  100  88          
14              28  40  52  64  76  88  100  108  116  124  112  100  88              
15              16  28  40  52  64  76  88  96  104  112  100  88  76              
16                      28  40  52  64  76  84  92  100  88                      
17                              40  52  64  72  80                              
18                                                                              
--------------------------- running turn 7 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 8, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(12,12) (enemy)     vulnerability = 13 attack_ratio =  0 health_diffs =  8
( 8,12) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 4, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -2
( 4, 4) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  2
( 7, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
(12,13) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = -8
( 5, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  1
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  30                              
 2                      18   0  22   4  26  34  42  50  38                      
 3              16  18   0   0   0   4   4  46  54  62  50  38  26              
 4              18  10  22   0  14   4  50  58  66  74  62  50  38              
 5          18  10  10  10  26  14  50  62  70  78  86  74  62  50  38          
 6          20  22  10  26  38  50  62  74  82  90  98  86  74  62  50          
 7      20  22  24  26  38  50  62  74  86  94  102  110  98  86  74  62  50      
 8      22  24  26  38  50  62  74  86  98  106  114  122  110  98  86  74  62      
 9      24  26  38  50  32  74  86  98  110  118  126  134  122  110  98  86  74      
10      22  34  46  58  70  82  94  106  118  126  134  142  130  118  106  94  82      
11      30  42  54  66  78  90  102  114  126  134  142  16  138  126  114  102  90      
12          50  62  74  86  98  110  32  134  142  16  16  16  134  122  110          
13          38  50  62  74  86  98  110  122  130  138  16  134  122  110  98          
14              38  50  62  74  86  98  110  118  126  134  122  110  98              
15              26  38  50  62  74  86  98  106  114  122  110  98  86              
16                      38  50  62  74  86  94  102  110  98                      
17                              50  62  74  82  90                              
18                                                                              
--------------------------- running turn 8 ---------------------------
frontline_radius = 0
( 7, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 9) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 6, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 4, 5) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = -9
(12,12) (enemy)     vulnerability = 12 attack_ratio =  0 health_diffs =  7
( 5, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -7
( 7, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,12) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  12  24  26  24  32  40  28                      
 3              16  18  20   0  12  12  28  36  44  52  40  28  16              
 4              18  10   0   0   0  28  40  48  56  64  52  40  28              
 5          18  10  10  10   0   2   2  52  60  68  76  64  52  40  28          
 6          20  22  10  26  28   2  52  64  72  80  88  76  64  52  40          
 7      20  22  24  26  28  40  52  64  76  84  92  100  88  76  64  52  40      
 8      22  24  26  28  40  52  64  76  88  96  104  112  100  88  76  64  52      
 9      24  26  28  40  52  34  76  88  100  108  116  124  112  100  88  76  64      
10      22  24  36  48  60  72  84  96  108  116  124  132  120  108  96  84  72      
11      20  32  44  56  68  80  92  104  116  124  132  16  128  116  104  92  80      
12          40  52  64  76  88  100  112  34  132  16  16  16  124  112  100          
13          28  40  52  64  76  88  100  112  120  128  16  124  112  100  88          
14              28  40  52  64  76  88  100  108  116  124  112  100  88              
15              16  28  40  52  64  76  88  96  104  112  100  88  76              
16                      28  40  52  64  76  84  92  100  88                      
17                              40  52  64  72  80                              
18                                                                              
--------------------------- running turn 9 ---------------------------
frontline_radius = 0
( 6, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 4, 4) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 13
( 4, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
(12,13) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -7
(12,12) (enemy)     vulnerability = 13 attack_ratio =  0 health_diffs =  7
(10,12) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 7, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 6, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 5, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -44
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  30                              
 2                      18   4  22  24  26  34  42  50  38                      
 3              16  18   4   4   4  26  38  46  54  62  50  38  26              
 4              18  20  22   0  14  14  50  58  66  74  62  50  38              
 5          18  20  12   0   0   0  50  62  70  78  86  74  62  50  38          
 6          20  12  12  12   0  50  62  74  82  90  98  86  74  62  50          
 7      20  22  24  12  38  50  62  74  86  94  102  110  98  86  74  62  50      
 8      22  24  26  38  50  62  74  86  98  106  114  122  110  98  86  74  62      
 9      24  26  38  50  62  74  36  98  110  118  126  134  122  110  98  86  74      
10      22  34  46  58  70  82  94  106  118  126  134  142  130  118  106  94  82      
11      30  42  54  66  78  90  102  114  126  134  142  16  138  126  114  102  90      
12          50  62  74  86  98  110  122  134  32  16  16  16  134  122  110          
13          38  50  62  74  86  98  110  122  130  138  16  134  122  110  98          
14              38  50  62  74  86  98  110  118  126  134  122  110  98              
15              26  38  50  62  74  86  98  106  114  122  110  98  86              
16                      38  50  62  74  86  94  102  110  98                      
17                              50  62  74  82  90                              
18                                                                              
-------------------------- running turn 10 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs = 44
( 5, 4) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -99
(12,12) (enemy)     vulnerability = 14 attack_ratio =  0 health_diffs =  7
(10,11) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 10
(12,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -7
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 44
( 8, 9) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -14
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24  36  44  52  10  10                      
 3               0  10  10   0  10  36  48  56  64  72  60  10   0              
 4              10  20   0   0   0  48  60  68  76  84  72  60  10              
 5          10  20   0   0   0  48  60  72  80  88  96  84  72  60  10          
 6          10  12  12   0  48  60  72  84  92  100  108  96  84  72  10          
 7      10  22  24  12  48  60  72  84  96  104  112  120  108  96  84  72  10      
 8      10  24  36  48  60  72  84  96  108  116  124  132  120  108  96  84  10      
 9      10  36  48  60  72  84  96  38  120  128  136  144  132  120  108  96  10      
10      10  44  56  68  80  92  104  116  128  136  144  152  140  128  116  104  10      
11      10  52  64  76  88  100  112  124  136  34  152  16  148  136  124  112  10      
12          10  72  84  96  108  120  132  144  152  16  16  16  144  132  10          
13          10  60  72  84  96  108  120  132  140  148  16  144  132  120  10          
14              10  60  72  84  96  108  120  128  136  144  132  120  10              
15               0  10  60  72  84  96  108  116  124  132  120  10   0              
16                      10  10  72  84  96  104  112  10  10                      
17                              10  10  10  10  10                              
18                                                                              
-------------------------- running turn 11 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(17, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  6
(11,11) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 35
( 3,15) (enemy)     vulnerability = 10 attack_ratio =  1 health_diffs = 50
( 5, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(16,13) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(12,12) (enemy)     vulnerability =  5 attack_ratio = -1 health_diffs = -43
( 9, 9) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 7, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(17, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 1) (enemy)     vulnerability =  7 attack_ratio =  1 health_diffs = 50
( 8,17) (friendly)  vulnerability =  7 attack_ratio =  1 health_diffs = 50
( 3, 3) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,13) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -7
( 5, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 10
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  74   0   0                              
 2                      18   2  42  54  66  74   0  70  58                      
 3              16  18   2   2   2  46  58  66  74  62  50  38  26              
 4              18  20  12   2  12  38  50  58  66  54  42  30  18              
 5          18  20  12   2  12  28  30  42  50  58  46  34  22  20  18          
 6          20  12   2   2   2  30  32  34  42  50  38  26  24  22  20          
 7      20  32  44  12   2  30  32  34  36  34  42  30  28  26  24  22   0      
 8      32  44  56  48  40  32  34  36  38  36  34  32  30  28  26   0   0      
 9      44  56  68  60  52  44  36  38  40  38  36  34  32  30  28   0   0      
10      52  64  76  68  60  52  44  36  38  36  34  32  30  28  26  24   0      
11      60  72  84  76  68  60  52  44  36  34  32  16  28  26  24  22  20      
12          80  92  84  76  68  60  52  44  32  16  16  16  24  22   0          
13          88  100  92  84  76  68  60  52  40  28  16  24  22   0   0          
14               0  100  92  84  76  68  60  48  36  24  22  20  18              
15               0   0  100  92  84  76  68  56  44  32  20  18  16              
16                      88  80  72  64  56  44  32  20  18                      
17                              60  22  44  32  20                              
18                                                                              
-------------------------- running turn 12 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 15
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
(16, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10,13) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs =  8
(16, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11, 2) (enemy)     vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 9, 9) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -50
(15,13) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 3, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
( 8,16) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 3, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,15) (enemy)     vulnerability = 10 attack_ratio =  1 health_diffs = 50
( 7, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 1) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  10                              
 2                      18   2  22  24  26  10  10  10  18                      
 3              16  18   2   2   2  26  28  26  10  22  20  18  16              
 4              18  20   2   2  12  28  30  28  26  24  22  20  18              
 5          18  10   2   2   2  28  30  32  30  28  26  24  22  20  18          
 6          10  10  10   2  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22  10  46  38  30  32  34  36  34  32  30  28  26  24  12  20      
 8      22  34  46  58  50  42  34  36  38  36  34  32  30  28  12   2  12      
 9      34  46  58  70  62  54  46  38  40  38  36  34  32  30   2   2   2      
10      42  54  66  78  70  62  54  46  38  36  34  32  30  28  26   2  22      
11      50  62  74  86  78  70  62  54  46  34  32  16  28  26  24  22  20      
12          70  82  94  86  78  70  62  54  42  16  16  16  24   8  20          
13          78  90  102  94  86  78  70  62  30  38  16  24   8   8   8          
14              98   0  102  94  86  78  70  58  46  34  22  20   8              
15               0   0   0  102  94  86  78  66  54  42  30  18  16              
16                      98  90  82  24  66  54  42  30  18                      
17                              70  62  54  42  30                              
18                                                                              
-------------------------- running turn 13 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -45
( 9,13) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs =  8
( 9, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 45
(12,11) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 15
( 4,14) (enemy)     vulnerability =  9 attack_ratio =  1 health_diffs = 50
(14,13) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
(15, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  6
(10, 2) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  0
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,15) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 8, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18   2  22  24  12  12  12  20  18                      
 3              16  18   2   2   2  26  28  12  24  22  20  18  16              
 4              18  20   2   2  12  28  30  28  26  24  22  20  18              
 5          18  10   2   2   2  28  30  32  30  28  26  24  22  20  18          
 6          10  10  10   2  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22  10  46  38  30  32  34  36  34  32  30  28  26  14  22  20      
 8      22  34  46  58  50  42  34  36  38  36  34  32  30  14   4  14  22      
 9      34  46  58  70  62  54  46  38  40  38  36  34  32   4   4   4  24      
10      42  54  66  78  70  62  54  46  38  36  34  18  30  28   4  24  22      
11      50  62  74  86  78  70  62  54  46  34  18  18  18  26  24  22  20      
12          70  82  94  86  78  70  62  54  42  30  18  26  10  22  20          
13          78  90  88  94  86  78  70  32  50  38  26  10  10  10  18          
14              88  88  88  94  86  78  70  58  46  34  22  10  18              
15              86  88  90  82  74  26  58  46  34  22  20  18  16              
16                      78  70  62  54  46  34  22  20  18                      
17                              50  42  34  22  20                              
18                                                                              
-------------------------- running turn 14 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 3) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
(13,13) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 8,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 4, 4) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = 35
( 9, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -40
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 4, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  6
(12,10) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 15
( 5,14) (enemy)     vulnerability =  9 attack_ratio =  1 health_diffs = 50
(14, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 2) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  1
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -45
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18   2  22  24  12  12  12  20  18                      
 3              16  18   2   2   2  26  28  12  24  22  20  18  16              
 4               0  20   2   2  12  28  30  28  26  24  22  20  18              
 5           0   0   0   2   2  28  30  32  30  28  26  24  22  20  18          
 6          20   0  24   2  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22  24  36  48  40  32  34  36  34  32  30  28   8  24  22  20      
 8      22  24  36  48  60  52  44  36  38  36  34  32   8   8   8  24  22      
 9      24  36  48  60  72  64  56  48  40  38  36  20  18   8  18  26  24      
10      32  44  56  68  80  72  64  56  48  36  20  20  20  18  26  24  22      
11      40  52  64  76  88  80  72  64  56  44  32  20  28  26  24  22  20      
12          60  72  84  96  88  80  72  64  52  40  28  12  24  22  20          
13          68  80  92  90  96  88  80  72  60  48  12  12  12  20  18          
14              88  90  90  90  96  28  30  68  56  44  12  20  18              
15              76  88  90  92  84  76  68  56  44  32  20  18  16              
16                      88  80  72  64  56  44  32  20  18                      
17                              60  52  44  32  20                              
18                                                                              
-------------------------- running turn 15 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 4, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  6
( 9,13) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs =  8
(12,13) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
( 9, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -3
( 8, 4) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
(13, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 15
( 5, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs =  5
(13, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,14) (enemy)     vulnerability =  7 attack_ratio =  0 health_diffs =  0
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 2) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  3
( 3, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18   2  22  24  12  12  12  20  18                      
 3              16  18   2   2   2  26  28  12  24  22  20  18  16              
 4               8  20  12   2  12  28  30  28  26  24  22  20  18              
 5           8   8   8  14  12  28  30  32  30  28  26  24  22  20  18          
 6          20   8  14  14  14  30  32  34  32  30  28  26  24  22  20          
 7      20  22  24  26  14  30  32  34  36  34  32  30  18  26  24  22  20      
 8      22  24  26  28  30  42  34  36  38  36  34  18   8  18  26  24  22      
 9      24  26  28  30  42  54  46  38  40  38  22   8   8   8  28  26  24      
10      22  24  26  38  50  62  54  46  38  22  22  22   8  28  26  24  22      
11      20  22  34  46  58  70  62  54  46  34  22  30  28  26  24  22  20      
12          30  42  54  66  78  70  62  54  42  30  14  26  24  22  20          
13          38  50  62  74  16  78  70  32  50  14  14  14  22  20  18          
14              58  70  16  16  16  78  70  58  46  14  22  20  18              
15              46  58  70  16  74  66  58  46  34  22  20  18  16              
16                      58  70  62  54  46  34  22  20  18                      
17                              50  42  34  22  20                              
18                                                                              
-------------------------- running turn 16 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  8
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -45
( 9, 2) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -3
( 8, 5) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(12, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 45
( 9, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 15
(11,13) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 4, 3) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  6
(12, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 2) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  3
( 6,14) (enemy)     vulnerability =  6 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18   2  22  24  12  12  12  20  18                      
 3              16  18   2   2   2  26  28  12  24  22  20  18  16              
 4              18  20   2   2  12  28  30  28  26  24  22  20  18              
 5          18  10   2   2   2  28  30  32  30  28  26  24  22  20  18          
 6          10  10  10   2  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22  10  26  28  30  32  34  36  34  32  20  28  26  24  22  20      
 8      22  24  26  28  30  32  34  36  38  36  20  10  20  28  26  24  22      
 9      24  26  28  30  32  34  36  38  40  38  10  10  10  30  28  26  24      
10      22  24  26  28  30  32  34  36  38  22  22  10  30  28  26  24  22      
11      20  22  24  26  28  30  32  34  36  34  22  30  28  26  24  22  20      
12          20  22  24  26  28  30  32  34  32  16  28  26  24  22  20          
13          18  20  22  24  12  28  30  32  16  16  16  24  22  20  18          
14              18  20  12  12  12  28  30  28  16  24  22  20  18              
15              16  18  20  12  24  26  28  26  24  22  20  18  16              
16                      18  20  22  24  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 17 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 9,13) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -42
( 9, 2) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -2
( 5, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(10,13) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 42
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 6,14) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  0
( 9, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 35
(10,10) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -85
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 35
(11, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 9) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 6) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -46
( 3, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 40
(10, 2) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  2
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18   2  22  24  12  12  12  20  18                      
 3              16  18   2   2   2  26  28  12  24  22  20  18  16              
 4               0  20   2   2  12  28  30  28  26  24  22  20  18              
 5           0   0   0   2   2  28  30  32  30  28  26  24  22  20  18          
 6          20   0  24   2  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22  24  26  28  30  32  34  36  34  22  30  28  26  24  22  20      
 8      22  24  26  28  30  32  34  36  38  22  12  22  30  28  26  24  22      
 9      24  26  28  30  32  34  36  38  40  12  12  12  32  30  28  26  24      
10      22  24  26  28  30  32  34  36  24  24  12  32  30  28  26  24  22      
11      20  22  24  26  28  30  32  34  36  24  32  30  28  26  24  22  20      
12          20  22  24  26  28  30  32  34  18  30  28  26  24  22  20          
13          18  20  22  24  12  28  30  18  18  18  26  24  22  20  18          
14              18  20  12  12  12  28  30  18  26  24  22  20  18              
15              16  18  20  12  24  26  28  26  24  22  20  18  16              
16                      18  20  22  24  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 18 ---------------------------
frontline_radius = 0
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 34
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(10,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9, 2) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -1
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10,13) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 42
(11, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 8) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
( 3, 4) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 3) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  6
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 2) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  1
( 9, 6) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9,12) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -42
( 6,14) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  12  20                              
 2                      18   2  22  24  12  12  12  20  18                      
 3              16  18   2   2   2  26  28  12  24  22  20  18  16              
 4              18  20   2   2  12  28  30  28  26  24  22  20  18              
 5          18  10   2   2   2  28  30  32  30  28  26  24  22  20  18          
 6          10  10  10   2  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22  10  26  28  30  32  34  36  24  32  30  28  26  24  22  20      
 8      22  24  26  28  30  32  34  36  24  24  14  32  30  28  26  24  22      
 9      24  26  28  30  32  34  36  38  40   4  14  14  32  30  28  26  24      
10      22  24  26  28  30  32  34  36   4   4   4  32  30  28  26  24  22      
11      20  22  24  26  28  30  32  34  36   4  32  30  28  26  24  22  20      
12          20  22  24  26  28  30  32  34  18  30  28  26  24  22  20          
13          18  20  22  24  12  28  30  18  18  18  26  24  22  20  18          
14              18  20  12  12  12  28  30  18  26  24  22  20  18              
15              16  18  20  12  24  26  28  26  24  22  20  18  16              
16                      18  20  22  24  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 19 ---------------------------
frontline_radius = 0
( 6, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 44
( 9, 3) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -1
( 4, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -51
(10, 3) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  1
(10,13) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -49
( 5, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 7,14) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  1
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,11) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 3, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 10
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 7) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 3, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 45
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 6,14) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs = -1
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18   0  22  24  26  14  22  20  18                      
 3              16  18   0   0   0  26  14  14  14  22  20  18  16              
 4              18   0  10   0  26  28  30  14  26  24  22  20  18              
 5          18   0   0   0  26  28  30  32  30  28  26  24  22  20  18          
 6           0   0   0  26  28  30  32  34  32  30  28  26  24  22  20          
 7      20  22   0  26  28  30  32  34  26  34  32  30  28  26  24  22  20      
 8      22  24  26  28  30  32  34  26  26  12  34  32  30  28  26  24  22      
 9      24  26  28  30  32  34  36  38  12  12  12  34  32  30  28  26  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28  26  24  22      
11      20  22  24  26  28  30  32  34  36  34  22  30  28  26  24  22  20      
12          20  22  24  26  28  30  32  34  18  30  28  26  24  22  20          
13          18  20  22  24  12  28  30  18  18  18  26  24  22  20  18          
14              18  20  12  12  12  28  30  18  26  24  22  20  18              
15              16  18  20  12  24  26  28  26  24  22  20  18  16              
16                      18  20  22  24  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 20 ---------------------------
frontline_radius = 0
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5, 4) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 44
( 5, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 3, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
( 3, 4) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -49
( 7,14) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  2
(10,12) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 42
( 6, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  1
( 9,11) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 4) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 3) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -44
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
( 6,14) (enemy)     vulnerability =  6 attack_ratio =  0 health_diffs = -2
( 5, 2) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9, 7) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24  26  24  22  10  10                      
 3               0  10   0   0   0  26  28  16  24  22  20  10   0              
 4              10  10   0   0  26  28  16  16  16  24  22  20  10              
 5          10  10   0   0   0  28  30  32  16  28  26  24  22  20  10          
 6          10  10  10   0  28  30  32  34  32  30  28  26  24  22  10          
 7      10  22  10  26  28  30  32  34  26  34  32  30  28  26  24  22  10      
 8      10  24  26  28  30  32  34  26  26  12  34  32  30  28  26  24  10      
 9      10  26  28  30  32  34  36  38  12  12  12  34  32  30  28  26  10      
10      10  24  26  28  30  32  34  36  38  12  22  22  30  28  26  24  10      
11      10  22  24  26  28  30  32  34  36  20  22  30  28  26  24  22  10      
12          10  22  24  26  28  30  32  20  20  20  28  26  24  22  10          
13          10  20  22  24  12  28  30  32  20  28  26  24  22  20  10          
14              10  20  12  12  12  28  30  28  26  24  22  20  10              
15               0  10  20  12  24  26  28  26  24  22  20  10   0              
16                      10  10  22  24  26  24  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              
-------------------------- running turn 21 ---------------------------
frontline_radius = 0
( 3,15) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -49
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 16
( 1,11) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 8,14) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs =  7
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 3) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 42
( 6, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(11, 1) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 3, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 10
(15, 4) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(17,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
(16,12) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(10, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  1
(17, 9) (friendly)  vulnerability =  7 attack_ratio =  0 health_diffs =  0
( 6,13) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs =  5
( 7,17) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(14, 3) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 5) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24   0   0                              
 2                      18   0  22  24  26  24   0  20  18                      
 3               0   0   0   0   0  26  28  26  24  22  20  18  16              
 4               0   0  10   0  26  28  30  18  26  24  22  20  18              
 5          18   0   0   0  26  28  30  18  18  18  26  24  22  20  18          
 6           0   0   0  26  28  30  32  34  18  30  28  26  24  22  20          
 7      20  22   0  26  28  30  32  34  26  34  32  30  28  26  24  22  20      
 8      22  24  26  28  30  32  34  26  26  16  34  32  30  28  26  24  22      
 9      24  26  28  30  32  34  36  38  16  16   6  34  32  30  28  26   0      
10      22  24  26  28  30  32  34  36  38   6   6   6  30  28  26   0   0      
11      20  22  24  26  28  30  32  34  36  20   6  30  28  26  24   0   0      
12          20  22  24  26  14  30  32  20  20  20  28  26  24   0   0          
13          18  20  22  14  14  14  30  32  20  28  26  24  22  20   0          
14              18  20  22  14  26  28  30  28  26  24  22  20  18              
15              16  18  20  22  24  26  28  26  24  22  20  18  16              
16                      18  20   0  24  26  24  22  20  18                      
17                               0   0  24  22  20                              
18                                                                              
-------------------------- running turn 22 ---------------------------
frontline_radius = 0
( 7, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 4) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(10, 6) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = -24
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 25
( 7,16) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 3, 7) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 10
(15, 5) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,12) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 42
( 9,11) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 1,10) (friendly)  vulnerability =  8 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -7
( 6, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs =  7
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9, 6) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -1
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(17, 9) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs =  5
( 3, 4) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  10                              
 2                      18  20  12  24  26  10  10  10  18                      
 3               0  18  20   2  12  12  28  26  10  22  20  18  16              
 4               0   0   2   2   2  28  30  28  26  24  22  20  18              
 5          18   0  12  12   2  28  30  32  20  28  26  24  22  20  18          
 6          20  12  24  12  28  30  32  20  20  20  28  26  24  22  20          
 7      20  12  12  12  28  30  32  34  26  20  32  30  28  26  24  22  20      
 8      22  24  12  28  30  32  34  26  26  12  34  32  30  28  26  24  22      
 9      24  26  28  30  32  34  36  38  12  12  12  34  32  30  28  12  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28  12  12  12      
11      20  22  24  26  28  30  32  34  36  20  22  30  28  26  10  12  20      
12          20  22  24  26  28  16  32  20  20  20  28  26  10  10  10          
13          18  20  22  24  16  16  16  32  20  28  26  24  22  10  18          
14              18  20  22  24  16  28  30  28  26  24  22  20  18              
15              16  18  20  22  10  26  28  26  24  22  20  18  16              
16                      18  10  10  10  26  24  22  20  18                      
17                              10  22  24  22  20                              
18                                                                              
-------------------------- running turn 23 ---------------------------
frontline_radius = 0
( 8,13) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -2
( 5, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 4) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 34
( 3, 8) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 10
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 4) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = 35
(15,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 8, 6) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  6
( 8,16) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  7 attack_ratio =  1 health_diffs = 50
( 6, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -48
(17, 9) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(11, 3) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 7, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15, 6) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs =  7
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  12  20  18                      
 3              16   8  20  22  14  26  28  12  12  12  20  18  16              
 4               8   8   8   4  14  14  30  28  12  24  22  20  18              
 5          18  20   8   4   4   4  30  32  30  18  26  24  22  20  18          
 6          20  22  14  14   4  30  32  34  18  18  18  26  24  22  20          
 7      20  22  14  26  14  30  32  34  26  34  18  30  28  26  24  22  20      
 8      22  14  14  14  30  32  34  26  26  12  34  32  30  28  26  24  22      
 9      24  26  14  30  32  34  36  38  12  12  12  34  32  30  28  12  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28   2  12  12      
11      20  22  24  26  28  30  32  34  36  20  22  30  28   2   2   2  20      
12          20  22  24  26  28  30  18  20  20  20  28  26  24   2  20          
13          18  20  22  24  26  18  18  18  20  28  26  24  22  20  18          
14              18  20  22  24  26  18  30  28  26  24  22  20  18              
15              16  18  20  22  24  12  28  26  24  22  20  18  16              
16                      18  20  12  12  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 24 ---------------------------
frontline_radius = 0
( 6, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 2, 8) (enemy)     vulnerability =  6 attack_ratio =  0 health_diffs = -40
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
(10, 6) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = -7
(16,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 43
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs = 40
(10,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 42
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -6
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -43
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 7, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15, 7) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 6) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -1
(17, 9) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -3
( 5,14) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(12, 4) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(12, 3) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs =  0
( 8,15) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 43
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  22  10  18                      
 3              16  18   2  12  24  26  28  26  10  10  10  18  16              
 4              18   2   2   2   0  28  30  28  26  10  22  20  18              
 5          18  20  22   2   0   0   0  32  20  28  26  24  22  20  18          
 6          20  22  24   2   2   0  32  20  20  20  28  26  24  22  20          
 7      20  12  24  26  28   2  32  34  26  20  32  30  28  26  24  22  20      
 8      12  12  12  28  30  32  34  26  26  16  34  32  30  28  26  24  22      
 9      24  12  28  30  32  34  36  38  16  16   6  34  32  30  28   0  24      
10      22  24  26  28  30  32  34  36  38   6   6   6  30  28   0   0   0      
11      20  22  24  26  28  30  32  10  36  20   6  30  28  26  10   0  10      
12          20  22  24  26  28  10  10  10  20  20  28  26  24  22  10          
13          18  20  22  24  26  28  10  32  20  28  26  24  22  20  18          
14              18  20  22  24  26  14  30  28  26  24  22  20  18              
15              16  18  20  22  14  14  14  26  24  22  20  18  16              
16                      18  20  22  14  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 25 ---------------------------
frontline_radius = 0
( 7, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15, 8) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 8, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 44
( 6,14) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(10, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  7
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5, 5) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs = 40
( 7, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -9
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8, 6) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -49
( 8,16) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -34
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 8, 7) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
(16,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -48
(17, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 3, 8) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs = -40
(12, 4) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
(12, 3) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  0
(11, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs =  7
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  22  10  18                      
 3              16  18  20  22  14  26  28  26  10  10  10  18  16              
 4              18  20  12  14  14   0  30  28  26  10  22  20  18              
 5          18  20  12  12  12   0   0   0  30  18  26  24  22  20  18          
 6          20  22  24  12   4   4   0  34  18  18  18  26  24  22  20          
 7      20  22  14  26  28  30   4  34  36  24  18  30  28  26  24  22  20      
 8      22  14  14  14  30  32  34  36  24  12  24  32  30  28  26  24  22      
 9      24  26  14  30  32  34  36  38  12  12  12  34  32  30  28  12  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28   2  12  12      
11      20  22  24  26  28  30  32  20  36  10  22  30  28   2   2   2  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24   2  20          
13          18  20  22  24  26  28  20  32  10  28  26  24  22  20  18          
14              18  20  22  24  26  28  30  28  26  24  22  20  18              
15              16  18  20  22  24  12  28  26  24  22  20  18  16              
16                      18  20  12  12  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 26 ---------------------------
frontline_radius = 0
( 6, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
( 7,14) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 43
( 7,16) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 8, 5) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 44
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 2, 9) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs = 40
(11, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -25
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  1
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
(16,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 7, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 6) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -44
( 6, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -48
(17, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 3, 8) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs = -40
(12, 4) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -6
(12, 3) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -1
(15, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  22  10  18                      
 3              16  18  20  22  24  26  28  26  10  10  10  18  16              
 4              18  20  22   0   6   0  30  28  16  10  22  20  18              
 5          18  20  22   0   0   0   0   0  16  16  16  24  22  20  18          
 6          20  22  24  16   0   6   0  34  32  16  28  26  24  22  20          
 7      20  22  14  26  28  16  32  34  16  34  32  30  28  26  24  22  20      
 8      22  14  14  14  30  32  34  16  16  16  34  32  30  28  26  24  22      
 9      24  26  14  30  32  34  36  38  16  26  16  34  32  30  28   0  24      
10      22  24  26  28  30  32  34  36  38  16  16  16  30  28   0   0   0      
11      20  22  24  26  28  30  32  10  36  20  16  30  28  26  10   0  10      
12          20  22  24  26  28  10  10  10  20  20  28  26  24  22  10          
13          18  20  22  24  26  28  10  32  20  28  26  24  22  20  18          
14              18  20  22  24  26  28  30  28  26  24  22  20  18              
15              16  18  20  22  10  26  28  26  24  22  20  18  16              
16                      18  10  10  10  26  24  22  20  18                      
17                              10  22  24  22  20                              
18                                                                              
-------------------------- running turn 27 ---------------------------
frontline_radius = 0
( 7, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 4) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  1
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 7,16) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(14, 9) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 8, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
(10, 8) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  7
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs = 40
(11, 5) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs =  7
( 7, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(10, 9) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -34
( 6, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,14) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9, 6) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -44
( 9,13) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -48
(17, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 3, 8) (enemy)     vulnerability =  6 attack_ratio =  0 health_diffs = -40
(12, 3) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -1
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  22  10  18                      
 3              16  18  20  12   2  26  28  26  10  10  10  18  16              
 4              18  20  12   2   2   0  30  28  16  10  22  20  18              
 5          18  20  22  24  12   0   0   0  16  16  16  24  22  20  18          
 6          20  22  24  26   0   0   0  34  32  16  28  26  24  22  20          
 7      20  22  14  26  28  30   0  34  36  24  32  30  28  26  24  22  20      
 8      22  14  14  14  30  32  34  36  24  12  24  32  30  28  26  24  22      
 9      24  26  14  30  32  34  36  38  12  12  12  34  32  30  28  12  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28   2  12  12      
11      20  22  24  26  28  30  32  10  36  20  22  30  28   2   2   2  20      
12          20  22  24  26  28  10  10  10  20  20  28  26  24   2  20          
13          18  20  22  24  26  28  10  32  20  28  26  24  22  20  18          
14              18  20  22  24  26  28  30  28  26  24  22  20  18              
15              16  18  20  22  10  26  28  26  24  22  20  18  16              
16                      18  10  10  10  26  24  22  20  18                      
17                              10  22  24  22  20                              
18                                                                              
-------------------------- running turn 28 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -57
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 43
( 8, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7,15) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs = 40
( 7, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 9, 7) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = -1
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -25
(17, 9) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -2
(11, 3) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 31
( 3, 8) (enemy)     vulnerability =  6 attack_ratio =  0 health_diffs = -40
( 8, 8) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs =  1
(13, 5) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = 25
(13, 9) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  12  20  18                      
 3              16  18  20  22  24  26  28  12  12  12  20  18  16              
 4              18  20  22   0  16   6  30  28  12  14  22  20  18              
 5          18  20  22   0   0   0   6   6  30  14  14  14  22  20  18          
 6          20  22  24  26   0   0   0  34  32  30  14  26  24  22  20          
 7      20  22  14  26  28  30   0  34  26  34  32  30  28  26  24  22  20      
 8      22  14  14  14  30  32  34  26  26  12  34  32  30  28  26  24  22      
 9      24  26  14  30  32  34  36  38  12  12  12  34  32  30   2  12  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30   2   2   2  12      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  26   2  12  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  22  24  26  28  20  32  10  28  26  24  22  20  18          
14              18  20  22  24  12  28  30  28  26  24  22  20  18              
15              16  18  20  12  12  12  28  26  24  22  20  18  16              
16                      18  20  12  24  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 29 ---------------------------
frontline_radius = 0
( 7, 4) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -25
( 6, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 9) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(10, 8) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = 40
(10, 7) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -1
(10,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
( 8, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -1
(11, 4) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 31
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(17, 9) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -2
(13, 5) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = 25
( 3, 8) (enemy)     vulnerability =  5 attack_ratio =  0 health_diffs = -40
( 8,15) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(15, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  26  24  22  20  18                      
 3              16  18  20  22  14  26  28  26  14  22  20  18  16              
 4              18  20  22  14  14  14  30  14  14  14  22  20  18              
 5          18  20  22  24  16  14   0  32  30  14  16  24  22  20  18          
 6          20  22  24  16  16   0   0   0  32  16  16  16  24  22  20          
 7      20  22  14  26  28   6   6   0  36  24  32  16  28  26  24  22  20      
 8      22  14  14  14  30  32   6  36  24  12  24  32  30  28   2  24  22      
 9      24  26  14  30  32  34  36  38  12  12  12  34  32   2   2   2  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28   2  12  12      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  26  24  12  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  22  24  26  28  20  32  10  28  26  24  22  20  18          
14              18  20  22  24  26  14  30  28  26  24  22  20  18              
15              16  18  20  22  14  14  14  26  24  22  20  18  16              
16                      18  20  22  14  26  24  22  20  18                      
17                              20  22  24  22  20                              
18                                                                              
-------------------------- running turn 30 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -48
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -3
(10,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 34
(15, 8) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = 40
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -4
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 9, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -51
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 7, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(17, 9) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -2
(13, 5) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -6
( 3, 8) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24  26  24  22  10  10                      
 3               0  10  20  22  24  26  28  26  24   6  20  10   0              
 4              10  20  22  24  16  28  30  28   6   6   6  20  10              
 5          10  20  22  24  16  16  16  16  30  28   6  24  22  20  10          
 6          10  22  24  26  18   6  16  16  16  16  16  16  24  22  10          
 7      10  22  14  26  18   6   6   6  16  34  32  16  28  26  14  22  10      
 8      10  14  14  14  30  18   6  26  26  16  34  32  30  14  14  14  10      
 9      10  26  14  30  32  34  36  38  16  16   6  34  32  30  14  12  10      
10      10  24  26  28  30  32  34  36  38   6   6   6  30  28  12  12  10      
11      10  22  24  26  28  30  32  20  36  10   6  30  28  26  24  12  10      
12          10  22  24  26  28  20  20  10  10  10  28  26  24  22  10          
13          10  20  22  24  26  28  20  32  10  28  26  24  22  20  10          
14              10  20  22  24  26  14  30  28  26  24  22  20  10              
15               0  10  20  22  14  14  14  26  24  22  20  10   0              
16                      10  10  22  14  26  24  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              
-------------------------- running turn 31 ---------------------------
frontline_radius = 0
( 9, 1) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(16, 9) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
(12, 9) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 3,14) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
(10, 8) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 40
(10, 7) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -51
( 7, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
(11, 1) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 1,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,15) (enemy)     vulnerability =  6 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -1
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 2) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(10,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
( 9, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -2
(16, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -6
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5, 2) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 6,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20   0   0   0  20                              
 2                       0   0  22  24   0  24  22  20  18                      
 3              16  18   0  22  24  26  28  26  24   6  20  18  16              
 4              18  20  22  24  26  28  30  28   6   6   6  20  18              
 5          18  20  22  24  26  18  30   8  30  28   6  24  22  20  18          
 6          20  22  24  26  18   8   8   8   8  16  16  16  24  22  20          
 7      20  22  14  26  28   0   8   8   8  24  32  16  28  26  24   2  20      
 8      22  14  14  14   0   0   0  36  24  12  24  32  30  28   2   2   2      
 9      24  26  14  30  32   0  36  38  12  12  12  34  32  30  28   2  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28  12  12  12      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  26  24  12  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  22  24  26  28  20  32  10  28  26  24  22  20  18          
14              18  20  22  24  26  28  30  28  26  24  22  20   0              
15              16  18   0   0  24   0  28  26  24  22  20   0   0              
16                       0   0   0   0   0  24  22  20  18                      
17                              20   0  24  22  20                              
18                                                                              
-------------------------- running turn 32 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(12, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(12, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -31
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -34
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 7) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
(11, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,14) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,14) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 9, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 5, 3) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(16, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -6
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
(15, 9) (friendly)  vulnerability =  3 attack_ratio = -1 health_diffs = -50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  14  22  20                              
 2                       8  20  22  14  14  14  22  20  18                      
 3              16   8   8   8  24  26  14  26  24   6  20  18  16              
 4              18  20   8  24  26  28  30  28   6   6   6  20  18              
 5          18  20  22  24  26  28  10  22  30  28   6  24  22  20  18          
 6          20  22  24  26  28  10  10  10  22  16  16  16  24  22  20          
 7      20  22  14  26  28  10  20  10  12  34  32  16  28  26  24   2  20      
 8      22  14  14  14  10  10  10  12  12   2  34  32  30  28   2   2   2      
 9      24  26  14  30  32  10  36  38   2   2   2  34  32  30  28   2  24      
10      22  24  26  28  30  32  34  36  38   2  22  22  30  28  12  12  12      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  26  24  12  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  22  24  26  28  20  32  10  28  26  24  22   0  18          
14              18  20   8   0  26  28  30  28  26  24  22   0   0              
15              16   8   0   0   0  12  28  26  24  22  20  18   0              
16                       8   0  12  12  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 33 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
(10, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(14, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4,13) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 6, 3) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(14,14) (enemy)     vulnerability =  6 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -2
(11, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
(16, 8) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 19
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
( 9, 2) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -6
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  14  22  20                              
 2                      18  10  22  14  14  14  22  20  18                      
 3              16  18  10  10  10  26  14  26  24   0  20  18  16              
 4              18  20  22  10  26  28  30  28   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  20  28   0  24  22  20  18          
 6          20  22  24  26  28  10   0  20  20  10  10  10  24  22  20          
 7      20  22  14  26  28  10   0   0   0  20  32  10  28  26  24  12  20      
 8      22  14  14  14  20  20  10   0  26  12  34  32  30  28  12  12  12      
 9      24  26  14  30  32  20  36  38  12  12  12  34  32  30  28   2  24      
10      22  24  26  28  30  32  34  36  38  12  22  22  30  28   2   2   2      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  26  24   2  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  22  24   0  28  20  32  10  28  26  24   8  20  18          
14              18  20   0   0   0  28  30  28  26  24   8   8   8              
15              16   8   8   0  24  12  28  26  24  22  20   8  16              
16                       8  20  12  12  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 34 ---------------------------
frontline_radius = 0
( 7, 3) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 4,12) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
(15, 8) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 3) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(11, 3) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 19
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(13,14) (enemy)     vulnerability =  5 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -6
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  14  22  20                              
 2                      18  20  12  14  14  14  22  20  18                      
 3              16  18  20  12  12  12  14  26  24   6  20  18  16              
 4              18  20  22  24  12  28  30  28   6   6   6  20  18              
 5          18  20  22  24  26  28  30  32  30  28   6  24  22  20  18          
 6          20  22  24  26  28  10   0  34  16  16  16  16  24  22  20          
 7      20  22  14  26  28  10   0   0   0  16  16  16  28  26   4  22  20      
 8      22  14  14  14  20  20  10   0  26   6  34  32  30   4   4   4  22      
 9      24  26  14  30  32  20  36  38   6   6   6  34  32  30   4  26  24      
10      22  24  26  28  30  32  34  36  38   6  22  22  30  14  14  14  22      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  26  14  22  20      
12          20  22  24  26  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  22  10  26  28  20  32  10  28  26  10  22  20  18          
14              18  10  10   0  26  28  30  28  26  10  10  10  18              
15              16  18   0   0   0  12  28  26  24  22  10  18  16              
16                      18   0  12  12  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 35 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(10, 3) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5,12) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12,14) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 5,13) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 8, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -6
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
(13, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(14, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  14  22  20                              
 2                      18  20  22   4  14  14  22  20  18                      
 3              16  18  20  22   4   4   4  26  24   6  20  18  16              
 4              18  20  22  24  26   4  30  28   6   6   6  20  18              
 5          18  20  22  24  26  28  30  32  30  28   6  24  22  20  18          
 6          20  22  24  26  28  20   2  34  22  16  16  16  24  22  20          
 7      20  22  14  26  28  10   2   2   2  22  22  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   2  12   2  34  32   6   6   6  24  22      
 9      24  26  14  30  32  10  36  38   2   2   2  34  32   6  28  26  24      
10      22  24  26  28  30  32  34  36  38   2  22  22  16  16  16  24  22      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  16  24  22  20      
12          20  22  24  12  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  12  12  12  28  20  32  10  28  12  24  22  20  18          
14              18  20  12  24  12  28  30  28  12  12  12  20  18              
15              16  18  20  12  12   2  28  26  24  12  20  18  16              
16                      18  20   2   2   2  24  22  20  18                      
17                              20   2  24  22  20                              
18                                                                              
-------------------------- running turn 36 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5,13) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  1
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 5,12) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = -1
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 5) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 8, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 7) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -1 health_diffs = -6
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  14  22  20                              
 2                      18  20  22   4  14  14  22  20  18                      
 3              16  18  20  22   4   4   4  26  24   6  20  18  16              
 4              18  20  22  24  26   4  30  28   6   6   6  20  18              
 5          18  20  22  24  26  28  30  32  30  28   6  24  22  20  18          
 6          20  22  24  26  28  12  22  34  12  16  16  16  14  22  20          
 7      20  22  14  26  28   2  12  12   2  12  12  16  14  14  14  22  20      
 8      22  14  14  14   2   2   2   2   2   0  34  32  30  14  26  24  22      
 9      24  26  14  30  32   2  36  38   0   0   0  34  32  16  28  26  24      
10      22  24  26  28  30  32  34  36  38   0  22  22  16  16  16  24  22      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  16  24  22  20      
12          20  22  24  12  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  12  12  12  28  20  32  10  14  26  24  22  20  18          
14              18  20  12  24  26  14  30  14  14  14  22  20  18              
15              16  18  20  22  14   4  14  26  14  22  20  18  16              
16                      18  20   4   4   4  24  22  20  18                      
17                              20   4  24  22  20                              
18                                                                              
-------------------------- running turn 37 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5,13) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  2
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 5,12) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = -2
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(10, 5) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24   6  20                              
 2                      18  20  22  24   6   6   6  20  18                      
 3              16  18  20  22  24  16  16   6  24   0  20  18  16              
 4              18  20  22  24  26  28  16  28   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  30  28   0  24  12  20  18          
 6          20  22  24  26  28  12  22  34  12   2   2   2  12  12  20          
 7      20  22  14  26  28   2  12  12   2  12  12   2  28  12  24  22  20      
 8      22  14  14  14   2   2   2   2   2   0  34  32  30  28  26  24  22      
 9      24  26  14  30  32   2  36  38   0   0   0  34  32  16  28  26  24      
10      22  24  26  28  30  32  34  36  38   0  22  22  16  16  16  24  22      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  16  24  22  20      
12          20  22  24  12  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  12  12  12  28  20  32  10  14  26  24  22  20  18          
14              18  20  12  24  26  14  30  14  14  14  22  20  18              
15              16  18  20  22  14   4  14  26  14  22  20  18  16              
16                      18  20   4   4   4  24  22  20  18                      
17                              20   4  24  22  20                              
18                                                                              
-------------------------- running turn 38 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5,13) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  3
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(10, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5,12) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = -3
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24  16   6  22  20  18                      
 3              16  18  20  22  24  16   6   6   6   0  20  18  16              
 4              18  20  22  24  26  28  16   6   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  30  28   0  24  12  20  18          
 6          20  22  24  26  28  12  22  34  12   2   2   2  12  12  20          
 7      20  22  14  26  28   2  12  12   2  12  12   2  28  12  24  22  20      
 8      22  14  14  14   2   2   2   2   2   0  34  32  30  28  26  24  22      
 9      24  26  14  30  32   2  36  38   0   0   0  34  32  16  28  26  24      
10      22  24  26  28  30  32  34  36  38   0  22  22  16  16  16  24  22      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  16  24  22  20      
12          20  22  24  12  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  12  12  12  28  20  32  10  14  26  24  22  20  18          
14              18  20  12  24  26  14  30  14  14  14  22  20  18              
15              16  18  20  22  14   4  14  26  14  22  20  18  16              
16                      18  20   4   4   4  24  22  20  18                      
17                              20   4  24  22  20                              
18                                                                              
-------------------------- running turn 39 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5,13) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  2
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 5,12) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = -2
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20  18                      
 3              16  18  20  22  24   6   6   6  24   0  20  18  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24  12  20  18          
 6          20  22  24  26  28  12  22  34  12   2   2   2  12  12  20          
 7      20  22  14  26  28   2  12  12   2  12  12   2  28  12  24  22  20      
 8      22  14  14  14   2   2   2   2   2   0  34  32  30  28  26  24  22      
 9      24  26  14  30  32   2  36  38   0   0   0  34  32  16  28  26  24      
10      22  24  26  28  30  32  34  36  38   0  22  22  16  16  16  24  22      
11      20  22  24  26  28  30  32  20  36  10  22  30  28  16  24  22  20      
12          20  22  24  12  28  20  20  10  10  10  28  26  24  22  20          
13          18  20  12  12  12  28  20  32  10  14  26  24  22  20  18          
14              18  20  12  24  26  14  30  14  14  14  22  20  18              
15              16  18  20  22  14   4  14  26  14  22  20  18  16              
16                      18  20   4   4   4  24  22  20  18                      
17                              20   4  24  22  20                              
18                                                                              
-------------------------- running turn 40 ---------------------------
frontline_radius = 0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 5,13) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  2
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 5,12) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs = -2
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24   6  24  22  10  10                      
 3               0  10  20  22  24   6   6   6  24   0  20  10   0              
 4              10  20  22  24  26  28   6  16   0   0   0  20  10              
 5          10  20  22  24  26  28  30  32  16  28   0  24  12  20  10          
 6          10  22  24  26  28  12  22  34  12   2   2   2  12  12  10          
 7      10  22  14  26  28   2  12  12   2  12  12   2  28  12  24  22  10      
 8      10  14  14  14   2   2   2   2   2   0  34  32  30  28  26  24  10      
 9      10  26  14  30  32   2  36  38   0   0   0  34  32  16  28  26  10      
10      10  24  26  28  30  32  34  36  38   0  22  22  16  16  16  24  10      
11      10  22  24  26  28  30  32  20  36  10  22  30  28  16  24  22  10      
12          10  22  24  12  28  20  20  10  10  10  28  26  24  22  10          
13          10  20  12  12  12  28  20  32  10  14  26  24  22  20  10          
14              10  20  12  24  26  14  30  14  14  14  22  20  10              
15               0  10  20  22  14   4  14  26  14  22  20  10   0              
16                      10  10   4   4   4  24  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              
-------------------------- running turn 41 ---------------------------
frontline_radius = 0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,17) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3,14) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(13, 2) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
(10, 1) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,12) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -2
(15,14) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(11,17) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5,16) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
(17, 9) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 4, 3) (friendly)  vulnerability =  7 attack_ratio =  1 health_diffs = 50
( 6,13) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  2
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22   0   0                      
 3              16  18  20  22  24   6   6   6  24   6   0  18  16              
 4              18  20  22  24  26  28   6  16   6   6   6  20  18              
 5          18  20  22  24  26  28  30  32  16  28   6  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  28  26  24   0      
 9      24  26  14  30  32  10  36  38   6   6   6  34  32  16  28   0   0      
10      22  24  26  28  30  32  34  36  38   6  22  22  16  16  16  24   0      
11      20  22  24  26  28  30  32  10  36  20  22  30  28  16  24  22  20      
12          20  22  24  26  14  10  10  10  20  20  28  26  24  22  20          
13          18   0  22  14  14  14  10  32  20  14  26  24  22   0  18          
14               0   0  22  14  26   2  30  14  14  14  22   0   0              
15               0  18   0  22   2   2   2  26  14  22  20  18   0              
16                       0   0  12   2  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 42 ---------------------------
frontline_radius = 0
(11,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(16, 9) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 3,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 4) (friendly)  vulnerability =  6 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(14,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6,11) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs =  3
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  28  26  14  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34  32  16  14  14  14      
10      22  24  26  28  30  32  34  36  38   6  22  22  16  16  16  14  22      
11      20  22  24  26  28  30  32  10  36  20  22  30  28  16  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20   8  24   0   0   0  32  20  14  26  24   8  20  18          
14               8   8   0  24   0   2  30  14  14  14   8   8   8              
15              16   0   0   0   2   2   2  26  14  22  20   8  16              
16                       0  20  12   2  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              
-------------------------- running turn 43 ---------------------------
frontline_radius = 0
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 6,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  3
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 4,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 4, 5) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(13,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  28   6  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34  32   6   6   6  24      
10      22  24  26  28  30  32  34  36  38   6  22  22  16  16   6  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30  28  16  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22   0   0   0   0  32  20  14  26   4  22  20  18          
14              18   0   0   0   0   2  30  14  14   4   4   4  18              
15              16   8   0   8   2   2   2  26  14  22   4  18  16              
16                       8  20  12   2  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
10 participants
     3   4   5   6   7   8   9  10  11  
 8                   -   -             
 9       -       -   X   X             
10       X   -   X   -   -   X   -     
11                           X   -     
12                                     
13                           X   -     
14                       -   X   -     
15                           -   X   - 
16                               X   - 
17                                     

Awarded move for (6, 10)  to (7, 10)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     3   4   5   6   7   8   9  10  11  
 8                   -   -             
 9       -       -   X   X             
10       X   -           -   X   -     
11                           X   -     
12                                     
13                           X   -     
14                       -   X   -     
15                           -   X   - 
16                               X   - 
17                                     

System can be split into 5 systems
Solving system # 0
(4, 10) - {'options': [(5, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 1
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
(10, 15) - {'options': [(10, 15), (10, 16), (11, 15)], 'scores': [0, -2, -12]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8)], 'scores': [2, 0, -26, -26]}
Solving system # 2
(10, 15) - {'options': [(10, 15), (10, 16), (11, 15)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
(10, 15) - {'options': [(10, 15), (10, 16), (11, 15)], 'scores': [0, -2, -12]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8)], 'scores': [2, 0, -26, -26]}
Solving system # 3
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 4
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [2, 0, -26]}
This subsystem has less than 10000 options, solving
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8)], 'scores': [2, 0, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(4, 10): {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(6, 10): {'options': [(7, 10)], 'scores': [2]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with [(4, 10)]
outcome = 
num_optional - 1
optional - [(4, 9), (5, 10)]
occupied - []
available_bots - [(4, 10)]
levels - {30: [(4, 9), (5, 10)]}
max_score - 30

-------------------------------------
TARGET system:
1 participants
()
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       1                             
10           1                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     


The initial system score was 320
The maximum obtainable for the system is 324
The score gain were looking for is 4
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(4, 10)]
bots_outside_system_moving_to_optional  = [(4, 10)]
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 0
current_bots_in_optional = [(4, 10)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       6                             
10      16  16                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

The system now has a total of 2 options
Optional squares exist

System result = ...
The system has a total of 2 options
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

System can be split into 10 systems
Solving system # 0
(4, 10) - {'options': [(5, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(4, 10): {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(6, 10): {'options': [(7, 10)], 'scores': [2]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with [(4, 10)]
outcome = 
num_optional - 1
optional - [(4, 9), (5, 10)]
occupied - []
available_bots - [(4, 10)]
levels - {30: [(4, 9), (5, 10)]}
max_score - 30

-------------------------------------
TARGET system:
1 participants
()
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       1                             
10           1                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     


The initial system score was 320
The maximum obtainable for the system is 324
The score gain were looking for is 4
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(4, 10)]
bots_outside_system_moving_to_optional  = [(4, 10)]
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 0
current_bots_in_optional = [(4, 10)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  
 8                                     
 9       6                             
10      16  16                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

The system now has a total of 2 options
Optional squares exist

System result = ...
The system has a total of 2 options
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(6, 10) - {'options': [(7, 10)], 'scores': [2]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  5.116000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
It took  0.624000ms for system_walk to complete
system walk returned 1 possibilities
checking possibility for score of 4
this possibility has a score of 4
checking
{(4, 10): {'options': [(5, 10)], 'scores': [2]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 16): {'options': [(10, 16)], 'scores': [0]}, (6, 10): {'options': [(7, 10)], 'scores': [2]}, (10, 15): {'options': [(10, 15)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
4 -> 10
9 -> 14
9 -> 13
10 -> 16
6 -> 10
10 -> 15
9 -> 10
9 -> 11
8 -> 9
7 -> 9
It took a total of 5.12 Ms for simplify_system to complete
It took a total of 0.02 Ms for start to complete
It took a total of 0.62 Ms for system_walk to complete
-------------------------- running turn 44 ---------------------------
frontline_radius = 0
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 5) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(14,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 5,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  28   6  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34  32   6   6   6  24      
10      22  24  26  28  30  32  34  36  38   6  22  22  16  16   6  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30  28  16  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14   4  24  22  20  18          
14              18  20   2  12   0   2  30  14   4   4   4  20  18              
15              16   2   2   2   2   2   2  26  14   4  20  18  16              
16                       2  20  12   2  12  24  22  20  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 8                   -             
 9           -   X   X             
10               X   -   X   -     
11               -       X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 8                   -             
 9           -   X   X             
10               X   -   X   -     
11               -       X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(10, 15) - {'options': [(10, 15), (10, 16), (11, 15)], 'scores': [0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (11, 15)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(10, 15) - {'options': [(10, 15), (10, 16), (11, 15)], 'scores': [0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
Solving system # 2
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
Solving system # 3
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(7, 10): {'options': [(8, 10)], 'scores': [2]}
(5, 10): {'options': [(5, 9)], 'scores': [2]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 324
The maximum obtainable for the system is 328
The score gain were looking for is 4
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(8, 10)], 'scores': [2]}
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 10 systems
Solving system # 0
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(7, 10) - {'options': [(8, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 7
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 8
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(7, 10): {'options': [(8, 10)], 'scores': [2]}
(5, 10): {'options': [(5, 9)], 'scores': [2]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 324
The maximum obtainable for the system is 328
The score gain were looking for is 4
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(8, 10)], 'scores': [2]}
(5, 10) - {'options': [(5, 9)], 'scores': [2]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  6.646000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 6.65 Ms for simplify_system to complete
-------------------------- running turn 45 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 5, 6) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  0
(12, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24  22  20  18          
14              18  20   2  12   0   2  30  14  14   4  22  20  18              
15              16   2   2   2   2   2   2  26   4   4   4  18  16              
16                       2  20  12   2  12  24  22   4  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 3 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -28]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 328
The maximum obtainable for the system is 328
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 10 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 328
The maximum obtainable for the system is 328
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.264000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.26 Ms for simplify_system to complete
-------------------------- running turn 46 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 10
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13,10) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -60
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24  22  20  18          
14              18  20   2  12   0   2  30  14  14   4  22  20  18              
15              16   2   2   2   2   2   2  26   4   4   4  18  16              
16                       2  20  12   2  12  24  22   4  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -28]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.020000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 8.02 Ms for simplify_system to complete
-------------------------- running turn 47 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 42
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24  22  20  18          
14              18  20   2  12   0   2  30  14  14   4  22  20  18              
15              16   2   2   2   2   2   2  26   4   4   4  18  16              
16                       2  20  12   2  12  24  22   4  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -28]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.919000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.92 Ms for simplify_system to complete
-------------------------- running turn 48 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 42
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24  22  20  18          
14              18  20   2  12   0   2  30  14  14   4  22  20  18              
15              16   2   2   2   2   2   2  26   4   4   4  18  16              
16                       2  20  12   2  12  24  22   4  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -28]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.774000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.77 Ms for simplify_system to complete
-------------------------- running turn 49 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 42
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24  22  20  18          
14              18  20   2  12   0   2  30  14  14   4  22  20  18              
15              16   2   2   2   2   2   2  26   4   4   4  18  16              
16                       2  20  12   2  12  24  22   4  18                      
17                              20  12  24  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -28]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.911000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.91 Ms for simplify_system to complete
-------------------------- running turn 50 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 1) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 42
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24   6  24  22  10  10                      
 3               0  10  20  22  24   6   6   6  24   0   8  10   0              
 4              10  20  22  24  26  28   6  16   0   0   0  20  10              
 5          10  20  22  24  26  28  30  32  16  28   0  24   6  20  10          
 6          10  22  24  26  28  20   6  34  16  16  16   6   6   6  10          
 7      10  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  10      
 8      10  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  10      
 9      10  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  10      
10      10  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  10      
11      10  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  10      
12          10  22  24  26  28   0  10  10  20  20  28  26  24  22  10          
13          10  20  22  24   0   0   0  32  20  14  26  24  22  20  10          
14              10  20   2  12   0   2  30  14  14   4  22  20  10              
15               0  10   2   2   2   2   2  26   4   4   4  10   0              
16                      10  10  12   2  12  24  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -28]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -28, -28]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.796000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.80 Ms for simplify_system to complete
-------------------------- running turn 51 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(17, 8) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -100
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 42
( 1,11) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 2, 9) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs =  0
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 2, 6) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(17,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15,14) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 4) (friendly)  vulnerability =  5 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5           0  20  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6           0   0  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20   0  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24  22   0  18          
14              18  20   2  12   0   0  30  14  14   4  22   0   0              
15              16   2   0   2   0   0   0  26   4   4   4  18   0              
16                       0   0   0   0   0  24  22   4  18                      
17                               0   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.730000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.73 Ms for simplify_system to complete
-------------------------- running turn 52 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 42
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 4, 4) (friendly)  vulnerability =  4 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 3, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 1,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  0
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  0
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
(16, 8) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7,17) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  10  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          10  10  10  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22   0  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22   0   0   0  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26   0  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  10   0   0   0  32  20  14  26  24   8  20  18          
14              18  10  10   0   0   0  30  14  14   4   8   8   8              
15              16  18   0   0   0   0   0  26   4   4   4   8  16              
16                       0   0  12   0   2   2  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [24, 20]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [24, 20]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [20]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [20]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 334
The maximum obtainable for the system is 354
The score gain were looking for is 20
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [20]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(11, 16)], 'scores': [20]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [20]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 334
The maximum obtainable for the system is 354
The score gain were looking for is 20
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [20]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.716000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.72 Ms for simplify_system to complete
-------------------------- running turn 53 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -108
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs =  8
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 10
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs =  8
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = -42
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -40
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4               8  20  22  24  26  28   6  16   0   0   0  20  18              
 5           8   8   8  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20   8  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24   8  20  18          
14              18  20   0  12   0   0  30  14  14   4   8   8   8              
15              16   0   0   0   0   0   0  26   4   4   4   8  16              
16                       0  20   0   0   0   0  22   4  18                      
17                              20   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.047000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 8.05 Ms for simplify_system to complete
-------------------------- running turn 54 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  8
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -2
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -32
( 7,17) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -58
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4               8  20  22  24  26  28   6  16   0   0   0  20  18              
 5           8   8   8  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20   8  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  10   0   0   0  32  20  14  26  24   8  20  18          
14              18  10  10   0   0   0  30  14  14   4   8   8   8              
15              16  18   0   0   0   0   0  26   4   4   4   8  16              
16                      18   0   2   0   0   0  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.661000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.66 Ms for simplify_system to complete
-------------------------- running turn 55 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -126
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs = 26
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 28
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs = 26
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  1
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -1
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = -24
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -22
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4               8  20  22  24  26  28   6  16   0   0   0  20  18              
 5           8   8   8  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20   8  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24   8  20  18          
14              18  20   0  12   0   0  30  14  14   4   8   8   8              
15              16   0   0   0   0   0   0  26   4   4   4   8  16              
16                       0  20   0   0   0   0  22   4  18                      
17                              20   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.672000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.67 Ms for simplify_system to complete
-------------------------- running turn 56 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 26
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  3
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 26
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -3
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -14
( 7,17) (friendly)  vulnerability =  4 attack_ratio = -1 health_diffs = -76
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4               8  20  22  24  26  28   6  16   0   0   0  20  18              
 5           8   8   8  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20   8  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  10   0   0   0  32  20  14  26  24   8  20  18          
14              18  10  10   0   0   0  30  14  14   4   8   8   8              
15              16  18   0   0   0   0   0  26   4   4   4   8  16              
16                      18   0   2   0   0   0  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.790000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 8.79 Ms for simplify_system to complete
-------------------------- running turn 57 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -146
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs = 46
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 46
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs = 46
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  4
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -49
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -4
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = -4
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -5
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4               8  20  22  24  26  28   6  16   0   0   0  20  18              
 5           8   8   8  24  26  28  30  32  16  28   0  24   6  20  18          
 6          20   8  24  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24   8  20  18          
14              18  20   0  12   0   0  30  14  14   4   8   8   8              
15              16   0   0   0   0   0   0  26   4   4   4   8  16              
16                       0  20   0   0   0   0  22   4  18                      
17                              20   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 11 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 332
The maximum obtainable for the system is 354
The score gain were looking for is 22
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.718000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.72 Ms for simplify_system to complete
-------------------------- running turn 58 ---------------------------
frontline_radius = 0
(11,16) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -46
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 3, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 46
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  4
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 46
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 46
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -96
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  10  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          10  10  10  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22   0  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22   0   0   0  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26   0  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  10   0   0   0  32  20  14  26  24   8  20  18          
14              18  10  10   0   0   0  30  14  14   4   8   8   8              
15              16  18   0   0   0   0   0  26   4   4   4   8  16              
16                      18   0   2   0   2  24  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              
-------------------------- running turn 59 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  5
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 46
( 3, 6) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 10
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 5, 5) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 14
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -46
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  22  24  26  28   6  16   0   0   0  20  18              
 5          18  10  22  24  26  28  30  32  16  28   0  24   6  20  18          
 6          10  10  10  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22   0  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22   0   0   0  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26   0  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11      20  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  20      
12          20  22  24  26  28   0  10  10  20  20  28  26  24  22  20          
13          18  20  22  24   0   0   0  32  20  14  26  24   8  20  18          
14              18  20   0  12   0   0  30  14  14   4   8   8   8              
15              16   0   0   0   0   0   0  26   4   4   4   8  16              
16                       0  20   0   0   0  24  22   4  18                      
17                              20   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5       X   -                     
 6       -                         
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5       X   -                     
 6       -                         
 7                                 
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 5 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(5, 5) - {'options': [(5, 6), (6, 5)], 'scores': [2, 2]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(10, 16) - {'options': [(10, 15), (10, 16), (11, 16)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 16), (10, 14), (11, 15)], 'scores': [0, -2, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 5) - {'options': [(5, 6)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 3
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(5, 5) - {'options': [(5, 6), (6, 5)], 'scores': [2, 2]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(5, 5): {'options': [(5, 6), (6, 5)], 'scores': [2, 2]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with [(5, 5)]
outcome = 
num_optional - 1
optional - [(5, 6), (6, 5)]
occupied - []
available_bots - [(5, 5)]
levels - {26: [(5, 6), (6, 5)]}
max_score - 26

-------------------------------------
TARGET system:
1 participants
()
     4   5   6   7   8   9  10  11  
 4                                 
 5           1                     
 6       1                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 380
The maximum obtainable for the system is 382
The score gain were looking for is 2
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(5, 5)]
bots_outside_system_moving_to_optional  = [(5, 5)]
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 0
current_bots_in_optional = [(5, 5)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
1 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5       X   -                     
 6       -                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 4                                 
 5      24  26                     
 6      26                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 2 options
Optional squares exist

System result = ...
The system has a total of 2 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(5, 5) - {'options': [(5, 6), (6, 5)], 'scores': [2, 2]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
1 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5       X   -                     
 6       -                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
1 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5       X   -                     
 6       -                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 12 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(5, 5) - {'options': [(5, 6)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 3
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(5, 5): {'options': [(5, 6), (6, 5)], 'scores': [2, 2]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(10, 16): {'options': [(10, 16)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with [(5, 5)]
outcome = 
num_optional - 1
optional - [(5, 6), (6, 5)]
occupied - []
available_bots - [(5, 5)]
levels - {26: [(5, 6), (6, 5)]}
max_score - 26

-------------------------------------
TARGET system:
1 participants
()
     4   5   6   7   8   9  10  11  
 4                                 
 5           1                     
 6       1                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 380
The maximum obtainable for the system is 382
The score gain were looking for is 2
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(5, 5)]
bots_outside_system_moving_to_optional  = [(5, 5)]
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 0
current_bots_in_optional = [(5, 5)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
1 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5       X   -                     
 6       -                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 4                                 
 5      24  26                     
 6      26                         
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 2 options
Optional squares exist

System result = ...
The system has a total of 2 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(5, 5) - {'options': [(5, 6), (6, 5)], 'scores': [2, 2]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 16) - {'options': [(10, 16)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.636000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
It took  0.723000ms for system_walk to complete
system walk returned 1 possibilities
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (5, 5): {'options': [(5, 6)], 'scores': [2]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 16): {'options': [(10, 16)], 'scores': [0]}, (5, 7): {'options': [(5, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (10, 15): {'options': [(10, 15)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
5 -> 9
9 -> 14
5 -> 5
9 -> 13
10 -> 16
5 -> 7
8 -> 10
10 -> 15
9 -> 10
9 -> 11
8 -> 9
7 -> 9
It took a total of 8.64 Ms for simplify_system to complete
It took a total of 0.03 Ms for start to complete
It took a total of 0.72 Ms for system_walk to complete
-------------------------- running turn 60 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -10
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 5, 6) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  4
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(14,14) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,15) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = -54
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -4
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -46
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24   6  24  22  10  10                      
 3               0  10  20  22  24   6   6   6  24   0   8  10   0              
 4              10  20  22  24  26  28   6  16   0   0   0  20  10              
 5          10  20  12  24  26  28  30  32  16  28   0  24   6  20  10          
 6          10  12  12  12  28  20   6  34  16  16  16   6   6   6  10          
 7      10  22  14  12  28  10   6   6   6  16  16  16  28   6  24  22  10      
 8      10  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  10      
 9      10  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  10      
10      10  24  26  28  30  32  34  36  38   6  22   8   8   8  26  24  10      
11      10  22  24  26  28  30  32  10  36  20  22  30   8  26  24  22  10      
12          10  22  24  26  28   0  10  10  20  20  28  26  24  22  10          
13          10  20  22  24   0   0   0  32  20  14  26  24   8  20  10          
14              10  20  22   0   0   0  30  14  14   4   8   8  10              
15               0  10   0   0   0   0   0  26   4   4   4  10   0              
16                      10  10   0   0   0   0  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6       X   -                     
 7   -   X                         
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6       X   -                     
 7   -   X                         
 8               -   -             
 9           -   X   X             
10               -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -   X   - 
16                           X   - 
17                                 

System can be split into 4 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(5, 6) - {'options': [(5, 7), (6, 6)], 'scores': [16, 16]}
(10, 16) - {'options': [(10, 15), (11, 16)], 'scores': [26, 22]}
(5, 7) - {'options': [(5, 7), (5, 6), (4, 7)], 'scores': [0, -16, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15), (10, 14), (11, 15)], 'scores': [0, -12, -22]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 6) - {'options': [(5, 7), (6, 6)], 'scores': [16, 16]}
(5, 7) - {'options': [(5, 7), (5, 6)], 'scores': [0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(5, 6) - {'options': [(5, 7), (6, 6)], 'scores': [16, 16]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7), (5, 6), (4, 7)], 'scores': [0, -16, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 3
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(5, 6) - {'options': [(6, 6)], 'scores': [16]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(5, 6): {'options': [(6, 6)], 'scores': [16]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 344
The maximum obtainable for the system is 382
The score gain were looking for is 38
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(5, 6) - {'options': [(6, 6)], 'scores': [16]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

System can be split into 12 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(5, 6) - {'options': [(6, 6)], 'scores': [16]}
This system has 1 move so it already solved!
Solving system # 4
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
This system has 1 move so it already solved!
Solving system # 5
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(5, 6): {'options': [(6, 6)], 'scores': [16]}
(10, 16): {'options': [(11, 16)], 'scores': [22]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 


The initial system score was 344
The maximum obtainable for the system is 382
The score gain were looking for is 38
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 
17                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(5, 6) - {'options': [(6, 6)], 'scores': [16]}
(10, 16) - {'options': [(11, 16)], 'scores': [22]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.235000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 8.23 Ms for simplify_system to complete
-------------------------- running turn 61 ---------------------------
frontline_radius = 0
(11,16) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -96
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(16, 6) (friendly)  vulnerability =  3 attack_ratio =  1 health_diffs = 50
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 2,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
( 1,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 6,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 5, 6) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  4
( 2,13) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
(14,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(17,10) (enemy)     vulnerability =  4 attack_ratio = -1 health_diffs = -50
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
( 2,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 46
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -4
( 5, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6,16) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  10  22  24  26  28   6  16   0   0   0  20  18              
 5          18  10  10  10  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  10  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26   0      
10       0  24  26  28  30  32  34  36  38   6  22   8   8   8  26   0   0      
11       0   0  24  26  28  30  32  10  36  20  22  30   8  26  24  22   0      
12           0   0  24  26  28   0  10  10  20  20  28  26  24  22  20          
13           0  20  22  24   0   0   0  32  20  14  26  24   8   0  18          
14              18  20  12   0   0   0  30  14  14   4   8   0   0              
15              16  18  20   0   0   0   0   0   4   4   4   8   0              
16                       0   0   0   0   0   0   0   4  18                      
17                              20   0  24   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  12  
 5                                     
 6       X   -                         
 7   -   X                             
 8               -   -                 
 9           -   X   X                 
10               -   X   X   -         
11                   -   X   -         
12                                     
13                       X   -         
14                   -   X   -         
15                       -   X   -     
16                                     
17                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  12  
 5                                     
 6       X   -                         
 7   -   X                             
 8               -   -                 
 9           -   X   X                 
10               -   X   X   -         
11                   -   X   -         
12                                     
13                       X   -         
14                   -   X   -         
15                       -   X   -     
16                                     
17                                     

System can be split into 5 systems
Solving system # 0
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
This system has 1 move so it already solved!
Solving system # 1
(10, 15) - {'options': [(10, 14), (11, 15)], 'scores': [14, 4]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15)], 'scores': [2, 0, -16, -30]}
This subsystem has less than 10000 options, solving
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 6) - {'options': [(5, 7), (6, 6)], 'scores': [2, 2]}
(5, 7) - {'options': [(5, 7), (5, 6), (4, 7)], 'scores': [0, -2, -2]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 14), (11, 15), (10, 15)], 'scores': [14, 4, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(5, 6) - {'options': [(5, 7), (6, 6)], 'scores': [2, 2]}
(5, 7) - {'options': [(5, 7), (5, 6)], 'scores': [0, -2]}
This subsystem has less than 10000 options, solving
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 6) - {'options': [(5, 7), (6, 6)], 'scores': [2, 2]}
(5, 7) - {'options': [(5, 7), (5, 6), (4, 7)], 'scores': [0, -2, -2]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 14)], 'scores': [14]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 4
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 6) - {'options': [(6, 6)], 'scores': [2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 14)], 'scores': [14]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(11, 16): {'options': [(11, 17)], 'scores': [20]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(5, 6): {'options': [(6, 6)], 'scores': [2]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 14)], 'scores': [14]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     


The initial system score was 332
The maximum obtainable for the system is 368
The score gain were looking for is 36
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 6) - {'options': [(6, 6)], 'scores': [2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 14)], 'scores': [14]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

System can be split into 12 systems
Solving system # 0
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
This system has 1 move so it already solved!
Solving system # 1
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 6) - {'options': [(6, 6)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 5
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(10, 15) - {'options': [(10, 14)], 'scores': [14]}
This system has 1 move so it already solved!
Solving system # 8
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(11, 16): {'options': [(11, 17)], 'scores': [20]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(5, 6): {'options': [(6, 6)], 'scores': [2]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 14)], 'scores': [14]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     


The initial system score was 332
The maximum obtainable for the system is 368
The score gain were looking for is 36
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  
 5                                     
 6                                     
 7                                     
 8                                     
 9                                     
10                                     
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(11, 16) - {'options': [(11, 17)], 'scores': [20]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 6) - {'options': [(6, 6)], 'scores': [2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 14)], 'scores': [14]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.263000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 8.26 Ms for simplify_system to complete
-------------------------- running turn 62 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -4
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,13) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
( 6, 6) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  9
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  0
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  2
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(16, 7) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (enemy)     vulnerability =  3 attack_ratio = -2 health_diffs = -100
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 5) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 10
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -42
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -46
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(13,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  10  22  24  26  28   6  16   0   0   0  20  18              
 5          18  10  10  10  26  28  30  32  16  28   0  24   6  20  18          
 6          20  22  10  26  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  12  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  12  12  12      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26  24  12  20      
12           0  10  10  26  28   0  10  10  20  20  28  26  24   8  20          
13          18  10  22  24   0   0   0  32  20   0  26   0   8   8   8          
14              18  20  22   0   0   0  30   0   0   0   0   0   8              
15              16  18   0   0   0   0   0  26   0   0   0  18  16              
16                       0   0  10   0   0   0  10   0  18                      
17                              10  22   0  22  10                              
18                                                                              
-------------------------- running turn 63 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,17) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -96
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -8
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -3
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 4,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
(13, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  3
(12,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -4
( 5,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,17) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 46
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  12  24  26  28   6  16   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  12  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  26  10  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0  10  10      
12           0  10  10  26  28   0  10  10  20  20  28  26   0   0   0          
13          18  10  22  24   0   0   0  32  20  14   4  24  22   0  18          
14              18  20   8  14   0   0  30  14   4   0   4  20  18              
15              16   8   8   0   0   0   0  26   0   0   0  18  16              
16                       8  20   0   0   2   2   0   0  18                      
17                              20  12   2   0   0                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                   -   -             
 9       -       -   X   X             
10       X   -       -   X   X   -     
11                       -   X   -     
12                                     
13                           X   -     
14                       -   X   -     
15                           -         
16                               -     
17                           -   X     
18                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                   -   -             
 9       -       -   X   X             
10       X   -       -   X   X   -     
11                       -   X   -     
12                                     
13                           X   -     
14                       -   X   -     
15                           -         
16                               -     
17                           -   X     
18                                     

System can be split into 8 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(10, 17) - {'options': [(10, 16), (9, 17)], 'scores': [2, 2]}
(4, 10) - {'options': [(5, 10), (4, 9), (4, 10)], 'scores': [2, 2, 0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(10, 17) - {'options': [(10, 16)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 3
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(4, 10) - {'options': [(5, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 6
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(10, 17) - {'options': [(10, 16), (9, 17)], 'scores': [2, 2]}
(4, 10) - {'options': [(5, 10), (4, 9), (4, 10)], 'scores': [2, 2, 0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 7
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(10, 17): {'options': [(10, 16), (9, 17)], 'scores': [2, 2]}
(4, 10): {'options': [(5, 10), (4, 9), (4, 10)], 'scores': [2, 2, 0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with [(10, 17), (4, 10)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 1
optional - [(4, 9), (5, 10)]
occupied - []
available_bots - [(4, 10)]
levels - {28: [(4, 10)], 30: [(4, 9), (5, 10)]}
max_score - 30

-------------------------------------
TARGET system:
1 participants
()
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       1                             
10           1                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     

ERROR: THE FOLLOWING BOTS WERENT FROZEN - MANUALLY freezing
[(10, 17)]
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 17) - {'options': [(10, 16), (9, 17)], 'scores': [2, 2]}
(4, 10) - {'options': [(5, 10), (4, 9), (4, 10)], 'scores': [2, 2, 0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}

The initial system score was 388
The maximum obtainable for the system is 392
The score gain were looking for is 4
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(4, 10)]
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = [(4, 10)]
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       6                             
10      16  16                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     

The system now has a total of 2 options
Optional squares exist
1 bots need to move into optional
But no bots need to move into occupied

System result = ...
The system has a total of 2 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 17) - {'options': [(10, 16)], 'scores': [2]}
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     

System can be split into 13 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(10, 17) - {'options': [(10, 16)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 3
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(4, 10) - {'options': [(5, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 6
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(10, 17): {'options': [(10, 16)], 'scores': [2]}
(4, 10): {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with [(4, 10)]
outcome = 
num_optional - 1
optional - [(4, 9), (5, 10)]
occupied - []
available_bots - [(4, 10)]
levels - {30: [(4, 9), (5, 10)]}
max_score - 30

-------------------------------------
TARGET system:
1 participants
()
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       1                             
10           1                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     


The initial system score was 388
The maximum obtainable for the system is 392
The score gain were looking for is 4
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(4, 10)]
bots_outside_system_moving_to_optional  = [(4, 10)]
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 0
current_bots_in_optional = [(4, 10)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
1 participants
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       -                             
10       X   -                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  
 5                                     
 6                                     
 7                                     
 8                                     
 9       6                             
10      16  16                         
11                                     
12                                     
13                                     
14                                     
15                                     
16                                     
17                                     
18                                     

The system now has a total of 2 options
Optional squares exist

System result = ...
The system has a total of 2 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 17) - {'options': [(10, 16)], 'scores': [2]}
(4, 10) - {'options': [(5, 10), (4, 9)], 'scores': [2, 2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  8.982000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
It took  0.769000ms for system_walk to complete
system walk returned 1 possibilities
checking possibility for score of 4
this possibility has a score of 4
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (10, 17): {'options': [(10, 16)], 'scores': [2]}, (6, 6): {'options': [(6, 6)], 'scores': [0]}, (5, 7): {'options': [(5, 7)], 'scores': [0]}, (4, 10): {'options': [(5, 10)], 'scores': [2]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (10, 15): {'options': [(10, 15)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
5 -> 9
9 -> 14
10 -> 17
6 -> 6
5 -> 7
4 -> 10
8 -> 10
10 -> 15
9 -> 10
9 -> 11
8 -> 9
9 -> 13
7 -> 9
It took a total of 8.98 Ms for simplify_system to complete
It took a total of 0.02 Ms for start to complete
It took a total of 0.77 Ms for system_walk to complete
-------------------------- running turn 64 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  4
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(12,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 5,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -32
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  12  24  26  28   6  16   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  12  28  20  10  34   0  16  16   6   6   6  20          
 7      20  22  14  26  28  10  10  10   0   0   0  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10  10  26   0  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38  12  12  12  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38  12  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0  10  10  26  28   0  10  10  20  20   0  26  10  10   0          
13          18  10  22  10   0   0   0  32  20   0   0   0  22  10  18          
14              18  10  10   0   0   0  30   0   0   0  22  20  18              
15              16  18  10  22   0   0   0  26   0   0   0  18  16              
16                      18  10   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              


=> INITIAL
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8               -   -             
 9   -   X   -   X   X   -         
10       X   -   -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -         
16                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8               -   -             
 9   -   X   -   X   X   -         
10       X   -   -   X   X   -     
11                   -   X   -     
12                                 
13                       X   -     
14                   -   X   -     
15                       -         
16                                 

System can be split into 6 systems
Solving system # 0
(5, 9) - {'options': [(5, 9), (5, 10)], 'scores': [0, -2]}
(5, 10) - {'options': [(5, 9), (6, 10)], 'scores': [2, 2]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9), (5, 10), (4, 9)], 'scores': [0, -2, -2]}
(5, 10) - {'options': [(5, 9), (6, 10)], 'scores': [2, 2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (9, 9), (8, 8)], 'scores': [0, -2, -2, -26, -28]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -30, -30, -30]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 1
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -26]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (9, 9)], 'scores': [0, -2, -2, -26]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 10) - {'options': [(6, 10)], 'scores': [2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (9, 9), (8, 8)], 'scores': [0, -2, -2, -26, -28]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -30, -30, -30]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -26]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -30]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 10) - {'options': [(6, 10)], 'scores': [2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (10, 13)], 'scores': [0, -2, -12]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -30, -30, -30]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(5, 10): {'options': [(6, 10)], 'scores': [2]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 


The initial system score was 390
The maximum obtainable for the system is 392
The score gain were looking for is 2
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 10) - {'options': [(6, 10)], 'scores': [2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 

System can be split into 12 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(5, 10) - {'options': [(6, 10)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 3
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(5, 10): {'options': [(6, 10)], 'scores': [2]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 


The initial system score was 390
The maximum obtainable for the system is 392
The score gain were looking for is 2
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 5                                 
 6                                 
 7                                 
 8                                 
 9                                 
10                                 
11                                 
12                                 
13                                 
14                                 
15                                 
16                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(5, 10) - {'options': [(6, 10)], 'scores': [2]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  7.913000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 7.91 Ms for simplify_system to complete
-------------------------- running turn 65 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -5
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 6,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  5
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -49
( 4,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -23
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  12  24  26  28   6  16   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  12  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0  10  10  26  28   0  10  10  20   0  28  26  10  10   0          
13          18  10   8  24   0   0   0  32   0   0   0  24  22  10  18          
14               8   8   8   2   0   0  30   0   0   0  22  20  18              
15              16   8  20  12   0   0   0  26   0   0   0  18  16              
16                      18  20   2   0   0   0  10   0  18                      
17                              20   2   0  22  10                              
18                                                                              
-------------------------- running turn 66 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 2) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  5
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -5
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -49
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -15
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  3 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  20   8                      
 3              16  18  20  22  24   6   6   6  24   0   8   8  16              
 4              18  20  12  24  26  28   6  16   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  12  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0   0   0  26  28   0  10  10  20   0  28  26  10  10   0          
13          18   0  10  10   0   0   0  32   0   0   0  24  22  10  18          
14              18  10  22   0   0   0  30   0   0   0  22  20  18              
15              16  18  20  22   0   0   0  26   0   0   0  18  16              
16                      18  10   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 67 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(12, 2) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  5
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -5
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -5
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(12, 4) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -1
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24  22  10  18                      
 3              16  18  20  22  24   6   6   6  10   0  10  18  16              
 4              18  20  12  24  26  28   6  16   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  12  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0   0   0  26  28   0  10  10  20   0  28  26  10  10   0          
13          18   0  10  10   0   0   0  32   0   0   0  24  22  10  18          
14              18  10  22   2   0   0  30   0   0   0  22  20  18              
15              16  18  20  12   0   0   0  26   0   0   0  18  16              
16                      18  20   2   0   0   0  10   0  18                      
17                              20   2   0  22  10                              
18                                                                              
-------------------------- running turn 68 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(17,11) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  2
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  5 attack_ratio =  0 health_diffs =  5
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -52
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs =  5
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -47
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -53
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -5
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   6  24   0  20  18                      
 3              16  18  20  22  24   6   6   0   0   0  20  18  16              
 4              18  20  12  24  26  28   6  16   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32  16  28   0  24   6  20  18          
 6          20  22  24  12  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0   0   0  26  28   0  10  10  20   0  28  26  10  10   0          
13          18   0  10  10   0   0   0  32   0   0   0  24  22  10  18          
14              18  10  22   0   0   0  30   0   0   0  22  20  18              
15              16  18  20  22   0   0   0  26   0   0   0  18  16              
16                      18  10   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 69 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  2
(10, 4) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(17,10) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  5
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
(15,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(12, 4) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -43
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22  24   0  24  22  20  18                      
 3              16  18  20  22  24   0   0   0  14   0  20  18  16              
 4              18  20  12  24  26  28   0   4   0   0   0  20  18              
 5          18  20  12  12  12  28  30  32   4  14   0  24   6  20  18          
 6          20  22  24  12  28  20   6  34  16  16  16   6   6   6  20          
 7      20  22  14  26  28  10   6   6   6  16  16  16  28   6  24  22  20      
 8      22  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10      22   0  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           0   0   0  26  28   0  10  10  20   0  28  26  10  10  10          
13          18   0  10  10   0   0   0  32   0   0   0  24  22  10  18          
14              18  10  22   2   0   0  30   0   0   0  22  20  18              
15              16  18  20  12   0   0   0  26   0   0   0  18  16              
16                      18  20   2   0   0   0  10   0  18                      
17                              20   2   0  22  10                              
18                                                                              
-------------------------- running turn 70 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 40
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 2,13) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
( 3, 8) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -40
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 2) (friendly)  vulnerability =  4 attack_ratio =  0 health_diffs = -43
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22  24   0  24  22  10  10                      
 3               0  10  20  22  24   0   0   0  24   0  20  10   0              
 4              10  20  12  24  26  28   0   6   0   0   0  20  10              
 5          10  20  12  12  12  28  30  32   6  16   0  24   0  20  10          
 6          10  22  24  12  28  20   6  34  16   6   6   0   0   0  10          
 7      10  22  14  26  28  10   6   6   6  16  16   6  28   0  24  22  10      
 8      10  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  10      
 9      10  26  14  30  32  10  36  38   6   6   6  34   8  18  18  26  10      
10      10   0  26  28  30  32  34  36  38   6  22   8   8   8  26  24  10      
11      10   0   0  26  28  30  32  10  36  20  22  30   8  26  10  22  10      
12          10   0   0  26  28   0  10  10  20   0  28  26  10  10  10          
13          10   0  10  10   0   0   0  32   0   0   0  24  22  10  10          
14              10  10  22   0   0   0  30   0   0   0  22  20  10              
15               0  10  20  22   0   0   0  26   0   0   0  10   0              
16                      10  10   0   0   0   0  10  10  10                      
17                              10  10  10  10  10                              
18                                                                              
-------------------------- running turn 71 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -19
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(12, 2) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -10
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4,13) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
(15, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 43
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 1,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -50
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (enemy)     vulnerability =  3 attack_ratio = -2 health_diffs = -91
(10, 1) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = 43
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 3,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -56
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = -81
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -100
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -93
( 6,16) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0   0   0                              
 2                      18  20  22  24   0   0  22  20  18                      
 3              16  18  20  22  24   0   0   0  24   0  20   0   0              
 4              18  20  12  24  26  28   0   6   0   0   0   0   0              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0   0  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  14  26  28  10   6   6   6  16  16   6  28   0  24  22  20      
 8       0  14  14  14  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9       0   0  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0  26  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           0   0   0  26  28   0  10  10  20   0  28  26  10  10  10          
13          18   0  10  10   0   0   0  32   0   0   0  24  22  10  18          
14              18  10  22   0   0   0  30   0   0   0  22  20  18              
15              16  18  20   0   0   0   0  26   0   0   0  18  16              
16                       0   0   0   0   0   0  10   0  18                      
17                              20  12   0  22  10                              
18                                                                              
-------------------------- running turn 72 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -49
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 1) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  9
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(12, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs = 18
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
(14, 4) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 18
( 1,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -42
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  7
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4,14) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (enemy)     vulnerability =  3 attack_ratio = -2 health_diffs = -99
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -53
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 10
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -92
(12, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -47
(14, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20   0   0   0  20                              
 2                      18  20  22  24   0  24  22  20  18                      
 3              16  18  20  22  24   0   0   0  24   0   0   0   0              
 4              18  20  12  24  26  28   0   6   0   0   0   0   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8       0  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9       0   0  28  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10       0   2  12  28  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       2   2   2  12  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           2  12  24  26  28   0  10  10  20   0  28  26  10  10  10          
13          18  20   8  24   0   0   0  32   0   0   0  24  22  10  18          
14               8   8   8   0   0   0  30   0   0   0  22  20  18              
15              16   8   0   0   0   0   0  26   0   0   0  18  16              
16                      18   0   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 73 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 26
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -15
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 1,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -33
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (enemy)     vulnerability =  3 attack_ratio = -2 health_diffs = -108
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  0
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -82
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8       0  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9       0   0  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10       0   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   0  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   0   0   0  24  22  10  18          
14              18   0   0   0   0   0  30   0   0   0  22  20  18              
15              16  18   0   0   0   0   0  26   0   0   0  18  16              
16                      18   0   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 74 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1,10) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2, 7) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 41
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  1
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 26
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -72
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10      22   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   0  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   0   0   0  24  22  10  18          
14              18   0   0   0   0   0  30   0   0   0  22  20  18              
15              16  18   0   0   0   0   0  26   0   0   0  18  16              
16                      18   0   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 75 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -49
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 24
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = -1
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -64
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10      22   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   0  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   0   0   0  24  22  10  18          
14              18   0   0   0   0   0  30   0   0   0  22  20  18              
15              16  18   0   0   0   0   0  26   0   0   0  18  16              
16                      18   0   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 76 ---------------------------
frontline_radius = 0
(11,16) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -51
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 24
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,17) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs =  1
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -53
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -54
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -47
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10      22   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   0  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   0   0   0  24  22  10  18          
14              18   0   0   0   0   0  30   0   0   0  22  20  18              
15              16  18   0   0   0   0   0  26   0   0   0  18  16              
16                      18   0   0   0   0   0  10   0  18                      
17                              10   0   0  22  10                              
18                                                                              
-------------------------- running turn 77 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,17) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -45
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -5
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 24
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10      22   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   4  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              
-------------------------- running turn 78 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
(10,17) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -45
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -5
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 24
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10      22   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   4  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              
-------------------------- running turn 79 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,17) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -45
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -5
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 24
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10      22   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       4   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  20      
12           4  22  24  26  28   0  10  10  20   4  28  26  10  10  10          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              
-------------------------- running turn 80 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
(10,17) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -45
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  4 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  4 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -5
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 24
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  8
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -53
( 5,16) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -47
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  22   0   0   0  22  10  10                      
 3               0  10  20  22  24   0   0   0  24   0   0  10   0              
 4              10  20  12  24  26  28   0   6   0   0   0   8  10              
 5          10  20  12  12  12  28  30  32   6  16   0  24   0  20  10          
 6          10  22  24  12  28  20   6  34  16   6   6   0   0   0  10          
 7      10  22  24  16  28   6   6   6   6  16  16   6  28   0  24  22  10      
 8      10  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  10      
 9      10  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  10      
10      10   4  14  14  30  32  34  36  38   6  22   8   8   8  26  24  10      
11      10   4   4  26  28  30  32  10  36  20  22  30   8  26  10  22  10      
12          10  22  24  26  28   0  10  10  20   4  28  26  10  10  10          
13          10  20  22   0   0   0   0  32   4   4   4  24  22  10  10          
14              10   0   0   0   0   0  30  14   4   4  22  20  10              
15               0  10   0   0   0   0   0  26   4   4   4  10   0              
16                      10  10   0   0   0   0  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              
-------------------------- running turn 81 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
( 1,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -26
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 26
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs =  0
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(16,12) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 7) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs = -9
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 2,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1, 8) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs =  0
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 1, 7) (enemy)     vulnerability =  4 attack_ratio = -2 health_diffs = -91
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
( 3, 4) (enemy)     vulnerability =  3 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3               0  18  20  22  24   0   0   0  24   0   0   0  16              
 4               0   0  12  24  26  28   0   6   0   0   0   8   8              
 5          18   0  12  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24  12  28  20   6  34  16   6   6   0   0   0  20          
 7       0   0  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8       0  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10       0   0  14  14  30  32  34  36  38   6  22   8   8   8  26  24  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26  10   0  20      
12           0  22  24  26  28   0  10  10  20   4  28  26  10   0   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10   0          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0   0  20                              
18                                                                              
-------------------------- running turn 82 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -1
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  1
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
( 2, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -50
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -90
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1,10) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -24
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  9
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -45
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -5
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(14, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -26
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 4, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 7) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs =  0
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -49
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 1, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 19
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1, 7) (enemy)     vulnerability =  3 attack_ratio = -1 health_diffs = -50
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16   8  20  22  24   0   0   0  24   0   0   0  16              
 4               8   8   0  24  26  28   0   6   0   0   0   8   8              
 5          18  20   0   0   0  28  30  32   6  16   0  24   0  20  18          
 6          20  22  24   0  28  20   6  34  16   6   6   0   0   0  20          
 7       0   0  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8       0  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9       0  26  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10       0   0  14  14  30  32  34  36  38   6  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   2   0   0   0  26   4   4   4  18  16              
16                      18   2   2   0   0   0  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              
-------------------------- running turn 83 ---------------------------
frontline_radius = 0
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -26
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  9
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -131
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 4, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -15
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 9) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -69
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 18
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 7) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 11
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 1, 7) (enemy)     vulnerability =  4 attack_ratio = -1 health_diffs = -61
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 9, 2) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 2,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 38
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18   2  12  24  26  28   0   6   0   0   0   8   8              
 5          18   2   2   2  12  28  30  32   6  16   0  24   0  20  18          
 6          20  22   2  12  28  20   6  34  16   6   6   0   0   0  20          
 7       0   0  24  16  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8       0  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24   4  14  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10       4   0   4  14  30  32  34  36  38   6  22   8   8   8  26   0  22      
11       0   0   0  26  28  30  32  10  36  20  22  30   8  26   0   0   0      
12           0  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7       -   X   -                                 
 8       X   -                   -   -             
 9       X                   -   X   X             
10       -                       X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7       -   X   -                                 
 8       X   -                   -   -             
 9       X                   -   X   X             
10       -                       X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 

System can be split into 8 systems
Solving system # 0
(2, 7) - {'options': [(2, 8), (3, 7)], 'scores': [24, 24]}
(1, 8) - {'options': [(2, 8), (1, 9), (1, 8)], 'scores': [24, 24, 0]}
(1, 9) - {'options': [(1, 9), (1, 10)], 'scores': [0, -20]}
This subsystem has less than 10000 options, solving
(2, 7) - {'options': [(2, 8), (3, 7)], 'scores': [24, 24]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(1, 8) - {'options': [(2, 8), (1, 9), (1, 8), (1, 7)], 'scores': [24, 24, 0, 0]}
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
(1, 9) - {'options': [(1, 9), (1, 10)], 'scores': [0, -20]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -30, -30]}
Solving system # 1
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(2, 7) - {'options': [(3, 7)], 'scores': [24]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(1, 8) - {'options': [(2, 8)], 'scores': [24]}
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -30, -30]}
Solving system # 3
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -30]}
This subsystem has less than 10000 options, solving
(2, 7) - {'options': [(3, 7)], 'scores': [24]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(1, 8) - {'options': [(2, 8)], 'scores': [24]}
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -30, -30]}
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(2, 7): {'options': [(3, 7)], 'scores': [24]}
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(1, 8): {'options': [(2, 8)], 'scores': [24]}
(3, 9): {'options': [(3, 8)], 'scores': [2]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 432
The maximum obtainable for the system is 482
The score gain were looking for is 50
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(2, 7) - {'options': [(3, 7)], 'scores': [24]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(1, 8) - {'options': [(2, 8)], 'scores': [24]}
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

System can be split into 16 systems
Solving system # 0
(2, 7) - {'options': [(3, 7)], 'scores': [24]}
This system has 1 move so it already solved!
Solving system # 1
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(1, 8) - {'options': [(2, 8)], 'scores': [24]}
This system has 1 move so it already solved!
Solving system # 9
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
This system has 1 move so it already solved!
Solving system # 10
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 15
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(2, 7): {'options': [(3, 7)], 'scores': [24]}
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(1, 8): {'options': [(2, 8)], 'scores': [24]}
(3, 9): {'options': [(3, 8)], 'scores': [2]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 432
The maximum obtainable for the system is 482
The score gain were looking for is 50
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(2, 7) - {'options': [(3, 7)], 'scores': [24]}
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(1, 8) - {'options': [(2, 8)], 'scores': [24]}
(3, 9) - {'options': [(3, 8)], 'scores': [2]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.559000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.56 Ms for simplify_system to complete
-------------------------- running turn 84 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -10
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -2 health_diffs = -60
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -2
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 21
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -121
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  3
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 26
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -26
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 7) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 14
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -100
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
( 3,11) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 2) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 1, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20   2  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20   2   2   2  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24   2  28   6   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  16  16   6   6   6   6  26   6  34  32  30  18  26  24  22      
 9      24   0   2  16  32   6  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   2  30  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0   2  12  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  12  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              
-------------------------- running turn 85 ---------------------------
frontline_radius = 0
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -3
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -43
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 43
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  8
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 34
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -53
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 4,11) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -47
( 2, 7) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 9, 2) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -47
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20   2  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20   2   2   2  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24   2  28  10   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   4  14  30  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       4   4   4   4  30  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   4   4   4   4  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22   4  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0   0  20                              
18                                                                              
-------------------------- running turn 86 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -1
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 44
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9, 2) (enemy)     vulnerability =  1 attack_ratio = -1 health_diffs = -49
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22   0  22  20                              
 2                      18  20  22   0   0   0  22  20   0                      
 3              16  18  20  22  24   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26  28   0   6   0   0   0   8   8              
 5          18  20   2  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20   2   2   2  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24   2  28  10   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 

System can be split into 8 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

System can be split into 16 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 15
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.530000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.53 Ms for simplify_system to complete
-------------------------- running turn 87 ---------------------------
frontline_radius = 0
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 1, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
( 8, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 1) (friendly)  vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3              16  18  20  22  24   2   2   2  24   0   0   0  16              
 4              18  20  12  24  26  28   2  16   0   0   0   8   8              
 5          18  20   2  12  12  28  30  32   6   6   0  24   0  20  18          
 6          20   2   2   2  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  24   2  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 

System can be split into 8 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

System can be split into 16 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 15
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.562000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.56 Ms for simplify_system to complete
-------------------------- running turn 88 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  6
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  22  24  22  20                              
 2                      18  20  22   0   0  24  22  20   0                      
 3              16  18  20  22   0   0   0   0  24   0   0   0  16              
 4              18  20  12  24  26   0   0   6   0   0   0   8   8              
 5          18  20   2  12  12  28  30  32   6  16   0  24   0  20  18          
 6          20   2   2   2  28  20   6  34  16   6   6   0   0   0  20          
 7      20  22  24   2  28  10   6   6   6  16  16   6  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                               0   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 

System can be split into 8 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

System can be split into 16 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 15
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  18.251000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 18.25 Ms for simplify_system to complete
-------------------------- running turn 89 ---------------------------
frontline_radius = 0
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 9,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  1
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 1, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3              16  18  20  22  24   2   2   2  24   0   0   0  16              
 4              18  20  12  24  26  28   2  16   0   0   0   8   8              
 5          18  20   2  12  12  28  30  32   6   6   0  24   0  20  18          
 6          20   2   2   2  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  24   2  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0   0  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 

System can be split into 8 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

System can be split into 16 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 15
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 9)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 496
The maximum obtainable for the system is 496
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 9)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.855000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.85 Ms for simplify_system to complete
-------------------------- running turn 90 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -1
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  1
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = 26
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,17) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 4,15) (friendly)  vulnerability =  6 attack_ratio =  0 health_diffs =  0
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 1, 9) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = -26
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              10  10  10  10  10                              
 2                      10  10  12  12   2  24  22  10  10                      
 3               0  10  20  22  24   2   2   2  24   0   0  10   0              
 4              10  20  12  24  26  28   2  16   0   0   0   8  10              
 5          10  20   2  12  12  28  30  32   6   6   0  24   0  20  10          
 6          10   2   2   2  28  20   6  34  16   0   0   0   0   0  10          
 7      10  22  24   2  28  10   6   6   6  16  16   0  28   0  24  22  10      
 8      10  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  10      
 9      10   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  10      
10      10   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  10      
11      10   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0  10      
12          10  22  24  26  28   0  10  10  20   4  28  26  10  10  10          
13          10  20  22   0   0   0   0  32   4   4   4  24  22  10  10          
14              10   0   0   0   0   0  30  14   4   4  22  20  10              
15               0  10   0   0   0   0   0  26   4   4   4  10   0              
16                      10  10   0   0   0   0  22  10  10                      
17                              10  10  10  10  10                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7           -   -   -                             
 8           X   X   X   -       -   -             
 9                   -       -   X   X             
10                               X   X   X   -     
11                               -   -   X   -     
12                                       -         
13                                       X   -     
14                                   -   X   -     
15                                       -         
16                                                 

System can be split into 8 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 10)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 482
The maximum obtainable for the system is 482
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

System can be split into 16 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 15
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(1, 9): {'options': [(1, 10)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 


The initial system score was 482
The maximum obtainable for the system is 482
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

Cell Scores:
     0   1   2   3   4   5   6   7   8   9  10  11  
 5                                                 
 6                                                 
 7                                                 
 8                                                 
 9                                                 
10                                                 
11                                                 
12                                                 
13                                                 
14                                                 
15                                                 
16                                                 

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(1, 9) - {'options': [(1, 10)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.652000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.65 Ms for simplify_system to complete
-------------------------- running turn 91 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  0
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 2, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(16, 7) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 5,14) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  2 health_diffs =  0
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs =  0
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(16, 6) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -44
( 7, 1) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 44
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 1) (enemy)     vulnerability =  4 attack_ratio = -2 health_diffs = -100
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -50
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,17) (friendly)  vulnerability =  4 attack_ratio = -2 health_diffs = -100
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 4, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -50
( 3, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24   0   0                              
 2                      18  20  12  12   2  24   0  20   0                      
 3               0   0   0  22  24   2   2   2  24   0   0   0  16              
 4               0   0  12  24  26  28   2  16   0   0   0   8   8              
 5           0   0   2  12  12  28  30  32   6   6   0  24   0  20  18          
 6           0   2   2   2  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  24   2  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18   0   0   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -   -   -                             
 8       X   X   X   -       -   -             
 9               -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -   -   -                             
 8       X   X   X   -       -   -             
 9               -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -26]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.273000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.27 Ms for simplify_system to complete
-------------------------- running turn 92 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs = 18
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  8
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(16, 7) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -44
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 6,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  8
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs =  8
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 7, 1) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 44
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 1) (enemy)     vulnerability =  4 attack_ratio = -2 health_diffs = -108
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 4, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 3) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -58
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 3, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -32
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24   0   0                              
 2                      18  20  12  12   2  24   0  20   0                      
 3               0   0  20  22  24   2   2   2  24   0   0   0  16              
 4               0   0   2  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0  12  12  28  30  32   6   6   0  24   0  20  18          
 6          20   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  24   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  28   0  10  10  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  12   0   0   0  30  14   4   4  22  20  18              
15              16  18  20   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -   -   -                             
 8       X   X   X   -       -   -             
 9               -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -   -   -                             
 8       X   X   X   -       -   -             
 9               -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(2, 8) - {'options': [(3, 8), (2, 8)], 'scores': [2, 0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (3, 7)], 'scores': [2, 0, -2]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.505000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.50 Ms for simplify_system to complete
-------------------------- running turn 93 ---------------------------
frontline_radius = 0
( 6,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 13
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = -15
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 13
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs = 17
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -44
( 7, 1) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 44
( 4, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(11, 1) (enemy)     vulnerability =  4 attack_ratio = -2 health_diffs = -117
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  2 health_diffs = 35
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 4, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -63
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 3, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24   0   0                              
 2                      18  20  12  12   2  24   0  20   0                      
 3               0   0   0  22  24   2   2   2  24   0   0   0  16              
 4               0   0  12  24  26  28   2  16   0   0   0   8   8              
 5          18   0   0   0  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  30  32  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26   0   0  10  10  20   4  28  26  10  10   0          
13          18  20  22   0   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.636000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.64 Ms for simplify_system to complete
-------------------------- running turn 94 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 18
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 8, 2) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -44
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 18
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 22
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 7, 1) (friendly)  vulnerability =  3 attack_ratio =  0 health_diffs = 44
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 6,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 4, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -68
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3               0   0  20  22  24   2   2   2  24   0   0   0  16              
 4               0   2   2  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0  12  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  32  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  28  16  32   6  36  20  22  30   8  26   0   0   0      
12          20  22  24  16  16   0   6   6  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18  20   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -30]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -30]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -26, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -2]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -26, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -26]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -26, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.438000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.44 Ms for simplify_system to complete
-------------------------- running turn 95 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 22
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -28
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 22
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 2) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -94
( 7, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 28
( 6,11) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -72
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 1) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 9, 1) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 44
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
( 3, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3               0  18  20  22  24   2   2   2  24   0   0   0  16              
 4               0   0  12  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0   0  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  18  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  18  18  18  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  18   0  10  10  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.379000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.38 Ms for simplify_system to complete
-------------------------- running turn 96 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 27
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 2) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -94
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 27
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 22
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 7, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 6,11) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 4, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -77
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3               0   0  20  22  24   2   2   2  24   0   0   0  16              
 4               0   2   2  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0  12  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  18  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  18  18  18  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  18   0  10  10  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18  20   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.700000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.70 Ms for simplify_system to complete
-------------------------- running turn 97 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 31
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 31
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 22
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 2) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -94
( 7, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6,11) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -81
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3               0  18  20  22  24   2   2   2  24   0   0   0  16              
 4               0   0  12  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0   0  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  18  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  18  18  18  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  18   0  10  10  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.727000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.73 Ms for simplify_system to complete
-------------------------- running turn 98 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 36
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
( 8, 2) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -94
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 5, 5) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 36
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 22
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
( 7, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 6,11) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -86
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 4, 4) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,15) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3               0   0  20  22  24   2   2   2  24   0   0   0  16              
 4               0   2   2  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0  12  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  18  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  18  18  18  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  18   0  10  10  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18  20   0   0   0   0  26   4   4   4  18  16              
16                      18  10   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.351000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.35 Ms for simplify_system to complete
-------------------------- running turn 99 ---------------------------
frontline_radius = 0
( 5, 9) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
(17, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs =  5
( 9, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
( 6, 6) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -1
(16, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(14, 4) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 9, 8) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  4
( 7, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -9
( 8,10) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 8, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -4
( 7,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 41
(11,14) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(14, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -58
(12, 9) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -68
(10, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -7
(15,12) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 5, 5) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs = -4
(11, 5) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs =  2
(10, 7) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -6
(13,10) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = 18
( 3,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 16
(12, 6) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs = -25
( 4, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,11) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -47
( 7,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 2, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 14
( 8,16) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 41
( 6,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(11, 2) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 22
(10, 9) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -40
(11,13) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 4,10) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(16,11) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 4, 6) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9,14) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 2) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -94
( 7, 1) (friendly)  vulnerability =  2 attack_ratio =  0 health_diffs = 44
(17,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 9, 3) (enemy)     vulnerability =  2 attack_ratio =  0 health_diffs =  0
( 6,11) (enemy)     vulnerability =  3 attack_ratio =  0 health_diffs =  0
(15,10) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -42
( 2,10) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,10) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = 34
( 9,16) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(15, 7) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
( 8, 7) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = 35
(15, 8) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  8
(14, 6) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -32
( 9, 6) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -50
(13, 5) (friendly)  vulnerability =  4 attack_ratio = -3 health_diffs = -106
( 3, 6) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 7, 9) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs = -42
( 3, 5) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 9,13) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -48
(12,15) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
(13, 3) (enemy)     vulnerability =  2 attack_ratio =  1 health_diffs = 50
( 6, 8) (enemy)     vulnerability =  2 attack_ratio = -2 health_diffs = -58
( 8,12) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -10
(11, 8) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -51
( 5, 7) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,14) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(11, 3) (friendly)  vulnerability =  1 attack_ratio = -1 health_diffs = -74
(17, 9) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
(16, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs =  5
(12, 4) (enemy)     vulnerability =  2 attack_ratio = -1 health_diffs = -8
( 8,15) (enemy)     vulnerability =  1 attack_ratio =  0 health_diffs =  0
(10,15) (friendly)  vulnerability =  2 attack_ratio = -1 health_diffs = -50
( 7,17) (friendly)  vulnerability =  5 attack_ratio = -1 health_diffs = -91
( 9, 5) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
(12, 8) (friendly)  vulnerability =  1 attack_ratio =  1 health_diffs = 50
( 3, 4) (enemy)     vulnerability =  1 attack_ratio =  1 health_diffs = 50
(10, 2) (friendly)  vulnerability =  1 attack_ratio =  0 health_diffs =  0
     0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  
 0                                                                              
 1                              20  12  24  22  20                              
 2                      18  20  12  12   2  24  22  20   0                      
 3               0  18  20  22  24   2   2   2  24   0   0   0  16              
 4               0   0  12  24  26  28   2  16   0   0   0   8   8              
 5           0   0   0   0  12  28  30  32   6   6   0  24   0  20  18          
 6          10   0   0   0  28  20   6  34  16   0   0   0   0   0  20          
 7      20  22  10   0  28  10   6   6   6  16  16   0  28   0  24  22  20      
 8      22  24  26  28  10  10  10   6  26   6  34  32  30  18  26  24  22      
 9      24   0  14   4  32  10  36  38   6   6   6  34   8  18  18  26  24      
10       0   0   0   4   4  18  34  36  38   6  22   8   8   8  26   0  22      
11      20   0  14   4  18  18  18  10  36  20  22  30   8  26   0   0   0      
12          20  22  24  26  18   0  10  10  20   4  28  26  10  10   0          
13          18  20  22  24   0   0   0  32   4   4   4  24  22  10  18          
14              18  20  22   0   0   0  30  14   4   4  22  20  18              
15              16  18   0   0   0   0   0  26   4   4   4  18  16              
16                      18   0   0   0   0   0  22   4  18                      
17                              10   0   0  22  20                              
18                                                                              


=> INITIAL
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7       -       -                             
 8       X   X   X   -       -   -             
 9           -   -       -   X   X             
10                           X   X   X   -     
11                           -   -   X   -     
12                                   -         
13                                   X   -     
14                               -   X   -     
15                                   -         
16                                             

System can be split into 7 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9)], 'scores': [2, 0, -2, -26]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (7, 10), (8, 11)], 'scores': [2, 2, 0, -2, -26]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 10), (9, 11), (10, 11)], 'scores': [2, 0, -16]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11)], 'scores': [2, 2, 0, -16]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9), (8, 10), (7, 9), (8, 8)], 'scores': [0, -2, -2, -32]}
(9, 10) - {'options': [(9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [0, -2, -2, -32]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 10), (6, 9), (7, 8)], 'scores': [2, 0, -2, -26, -26]}
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8)], 'scores': [0, -2, -18]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8), (3, 8), (5, 8), (4, 9), (4, 7)], 'scores': [0, -2, -18, -24, -28]}
(2, 8) - {'options': [(3, 8), (2, 8), (2, 7)], 'scores': [2, 0, -2]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(4, 8), (3, 8), (2, 8), (3, 9)], 'scores': [2, 0, -2, -12]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Solving system # 4
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12)], 'scores': [0, -2, -22]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14)], 'scores': [2, 0, -16]}
This subsystem has less than 10000 options, solving
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13), (9, 14), (9, 12), (10, 13)], 'scores': [0, -2, -22, -28]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13), (9, 14), (10, 14), (9, 15), (8, 14)], 'scores': [2, 0, -16, -30, -30]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system changed while in simplyfy, running system through simplyfy_system again


=> INITIAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

System can be split into 15 systems
Solving system # 0
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 1
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 2
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 3
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 4
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 5
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 6
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 7
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 8
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 9
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 10
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 11
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 12
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 13
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
This system has 1 move so it already solved!
Solving system # 14
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
This system has 1 move so it already solved!
Leaving THE SYSTEM SPLIT AREA AND SYSTEM IS 
(5, 9): {'options': [(5, 9)], 'scores': [0]}
(6, 6): {'options': [(6, 6)], 'scores': [0]}
(4, 8): {'options': [(4, 8)], 'scores': [0]}
(2, 8): {'options': [(2, 8)], 'scores': [0]}
(5, 7): {'options': [(5, 7)], 'scores': [0]}
(8, 10): {'options': [(8, 10)], 'scores': [0]}
(10, 15): {'options': [(10, 15)], 'scores': [0]}
(3, 8): {'options': [(3, 8)], 'scores': [0]}
(9, 11): {'options': [(9, 11)], 'scores': [0]}
(9, 13): {'options': [(9, 13)], 'scores': [0]}
(7, 10): {'options': [(7, 10)], 'scores': [0]}
(9, 14): {'options': [(9, 14)], 'scores': [0]}
(8, 9): {'options': [(8, 9)], 'scores': [0]}
(9, 10): {'options': [(9, 10)], 'scores': [0]}
(7, 9): {'options': [(7, 9)], 'scores': [0]}
determine_ideal_outcome called with []
outcome = 
num_optional - 0
optional - []
occupied - []
available_bots - []
levels - {}
max_score - 0

-------------------------------------
TARGET system:
0 participants
()
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             


The initial system score was 472
The maximum obtainable for the system is 472
The score gain were looking for is 0
bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = []
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 0
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = []
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = []


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
0 participants
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  
 5                                             
 6                                             
 7                                             
 8                                             
 9                                             
10                                             
11                                             
12                                             
13                                             
14                                             
15                                             
16                                             

The system now has a total of 1 options
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 1 options
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 6) - {'options': [(6, 6)], 'scores': [0]}
(4, 8) - {'options': [(4, 8)], 'scores': [0]}
(2, 8) - {'options': [(2, 8)], 'scores': [0]}
(5, 7) - {'options': [(5, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(10, 15) - {'options': [(10, 15)], 'scores': [0]}
(3, 8) - {'options': [(3, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}


The system did not change in simplify system, returning
It took  17.570000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 17.57 Ms for simplify_system to complete
[42, 34] - seed: 28193011-0
