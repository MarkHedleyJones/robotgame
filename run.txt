Game seed: 226394691
Match seed: 226394691-0
--------------------------- running turn 0 ---------------------------
--------------------------- running turn 1 ---------------------------
--------------------------- running turn 2 ---------------------------
--------------------------- running turn 3 ---------------------------
--------------------------- running turn 4 ---------------------------
--------------------------- running turn 5 ---------------------------
--------------------------- running turn 6 ---------------------------
--------------------------- running turn 7 ---------------------------
--------------------------- running turn 8 ---------------------------
--------------------------- running turn 9 ---------------------------
-------------------------- running turn 10 ---------------------------
-------------------------- running turn 11 ---------------------------
-------------------------- running turn 12 ---------------------------
-------------------------- running turn 13 ---------------------------
-------------------------- running turn 14 ---------------------------
-------------------------- running turn 15 ---------------------------
-------------------------- running turn 16 ---------------------------
-------------------------- running turn 17 ---------------------------
-------------------------- running turn 18 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  12  13  14  
 7               -                     
 8           -   X   -                 
 9       -   X   X   X   -   X   X     
10       -   X   X   -       -   -     
11       X   -   X   -                 
12                                     

Awarded move for (12, 9)  to (11, 9)
simplification made, repeating
Awarded move for (13, 9)  to (12, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
8 participants
     6   7   8   9  10  11  12  13  14  
 7               -                     
 8           -   X   -                 
 9       -   X   X   X                 
10       -   X   X   -                 
11       X   -   X   -                 
12                                     


-------------------------------------
TARGET system:
7 participants
()
     6   7   8   9  10  11  12  13  14  
 7               2                     
 8           2   X   2                 
 9       2   X   X   X                 
10           2   X   2                 
11               2                     
12                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
7 participants
     6   7   8   9  10  11  12  13  14  
 7               -                     
 8           -   0   -                 
 9       -   0   0   0                 
10           ?   0   -                 
11               ?                     
12                                     

Cell Scores:
     6   7   8   9  10  11  12  13  14  
 7              10                     
 8          10  11  10                 
 9      10  11  12  11                 
10          10  11  10                 
11              10                     
12                                     

The system now has a total of 15000 optins
The initial system score was 101
The maximum obtainable for the system is 104
The score gain were looking for is 3
The simplifications thus far have yielded a gain of 28
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 15000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(8, 10), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 10), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 10), (9, 11)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

It took  2.075000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (9, 9), (8, 10), (8, 9), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 2.07 Ms for simplify_system to complete
-------------------------- running turn 19 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  13  
 7           -                 
 8       -   X   -   -         
 9   -   X   X   X   X   X   - 
10   -   X   X   -             
11   -   X   X   -             
12                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  13  
 7           -                 
 8       -   X   -   -         
 9   -   X   X   X   X   X   - 
10   -   X   X   -             
11   -   X   X   -             
12                             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  13  
 7           5                 
 8       5   X   5             
 9   5   X   X   X   5         
10       5   X   5             
11           5                 
12                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  13  
 7           -                 
 8       -   0   -             
 9   -   0   0   0   ?   X     
10       ?   0   -             
11       X   ?                 
12                             

Cell Scores:
     7   8   9  10  11  12  13  
 7          10                 
 8      10  11  10             
 9  10  11  12  11  10   9     
10      10  11  10             
11       9  10                 
12                             

The system now has a total of 18000 optins
The initial system score was 104
The maximum obtainable for the system is 106
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 0
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 18000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8)], 'scores': [0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 8), (10, 10)], 'scores': [1, -1, -1]}



bots_in_optional = [(11, 9), (8, 10), (9, 11)]
bots_in_optional_moving_to_occupied = [(11, 9)]
bots_outside_system = [(12, 9), (8, 11)]
bots_outside_system_moving_to_optional  = [(12, 9), (8, 11)]
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 10), (9, 11), (12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 10), (9, 11)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9), (11, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 9), (9, 10), (9, 8), (9, 9), (8, 9), (10, 9), (11, 9)]

It took  1.990000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (9, 9), (8, 10), (8, 9), (9, 11), (8, 11), (10, 9)]
filtered = [(8, 11), (10, 9)]
possible bots to move = [(8, 9), (9, 8), (9, 9), (8, 10), (9, 10), (10, 9)]
filtered = [(9, 10), (10, 9)]
possible bots to move = [(9, 10), (9, 8), (9, 9), (8, 10), (8, 9)]
filtered = [(9, 10), (9, 9)]
possible bots to move = [(8, 9), (9, 8)]
filtered = [(8, 9)]
possible bots to move = [(9, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(9, 10): {'options': [(10, 10)], 'scores': [-1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (8, 11): {'options': [(9, 11)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(10, 10)], 'scores': [-1]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
It took a total of 1.99 Ms for simplify_system to complete
-------------------------- running turn 20 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 337500 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

It took  1.933000ms for simplify_system to complete
possible bots to move = [(9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.93 Ms for simplify_system to complete
-------------------------- running turn 21 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 337500 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

It took  1.899000ms for simplify_system to complete
possible bots to move = [(9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.90 Ms for simplify_system to complete
-------------------------- running turn 22 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 337500 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(8, 9), (9, 8), (9, 10), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

It took  1.958000ms for simplify_system to complete
possible bots to move = [(8, 9), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.96 Ms for simplify_system to complete
-------------------------- running turn 23 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 337500 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

It took  1.948000ms for simplify_system to complete
possible bots to move = [(9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.95 Ms for simplify_system to complete
-------------------------- running turn 24 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 337500 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(8, 9), (9, 8), (9, 10), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

It took  1.929000ms for simplify_system to complete
possible bots to move = [(8, 9), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.93 Ms for simplify_system to complete
-------------------------- running turn 25 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 337500 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (11, 9), (8, 10), (8, 8), (9, 11)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

It took  1.951000ms for simplify_system to complete
possible bots to move = [(9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.95 Ms for simplify_system to complete
-------------------------- running turn 26 ---------------------------


=> INITIAL
BOT Positions:
12 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           -             
13           X   -         
14           X   -         
15                         

Awarded move for (9, 13)  to (9, 12)
Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12                         
13                         
14                         
15                         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         
13                         
14                         
15                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 7           -             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12                         
13                         
14                         
15                         

Cell Scores:
     7   8   9  10  11  12  
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         
13                         
14                         
15                         

The system now has a total of 337500 optins
The initial system score was 121
The maximum obtainable for the system is 123
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 17
Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 337500 options
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

It took  2.485000ms for simplify_system to complete
possible bots to move = [(10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 2.48 Ms for simplify_system to complete
-------------------------- running turn 27 ---------------------------


=> INITIAL
BOT Positions:
13 participants
     7   8   9  10  11  12  
 5                         
 6           X             
 7           -             
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           X   -         
13           X             
14           -             

Awarded move for (9, 6)  to (9, 7)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
12 participants
     7   8   9  10  11  12  
 5                         
 6                         
 7                         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   X   -     
11       -   X   -         
12           X   -         
13           X             
14           -             


-------------------------------------
TARGET system:
11 participants
()
     7   8   9  10  11  12  
 5                         
 6                         
 7                         
 8       6   X   6         
 9   6   X   X   X   6     
10       6   X   6         
11           6             
12                         
13                         
14                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
11 participants
     7   8   9  10  11  12  
 5                         
 6                         
 7                         
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   ?         
11           ?             
12           X             
13                         
14                         

Cell Scores:
     7   8   9  10  11  12  
 5                         
 6                         
 7                         
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12           9             
13                         
14                         

The system now has a total of 28800 optins
The initial system score was 132
The maximum obtainable for the system is 135
The score gain were looking for is 3
The simplifications thus far have yielded a gain of 19
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 28800 options
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 9), (10, 10)], 'scores': [1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8)], 'scores': [1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(8, 10) - {'options': [(8, 9), (8, 10)], 'scores': [1, 0]}
(9, 10) - {'options': [(9, 9), (8, 10), (10, 10)], 'scores': [1, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}



bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11)]
bots_in_optional_moving_to_occupied = [(9, 11)]
bots_outside_system = [(9, 12)]
bots_outside_system_moving_to_optional  = [(9, 12)]
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (10, 9), (8, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 10), (8, 8), (11, 9), (8, 10)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (10, 9), (8, 9), (9, 11)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (10, 9), (8, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (9, 10), (10, 9), (8, 9), (9, 11)]

It took  2.757000ms for simplify_system to complete
possible bots to move = [(10, 10), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (10, 9), (8, 9)]
filtered = [(9, 10)]
possible bots to move = [(10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 8), (8, 9), (10, 9)]
filtered = [(9, 9)]
possible bots to move = [(10, 10), (9, 8), (11, 9), (8, 8), (10, 9), (8, 9)]
filtered = [(8, 9)]
possible bots to move = [(10, 10), (11, 9), (10, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 2.76 Ms for simplify_system to complete
-------------------------- running turn 28 ---------------------------


=> INITIAL
BOT Positions:
14 participants
     5   6   7   8   9  10  11  12  
 6                   -             
 7                   X   -         
 8           -   X   X   X   -     
 9       X   -   X   X   X   X   - 
10           -   X   X   X   -     
11               -   X   -         
12                   X             
13                   -             

Awarded move for (6, 9)  to (7, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
13 participants
     5   6   7   8   9  10  11  12  
 6                   -             
 7                   X   -         
 8           -   X   X   X   -     
 9               X   X   X   X   - 
10           -   X   X   X   -     
11               -   X   -         
12                   X             
13                   -             


-------------------------------------
TARGET system:
13 participants
()
     5   6   7   8   9  10  11  12  
 6                   1             
 7                   X   1         
 8           1   X   X   X   1     
 9               X   X   X   X   1 
10           1   X   X   X   1     
11               1   X   1         
12                   1             
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
13 participants
     5   6   7   8   9  10  11  12  
 6                   -             
 7                   0   -         
 8           -   0   0   0   -     
 9               0   0   0   0   - 
10           -   0   0   0   -     
11               -   0   -         
12                   ?             
13                                 

Cell Scores:
     5   6   7   8   9  10  11  12  
 6                   9             
 7                  10   9         
 8           9  10  11  10   9     
 9              11  12  11  10   9 
10           9  10  11  10   9     
11               9  10   9         
12                   9             
13                                 

The system now has a total of 250000000 optins
The initial system score was 144
The maximum obtainable for the system is 145
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 10
Optional squares exist
No bots need to leave optional
12
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 250000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10)], 'scores': [1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 12
current_bots_in_optional = [(9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]

It took  2.669000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.67 Ms for simplify_system to complete
-------------------------- running turn 29 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  
 6               -                     
 7           -   X   -                 
 8       -   X   X   X   -             
 9   -   X   X   X   X   X   -   X     
10       -   X   X   X   -             
11           -   X   -                 
12               X                     
13               -                     

Awarded move for (13, 9)  to (12, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  12  13  14  
 6               -                     
 7           -   X   -                 
 8       -   X   X   X   -             
 9   -   X   X   X   X   X             
10       -   X   X   X   -             
11           -   X   -                 
12               X                     
13               -                     


-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  12  13  14  
 6               1                     
 7           1   X   1                 
 8       1   X   X   X   1             
 9   1   X   X   X   X   X             
10       1   X   X   X   1             
11           1   X   1                 
12               1                     
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  12  13  14  
 6               -                     
 7           -   0   -                 
 8       -   0   0   0   -             
 9   -   0   0   0   0   0             
10       -   0   0   0   -             
11           -   0   -                 
12               ?                     
13                                     

Cell Scores:
     6   7   8   9  10  11  12  13  14  
 6               9                     
 7           9  10   9                 
 8       9  10  11  10   9             
 9   9  10  11  12  11  10             
10       9  10  11  10   9             
11           9  10   9                 
12               9                     
13                                     

The system now has a total of 937500000 optins
The initial system score was 153
The maximum obtainable for the system is 154
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 9
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 937500000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  2.892000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.89 Ms for simplify_system to complete
-------------------------- running turn 30 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           -   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 2343750000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  2.944000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.94 Ms for simplify_system to complete
-------------------------- running turn 31 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           -   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 2343750000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

It took  2.796000ms for simplify_system to complete
possible bots to move = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.80 Ms for simplify_system to complete
-------------------------- running turn 32 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           -   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 2343750000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  2.821000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.82 Ms for simplify_system to complete
-------------------------- running turn 33 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           -   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 2343750000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  2.798000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.80 Ms for simplify_system to complete
-------------------------- running turn 34 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11           -   X   -             
12               X                 
13               -                 


-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           -   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 2343750000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  2.801000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.80 Ms for simplify_system to complete
-------------------------- running turn 35 ---------------------------


=> INITIAL
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -           -   X     
 9   -   X   X   X   X   X   X   -   X   -     
10       -   X   X   X   -   -       -         
11           -   X   -           -   X         
12               X                             
13               -                             

Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -           -   X     
 9   -   X   X   X   X   X   X           -     
10       -   X   X   X   -   -       -         
11           -   X   -           -   X         
12               X                             
13               -                             


-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  14  15  16  
 6               2                             
 7           2   X   2                         
 8       2   X   X   X   2                     
 9   2   X   X   X   X   X   2                 
10       2   X   X   X   2                     
11           2   X   2                         
12               2                             
13                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   0   -                         
 8       -   0   0   0   -                     
 9   -   0   0   0   0   0   ?                 
10       -   0   0   0   -                     
11           -   0   -                         
12               ?                             
13                                             

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  16  
 6               9                             
 7           9  10   9                         
 8       9  10  11  10   9                     
 9   9  10  11  12  11  10   9                 
10       9  10  11  10   9                     
11           9  10   9                         
12               9                             
13                                             

The system now has a total of 2343750000 optins
The initial system score was 171
The maximum obtainable for the system is 174
The score gain were looking for is 3
The simplifications thus far have yielded a gain of 20
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2343750000 options
(14, 11) - {'options': [(14, 10)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (9, 11), (7, 9), (10, 9), (9, 7)]

It took  5.208000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (8, 9), (9, 11), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(14, 11): {'options': [(14, 10)], 'scores': [1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(14, 11) - {'options': [(14, 10)], 'scores': [1]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 5.21 Ms for simplify_system to complete
-------------------------- running turn 36 ---------------------------


=> INITIAL
BOT Positions:
19 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -       -             
 9   -   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   -   -   -   X         
11           -   X   -                         
12               X   -                         
13               -                             
14               X                             
15                                             

Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -       -             
 9   -   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   -   -   -   X         
11           -   X   -                         
12               X   -                         
13                                             
14                                             
15                                             


-------------------------------------
TARGET system:
16 participants
()
     6   7   8   9  10  11  12  13  14  15  16  
 6               3                             
 7           3   X   3                         
 8       3   X   X   X   3                     
 9   3   X   X   X   X   X   3                 
10       3   X   X   X   3                     
11           3   X   3                         
12               3                             
13                                             
14                                             
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
16 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   0   -                         
 8       -   0   0   0   -                     
 9   -   0   0   0   0   0   ?   X             
10       -   0   0   0   -                     
11           -   0   -                         
12               ?                             
13                                             
14                                             
15                                             

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  16  
 6               9                             
 7           9  10   9                         
 8       9  10  11  10   9                     
 9   9  10  11  12  11  10   9   8             
10       9  10  11  10   9                     
11           9  10   9                         
12               9                             
13                                             
14                                             
15                                             

The system now has a total of 562500000 optins
The initial system score was 181
The maximum obtainable for the system is 185
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 22
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 562500000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(14, 10) - {'options': [(13, 10)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]

It took  4.241000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
filtered = [(11, 9)]
possible bots to move = [(10, 8), (10, 10), (9, 11), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (8, 9), (9, 7), (9, 12), (7, 9)]
filtered = [(10, 9)]
possible bots to move = [(10, 8), (10, 10), (8, 8), (9, 8), (9, 9), (8, 10), (9, 10), (9, 11), (9, 12), (8, 9), (7, 9), (9, 7)]
filtered = [(9, 9)]
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (9, 12), (7, 9)]
filtered = [(9, 10)]
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 10), (8, 8), (9, 11), (8, 9), (7, 9), (9, 7)]
filtered = [(9, 11)]
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 10), (8, 8), (8, 9), (9, 7), (7, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (14, 10): {'options': [(13, 10)], 'scores': [1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(14, 10) - {'options': [(13, 10)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 4.24 Ms for simplify_system to complete
-------------------------- running turn 37 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               X                         
 6               -                         
 7           -   X   -                     
 8       -   X   X   X   -   -             
 9   -   X   X   X   X   X   X   -   X     
10       -   X   X   X   -   -   X         
11       -   X   X   -                     
12               X   -                     
13               X                         
14               -                         

Awarded move for (9, 5)  to (9, 6)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
19 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6                                         
 7           -   X   -                     
 8       -   X   X   X   -   -             
 9   -   X   X   X   X   X   X   -   X     
10       -   X   X   X   -   -   X         
11       -   X   X   -                     
12               X   -                     
13               X                         
14               -                         


-------------------------------------
TARGET system:
17 participants
()
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6                                         
 7           4   X   4                     
 8       4   X   X   X   4                 
 9   4   X   X   X   X   X   4             
10       4   X   X   X   4                 
11           4   X   4                     
12               4                         
13                                         
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6                                         
 7           -   0   -                     
 8       -   0   0   0   -                 
 9   -   0   0   0   0   0   ?             
10       -   0   0   0   -                 
11           ?   0   -                     
12               ?                         
13               X                         
14                                         

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6                                         
 7           9  10   9                     
 8       9  10  11  10   9                 
 9   9  10  11  12  11  10   9             
10       9  10  11  10   9                 
11           9  10   9                     
12               9                         
13               8                         
14                                         

The system now has a total of 1125000000 optins
The initial system score was 193
The maximum obtainable for the system is 197
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 25
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 1125000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(13, 10) - {'options': [(12, 10)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (8, 7)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(9, 12), (12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = [(9, 12)]
bots_outside_system = [(9, 13)]
bots_outside_system_moving_to_optional  = [(9, 13)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (8, 11), (9, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (9, 12)]

It took  4.470000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = [(9, 11)]
possible bots to move = [(10, 8), (9, 7), (10, 10), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (8, 9), (8, 11), (7, 9)]
filtered = [(9, 10)]
possible bots to move = [(10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 11), (7, 9), (8, 9), (12, 9), (10, 9), (9, 7)]
filtered = [(9, 9)]
possible bots to move = [(10, 8), (9, 7), (10, 10), (12, 9), (9, 8), (11, 9), (8, 10), (8, 8), (10, 9), (8, 9), (8, 11), (7, 9)]
filtered = [(8, 9)]
possible bots to move = [(10, 8), (7, 9), (10, 10), (9, 8), (11, 9), (8, 10), (8, 8), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = [(8, 8)]
possible bots to move = [(10, 8), (9, 7), (10, 10), (9, 8), (11, 9), (8, 10), (8, 11), (10, 9), (12, 9), (7, 9)]
filtered = [(9, 8)]
possible bots to move = [(10, 8), (10, 10), (11, 9), (8, 10), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = [(10, 8)]
possible bots to move = [(9, 7), (10, 10), (12, 9), (11, 9), (8, 10), (10, 9), (8, 11), (7, 9)]
filtered = [(10, 9)]
possible bots to move = [(10, 10), (11, 9), (8, 10), (8, 11), (7, 9), (9, 7)]
filtered = [(11, 9)]
possible bots to move = [(9, 7), (10, 10), (8, 10), (8, 11), (7, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(10, 8): {'options': [(10, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (13, 10): {'options': [(12, 10)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(13, 10) - {'options': [(12, 10)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 4.47 Ms for simplify_system to complete
-------------------------- running turn 38 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  14  
 5                                     
 6           -   X                     
 7           -   X   -   -             
 8       -   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   -   X   -     
11       -   X   X   -       -         
12               X                     
13               -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  14  
 5                                     
 6           -   X                     
 7           -   X   -   -             
 8       -   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   -   X   -     
11       -   X   X   -       -         
12               X                     
13               -                     


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  14  
 5                                     
 6               7                     
 7           7   X   7                 
 8       7   X   X   X   7             
 9   7   X   X   X   X   X   7         
10       7   X   X   X   7             
11           7   X   7                 
12               7                     
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  14  
 5                                     
 6               ?                     
 7           -   0   -                 
 8       -   0   0   0   ?             
 9   -   0   0   0   0   0   ?   X     
10       -   0   0   0   -   X         
11           ?   0   -                 
12               ?                     
13                                     

Cell Scores:
     6   7   8   9  10  11  12  13  14  
 5                                     
 6               9                     
 7           9  10   9                 
 8       9  10  11  10   9             
 9   9  10  11  12  11  10   9   8     
10       9  10  11  10   9   8         
11           9  10   9                 
12               9                     
13                                     

The system now has a total of 4500000000 optins
The initial system score was 197
The maximum obtainable for the system is 199
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 0
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 4500000000 options
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(11, 8) - {'options': [(10, 8), (11, 8)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8)], 'scores': [1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 10) - {'options': [(11, 10)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9), (12, 10)]
bots_outside_system_moving_to_optional  = [(13, 9), (12, 10)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 8), (9, 6), (9, 12), (8, 11), (13, 9), (12, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 8), (9, 6), (9, 12), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]

It took  4.111000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 6), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (8, 11), (10, 9), (9, 7)]
filtered = [(11, 9)]
possible bots to move = [(10, 8), (9, 11), (10, 10), (11, 8), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (8, 9), (9, 7), (9, 6), (8, 11), (9, 12), (7, 9)]
filtered = [(10, 9)]
possible bots to move = [(10, 8), (10, 10), (11, 8), (8, 8), (9, 8), (9, 9), (8, 10), (9, 10), (9, 11), (9, 12), (9, 6), (8, 9), (7, 9), (8, 11), (9, 7)]
filtered = [(9, 9)]
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (9, 6), (8, 11), (9, 12), (7, 9)]
filtered = [(9, 10)]
possible bots to move = [(10, 8), (9, 11), (10, 10), (11, 8), (9, 6), (9, 8), (8, 10), (8, 8), (8, 9), (7, 9), (8, 11), (9, 7)]
filtered = [(9, 11)]
possible bots to move = [(10, 8), (10, 10), (11, 8), (8, 8), (9, 8), (8, 10), (8, 9), (9, 7), (9, 6), (7, 9)]
filtered = [(8, 10)]
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (8, 8), (9, 6), (8, 9), (7, 9), (9, 7)]
filtered = [(8, 9)]
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (8, 8), (9, 7), (9, 6), (7, 9)]
filtered = [(8, 8)]
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (9, 6), (7, 9), (9, 7)]
filtered = [(9, 8)]
possible bots to move = [(10, 10), (9, 7), (9, 6), (7, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(10, 8): {'options': [(10, 7)], 'scores': [-1]}, (12, 10): {'options': [(11, 10)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 7)], 'scores': [-1]}
(12, 10) - {'options': [(11, 10)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 4.11 Ms for simplify_system to complete
-------------------------- running turn 39 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  3.781000ms for simplify_system to complete
possible bots to move = [(10, 8), (11, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.78 Ms for simplify_system to complete
-------------------------- running turn 40 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  3.784000ms for simplify_system to complete
possible bots to move = [(10, 8), (11, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.78 Ms for simplify_system to complete
-------------------------- running turn 41 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

It took  3.984000ms for simplify_system to complete
possible bots to move = [(10, 8), (11, 10), (9, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.98 Ms for simplify_system to complete
-------------------------- running turn 42 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (8, 11), (11, 8), (9, 12), (9, 6)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (10, 8), (10, 10), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (9, 8), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (8, 11), (11, 8), (9, 12), (9, 6)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (8, 11), (11, 8), (9, 12), (9, 6)]
current_bots_in_occupied = [(9, 10), (10, 8), (10, 10), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (9, 8), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (10, 8), (10, 10), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (9, 8), (10, 9), (7, 9)]

It took  3.815000ms for simplify_system to complete
possible bots to move = [(9, 10), (11, 10), (10, 8), (10, 10), (10, 7), (12, 9), (8, 11), (11, 9), (8, 10), (9, 9), (8, 9), (11, 8), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (9, 8), (10, 9), (7, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 3.81 Ms for simplify_system to complete
-------------------------- running turn 43 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

It took  3.975000ms for simplify_system to complete
possible bots to move = [(10, 8), (11, 10), (9, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.98 Ms for simplify_system to complete
-------------------------- running turn 44 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

It took  3.806000ms for simplify_system to complete
possible bots to move = [(10, 8), (11, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.81 Ms for simplify_system to complete
-------------------------- running turn 45 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12               X                 
13               -                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (12, 9), (11, 8), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

It took  4.003000ms for simplify_system to complete
possible bots to move = [(10, 8), (11, 10), (9, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 4.00 Ms for simplify_system to complete
-------------------------- running turn 46 ---------------------------


=> INITIAL
BOT Positions:
22 participants
     6   7   8   9  10  11  12  13  
 4                                 
 5               -   X             
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12           -   X   -             
13               -   X             
14                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
22 participants
     6   7   8   9  10  11  12  13  
 4                                 
 5               -   X             
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   X   -     
11       -   X   X   -   -         
12           -   X   -             
13               -   X             
14                                 


-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 4                                 
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 
14                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 4                                 
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   ?         
11           ?   0   -             
12               ?                 
13                                 
14                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 4                                 
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 
14                                 

The system now has a total of 474609375000 optins
The initial system score was 213
The maximum obtainable for the system is 215
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 16
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = [(12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (9, 12)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]

It took  4.705000ms for simplify_system to complete
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (8, 11), (10, 9), (9, 7), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.70 Ms for simplify_system to complete
-------------------------- running turn 47 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     4   5   6   7   8   9  10  11  12  13  
 4                                         
 5                       X   -             
 6                   -   X   -             
 7                   -   X   X   -         
 8               -   X   X   X   X   -     
 9       X   -   X   X   X   X   X   X   - 
10               -   X   X   X   X   -     
11               -   X   X   -   -         
12               X   -   X   -             
13                   -   X   -             
14                   X   -                 
15                                         

Awarded move for (5, 9)  to (6, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
24 participants
     4   5   6   7   8   9  10  11  12  13  
 4                                         
 5                       X   -             
 6                   -   X   -             
 7                   -   X   X   -         
 8               -   X   X   X   X   -     
 9               X   X   X   X   X   X   - 
10               -   X   X   X   X   -     
11               -   X   X   -   -         
12               X   -   X   -             
13                   -   X   -             
14                   X   -                 
15                                         


-------------------------------------
TARGET system:
22 participants
()
     4   5   6   7   8   9  10  11  12  13  
 4                                         
 5                                         
 6                       9                 
 7                   9   X   9             
 8               9   X   X   X   9         
 9               X   X   X   X   X   9     
10               9   X   X   X   9         
11                   9   X   9             
12                       9                 
13                                         
14                                         
15                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
22 participants
     4   5   6   7   8   9  10  11  12  13  
 4                                         
 5                       X                 
 6                       ?                 
 7                   -   0   ?             
 8               -   0   0   0   ?         
 9               0   0   0   0   0   ?     
10               -   0   0   0   ?         
11                   ?   0   -             
12                       ?                 
13                       X                 
14                                         
15                                         

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  
 4                                         
 5                       8                 
 6                       9                 
 7                   9  10   9             
 8               9  10  11  10   9         
 9              10  11  12  11  10   9     
10               9  10  11  10   9         
11                   9  10   9             
12                       9                 
13                       8                 
14                                         
15                                         

The system now has a total of 16200000000 optins
The initial system score was 236
The maximum obtainable for the system is 241
The score gain were looking for is 5
The simplifications thus far have yielded a gain of 24
Optional squares exist
2 bots need to move into optional
And 2 bots need to move out of occupied

System result = ...
The system has a total of 16200000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(7, 12) - {'options': [(7, 11)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8)], 'scores': [1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (10, 7)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (10, 7), (8, 7)], 'scores': [1, -1, -1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}



bots_in_optional = [(12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (9, 12)]
bots_in_optional_moving_to_occupied = [(9, 6), (9, 12)]
bots_outside_system = [(9, 13), (9, 5)]
bots_outside_system_moving_to_optional  = [(9, 13), (9, 5)]
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (11, 10), (10, 7), (8, 11), (11, 8), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (11, 10), (10, 7), (8, 11), (11, 8)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (9, 6), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (9, 7), (9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (9, 6), (9, 12)]

It took  6.388000ms for simplify_system to complete
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8)]
filtered = [(9, 11), (9, 7)]
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8)]
filtered = [(9, 7), (9, 10)]
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8)]
filtered = [(9, 7), (9, 9)]
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8), (8, 8)]
filtered = [(8, 9), (9, 7)]
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8), (8, 8)]
filtered = [(9, 8), (8, 9)]
possible bots to move = [(8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (10, 9), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8), (8, 8)]
filtered = [(8, 9), (10, 8)]
possible bots to move = [(12, 9), (10, 8), (11, 10), (8, 10), (10, 9), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8), (8, 8)]
filtered = [(10, 8), (8, 8)]
possible bots to move = [(12, 9), (10, 8), (11, 10), (8, 10), (10, 9), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8)]
filtered = [(10, 8)]
possible bots to move = [(12, 9), (11, 10), (8, 10), (10, 9), (8, 11), (11, 9), (7, 9), (10, 10), (11, 8)]
filtered = [(10, 9)]
possible bots to move = [(8, 10), (8, 11), (7, 9)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (7, 12): {'options': [(7, 11)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(10, 10)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 11)], 'scores': [-1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(7, 12) - {'options': [(7, 11)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 11)], 'scores': [-1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 6.39 Ms for simplify_system to complete
-------------------------- running turn 48 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X   -             
 7           -   -   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   X   -     
11           X   X   X   X   -         
12           -   -   X   -             
13                   -                 
14                   X                 
15                                     

Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
24 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X   -             
 7           -   -   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   X   -     
11           X   X   X   X   -         
12           -   -   X   -             
13                                     
14                                     
15                                     


-------------------------------------
TARGET system:
24 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                  11                 
 7              11   X  11             
 8          11   X   X   X  11         
 9      11   X   X   X   X   X  11     
10          11   X   X   X  11         
11              11   X  11             
12                  11                 
13                                     
14                                     
15                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
24 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   ?                 
 7               -   0   ?             
 8           ?   0   0   0   ?         
 9       ?   0   0   0   0   0   ?     
10           -   0   0   0   ?         
11           X   ?   0   ?             
12                   ?                 
13                                     
14                                     
15                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11           8   9  10   9             
12                   9                 
13                                     
14                                     
15                                     

The system now has a total of 28476562500000 optins
The initial system score was 241
The maximum obtainable for the system is 243
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 8
Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 28476562500000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10)], 'scores': [1, 1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(7, 11)]
bots_outside_system_moving_to_optional  = [(7, 11)]
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 11
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12), (7, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]

It took  5.583000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 11)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 11)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 10)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 9)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 8)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(9, 8)]
possible bots to move = [(6, 9), (10, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(10, 8)]
possible bots to move = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (8, 10), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(10, 9)]
possible bots to move = [(6, 9), (10, 7), (8, 10), (9, 7), (9, 6), (7, 9), (7, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(10, 10)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(9, 11)], 'scores': [1]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 11)], 'scores': [-1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 11)], 'scores': [-1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.58 Ms for simplify_system to complete
-------------------------- running turn 49 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X   -             
 7           -   -   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   X   -     
11           X   X   X   X   -         
12           -   -   X   -             
13                   X                 
14                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X   -             
 7           -   -   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   X   -     
11           X   X   X   X   -         
12           -   -   X   -             
13                   X                 
14                   -                 


-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     
14                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               =   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           =   0   0   0   0         
11           X   0   0   0             
12                   0                 
13                   X                 
14                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11           8   9  10   9             
12                   9                 
13                   8                 
14                                     

The system now has a total of 3037500000000 optins
The initial system score was 242
The maximum obtainable for the system is 244
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 0
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 3037500000000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(10, 10), (10, 11)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10)], 'scores': [1, 1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}



bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(7, 11), (9, 13)]
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (7, 11), (9, 13)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = [(8, 7), (7, 10)]
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (9, 12), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (7, 11), (9, 13)]

It took  5.240000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(7, 11), (9, 11)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(8, 10), (9, 11)]
possible bots to move = [(6, 9), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(10, 10), (9, 9)]
possible bots to move = [(6, 9), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9), (10, 10)]
possible bots to move = [(6, 9), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9), (10, 9)]
possible bots to move = [(6, 9), (9, 8), (12, 9), (10, 8), (11, 10), (10, 7), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (11, 8), (8, 8), (7, 8)]
filtered = [(10, 9), (8, 8)]
possible bots to move = [(6, 9), (9, 8), (12, 9), (10, 8), (11, 10), (10, 7), (10, 9), (9, 7), (11, 9), (9, 6), (7, 9), (11, 8), (7, 8)]
filtered = [(9, 8), (10, 9)]
possible bots to move = [(9, 8), (12, 9), (10, 8), (11, 10), (10, 7), (10, 9), (9, 7), (11, 9), (9, 6), (11, 8)]
filtered = [(10, 9)]
possible bots to move = [(9, 8), (12, 9), (10, 8), (11, 10), (10, 7), (9, 7), (11, 9), (9, 6), (11, 8)]
filtered = [(10, 8)]
possible bots to move = [(12, 9), (11, 10), (11, 9), (11, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 10)], 'scores': [1]}, (9, 8): {'options': [(9, 7)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(9, 8)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(9, 10)], 'scores': [1]}, (9, 11): {'options': [(10, 11)], 'scores': [-1]}, (10, 9): {'options': [(10, 8)], 'scores': [-1]}, (9, 7): {'options': [(8, 7)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 10)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 9)], 'scores': [1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 10)], 'scores': [1]}
(9, 8) - {'options': [(9, 7)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(9, 8)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(9, 10)], 'scores': [1]}
(9, 11) - {'options': [(10, 11)], 'scores': [-1]}
(10, 9) - {'options': [(10, 8)], 'scores': [-1]}
(9, 7) - {'options': [(8, 7)], 'scores': [-1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 10)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 9)], 'scores': [1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 5.24 Ms for simplify_system to complete
-------------------------- running turn 50 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.058000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.06 Ms for simplify_system to complete
-------------------------- running turn 51 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.666000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.67 Ms for simplify_system to complete
-------------------------- running turn 52 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.196000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.20 Ms for simplify_system to complete
-------------------------- running turn 53 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.270000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.27 Ms for simplify_system to complete
-------------------------- running turn 54 ---------------------------


=> INITIAL
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  14  15  
 5                   -                         
 6               -   X   -                     
 7           -   X   X   X   -                 
 8       -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   -             
11           -   X   X   X   -                 
12               -   X   -                     
13                   -                         

Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  15  
 5                   -                         
 6               -   X   -                     
 7           -   X   X   X   -                 
 8       -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X             
10       -   X   X   X   X   X   -             
11           -   X   X   X   -                 
12               -   X   -                     
13                   -                         


-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  14  15  
 5                                             
 6                   X                         
 7               X   X   X                     
 8           X   X   X   X   X                 
 9       X   X   X   X   X   X   X             
10           X   X   X   X   X                 
11               X   X   X                     
12                   X                         
13                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  15  
 5                                             
 6                   0                         
 7               0   0   0                     
 8           0   0   0   0   0                 
 9       0   0   0   0   0   0   0             
10           0   0   0   0   0                 
11               0   0   0                     
12                   0                         
13                                             

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  15  
 5                                             
 6                   9                         
 7               9  10   9                     
 8           9  10  11  10   9                 
 9       9  10  11  12  11  10   9             
10           9  10  11  10   9                 
11               9  10   9                     
12                   9                         
13                                             

The system now has a total of 128144531250000 optins
The initial system score was 251
The maximum obtainable for the system is 252
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 8
No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}



bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.032000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.03 Ms for simplify_system to complete
-------------------------- running turn 55 ---------------------------


=> INITIAL
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   X   -                 
 7           -   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   X   -                 
 7           -   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   -                     


-------------------------------------
TARGET system:
26 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   1                     
 6               1   X   1                 
 7           1   X   X   X   1             
 8       1   X   X   X   X   X   1         
 9   1   X   X   X   X   X   X   X   1     
10       1   X   X   X   X   X   1         
11           1   X   X   X   1             
12               1   X   1                 
13                   1                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           -   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   -                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     

The system now has a total of 214576721191406250 optins
The initial system score was 252
The maximum obtainable for the system is 252
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 214576721191406250 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}



bots_in_optional = [(13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 25
current_bots_in_optional = [(13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  4.836000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.84 Ms for simplify_system to complete
-------------------------- running turn 56 ---------------------------


=> INITIAL
BOT Positions:
27 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -                     
 6                       -   X   -                 
 7                   -   X   X   X   -             
 8               -   X   X   X   X   X   -         
 9       X   -   X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   -   -     
11                   -   X   X   X   -             
12                       -   X   -                 
13                           -                     

Awarded move for (4, 9)  to (5, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
26 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -                     
 6                       -   X   -                 
 7                   -   X   X   X   -             
 8               -   X   X   X   X   X   -         
 9               X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   -   -     
11                   -   X   X   X   -             
12                       -   X   -                 
13                           -                     


-------------------------------------
TARGET system:
26 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           1                     
 6                       1   X   1                 
 7                   1   X   X   X   1             
 8               1   X   X   X   X   X   1         
 9               X   X   X   X   X   X   X   1     
10               1   X   X   X   X   X   1         
11                   1   X   X   X   1             
12                       1   X   1                 
13                           1                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
26 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -                     
 6                       -   0   -                 
 7                   -   0   0   0   -             
 8               -   0   0   0   0   0   -         
 9               0   0   0   0   0   0   0   ?     
10               -   0   0   0   0   0   -         
11                   -   0   0   0   -             
12                       -   0   -                 
13                           -                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           8                     
 6                       8   9   8                 
 7                   8   9  10   9   8             
 8               8   9  10  11  10   9   8         
 9               9  10  11  12  11  10   9   8     
10               8   9  10  11  10   9   8         
11                   8   9  10   9   8             
12                       8   9   8                 
13                           8                     

The system now has a total of 286102294921875000 optins
The initial system score was 259
The maximum obtainable for the system is 260
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 8
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 286102294921875000 options
(6, 9) - {'options': [(7, 9), (6, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}



bots_in_optional = [(13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 25
current_bots_in_optional = [(13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.162000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.16 Ms for simplify_system to complete
-------------------------- running turn 57 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     
14                       X                     
15                                             

Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
27 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                                             
14                                             
15                                             


-------------------------------------
TARGET system:
27 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       2                     
 6                   2   X   2                 
 7               2   X   X   X   2             
 8           2   X   X   X   X   X   2         
 9       2   X   X   X   X   X   X   X   2     
10           2   X   X   X   X   X   2         
11               2   X   X   X   2             
12                   2   X   2                 
13                                             
14                                             
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
27 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                                             
14                                             
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                                             
14                                             
15                                             

The system now has a total of 953674316406250000 optins
The initial system score was 267
The maximum obtainable for the system is 268
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 8
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 953674316406250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(5, 9), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.830000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.83 Ms for simplify_system to complete
-------------------------- running turn 58 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
28 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       3                     
 6                   3   X   3                 
 7               3   X   X   X   3             
 8           3   X   X   X   X   X   3         
 9       3   X   X   X   X   X   X   X   3     
10           3   X   X   X   X   X   3         
11               3   X   X   X   3             
12                   3   X   3                 
13                       3                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.418000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.42 Ms for simplify_system to complete
-------------------------- running turn 59 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
28 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       3                     
 6                   3   X   3                 
 7               3   X   X   X   3             
 8           3   X   X   X   X   X   3         
 9       3   X   X   X   X   X   X   X   3     
10           3   X   X   X   X   X   3         
11               3   X   X   X   3             
12                   3   X   3                 
13                       3                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.583000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.58 Ms for simplify_system to complete
-------------------------- running turn 60 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
28 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       3                     
 6                   3   X   3                 
 7               3   X   X   X   3             
 8           3   X   X   X   X   X   3         
 9       3   X   X   X   X   X   X   X   3     
10           3   X   X   X   X   X   3         
11               3   X   X   X   3             
12                   3   X   3                 
13                       3                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.322000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.32 Ms for simplify_system to complete
-------------------------- running turn 61 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
28 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       3                     
 6                   3   X   3                 
 7               3   X   X   X   3             
 8           3   X   X   X   X   X   3         
 9       3   X   X   X   X   X   X   X   3     
10           3   X   X   X   X   X   3         
11               3   X   X   X   3             
12                   3   X   3                 
13                       3                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.568000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.57 Ms for simplify_system to complete
-------------------------- running turn 62 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
28 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       3                     
 6                   3   X   3                 
 7               3   X   X   X   3             
 8           3   X   X   X   X   X   3         
 9       3   X   X   X   X   X   X   X   3     
10           3   X   X   X   X   X   3         
11               3   X   X   X   3             
12                   3   X   3                 
13                       3                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.385000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.38 Ms for simplify_system to complete
-------------------------- running turn 63 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   X   -                 
 7               -   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
28 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       3                     
 6                   3   X   3                 
 7               3   X   X   X   3             
 8           3   X   X   X   X   X   3         
 9       3   X   X   X   X   X   X   X   3     
10           3   X   X   X   X   X   3         
11               3   X   X   X   3             
12                   3   X   3                 
13                       3                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               -   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  5.520000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.52 Ms for simplify_system to complete
-------------------------- running turn 64 ---------------------------


=> INITIAL
BOT Positions:
32 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                               -                             
 6                           -   X   -                         
 7                       -   X   X   X   -           -   X     
 8           X   -   -   X   X   X   X   X   -           -     
 9       X   -   X   X   X   X   X   X   X   X   X   -   X     
10               -   -   X   X   X   X   X   -   -             
11                       -   X   X   X   -                     
12                           -   X   -                         
13                               X                             
14                               -                             

Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
31 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                               -                             
 6                           -   X   -                         
 7                       -   X   X   X   -           -   X     
 8           X   -   -   X   X   X   X   X   -           -     
 9       X   -   X   X   X   X   X   X   X   X   X             
10               -   -   X   X   X   X   X   -   -             
11                       -   X   X   X   -                     
12                           -   X   -                         
13                               X                             
14                               -                             


-------------------------------------
TARGET system:
28 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                               3                             
 6                           3   X   3                         
 7                       3   X   X   X   3                     
 8                   3   X   X   X   X   X   3                 
 9               3   X   X   X   X   X   X   X   3             
10                   3   X   X   X   X   X   3                 
11                       3   X   X   X   3                     
12                           3   X   3                         
13                               3                             
14                                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                               -                             
 6                           -   0   -                         
 7                       -   0   0   0   -                     
 8                   -   0   0   0   0   0   -                 
 9               ?   0   0   0   0   0   0   0   ?             
10                   -   0   0   0   0   0   -                 
11                       -   0   0   0   -                     
12                           -   0   -                         
13                               ?                             
14                                                             

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                               8                             
 6                           8   9   8                         
 7                       8   9  10   9   8                     
 8                   8   9  10  11  10   9   8                 
 9               8   9  10  11  12  11  10   9   8             
10                   8   9  10  11  10   9   8                 
11                       8   9  10   9   8                     
12                           8   9   8                         
13                               8                             
14                                                             

The system now has a total of 2384185791015625000 optins
The initial system score was 290
The maximum obtainable for the system is 294
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 26
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 2384185791015625000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(4, 8) - {'options': [(5, 8)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(15, 7) - {'options': [(15, 8)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  7.165000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (4, 8): {'options': [(5, 8)], 'scores': [1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (15, 7): {'options': [(15, 8)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(4, 8) - {'options': [(5, 8)], 'scores': [1]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(15, 7) - {'options': [(15, 8)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.17 Ms for simplify_system to complete
-------------------------- running turn 65 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           -                             
 6                       -   X   -                         
 7           -       -   X   X   X   -                     
 8           X   -   X   X   X   X   X   -       -   X     
 9       X   X   X   X   X   X   X   X   X   X   X   -     
10       -   -   -   X   X   X   X   X   -   -   -         
11                   -   X   X   X   -                     
12                       -   X   -                         
13                       -   X   -                         
14                           -   X                         
15                                                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           -                             
 6                       -   X   -                         
 7           -       -   X   X   X   -                     
 8           X   -   X   X   X   X   X   -       -   X     
 9       X   X   X   X   X   X   X   X   X   X   X   -     
10       -   -   -   X   X   X   X   X   -   -   -         
11                   -   X   X   X   -                     
12                       -   X   -                         
13                       -   X   -                         
14                           -   X                         
15                                                         


-------------------------------------
TARGET system:
31 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           6                             
 6                       6   X   6                         
 7                   6   X   X   X   6                     
 8               6   X   X   X   X   X   6                 
 9           6   X   X   X   X   X   X   X   6             
10               6   X   X   X   X   X   6                 
11                   6   X   X   X   6                     
12                       6   X   6                         
13                           6                             
14                                                         
15                                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
31 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           -                             
 6                       -   0   -                         
 7                   -   0   0   0   -                     
 8           X   -   0   0   0   0   0   -                 
 9       X   ?   0   0   0   0   0   0   0   ?   X         
10               -   0   0   0   0   0   -                 
11                   -   0   0   0   -                     
12                       -   0   -                         
13                           ?                             
14                                                         
15                                                         

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           8                             
 6                       8   9   8                         
 7                   8   9  10   9   8                     
 8           7   8   9  10  11  10   9   8                 
 9       7   8   9  10  11  12  11  10   9   8   7         
10               8   9  10  11  10   9   8                 
11                   8   9  10   9   8                     
12                       8   9   8                         
13                           8                             
14                                                         
15                                                         

The system now has a total of 73242187500000000 optins
The initial system score was 300
The maximum obtainable for the system is 305
The score gain were looking for is 5
The simplifications thus far have yielded a gain of 13
Optional squares exist
2 bots need to move into optional
And 2 bots need to move out of occupied

System result = ...
The system has a total of 73242187500000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10)], 'scores': [1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(5, 8) - {'options': [(6, 8)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (7, 7)], 'scores': [1, 1, 0, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = [(5, 9), (13, 9)]
bots_outside_system = [(14, 9), (5, 8), (4, 9)]
bots_outside_system_moving_to_optional  = [(14, 9), (5, 8), (4, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 25
current_bots_in_optional = [(9, 13), (14, 9), (5, 8), (4, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 13)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9)]

It took  7.998000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(6, 9), (12, 9)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 8), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (7, 8), (9, 12)]
filtered = [(6, 9), (11, 9)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(6, 9), (10, 9)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 8), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (7, 8), (9, 12)]
filtered = [(6, 9), (9, 9)]
possible bots to move = [(10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 9), (9, 9)]
possible bots to move = [(10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 8), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (9, 9), (7, 8), (9, 12)]
filtered = [(8, 9), (9, 9)]
possible bots to move = [(10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 9), (9, 10)]
possible bots to move = [(10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (8, 10), (8, 8), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(8, 8), (9, 10)]
possible bots to move = [(10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11), (8, 8)]
possible bots to move = [(10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (8, 10), (8, 8), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(8, 8), (8, 11)]
possible bots to move = [(10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(9, 8), (8, 11)]
possible bots to move = [(10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(9, 8), (7, 10)]
possible bots to move = [(10, 11), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8), (7, 10)]
possible bots to move = [(10, 11), (10, 8), (11, 10), (10, 7), (9, 7), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(10, 11), (11, 10), (10, 7), (9, 7), (8, 7), (9, 6), (9, 13), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(10, 11), (11, 10), (10, 7), (9, 7), (8, 7), (9, 6), (9, 13), (10, 10), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (5, 8): {'options': [(6, 8)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(5, 8) - {'options': [(6, 8)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 8.00 Ms for simplify_system to complete
-------------------------- running turn 66 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       -                             
 6                   -   X   -                         
 7           -   -   X   X   X   X   -                 
 8           X   X   X   X   X   X   -                 
 9       X   X   X   X   X   X   X   X   X   -   X     
10       -   -   X   X   X   X   X   -   -             
11               X   X   X   X   -                     
12               -   -   X   -                         
13                       X   X                         
14                       -   -                         

Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       -                             
 6                   -   X   -                         
 7           -   -   X   X   X   X   -                 
 8           X   X   X   X   X   X   -                 
 9       X   X   X   X   X   X   X   X   X             
10       -   -   X   X   X   X   X   -   -             
11               X   X   X   X   -                     
12               -   -   X   -                         
13                       X   X                         
14                       -   -                         


-------------------------------------
TARGET system:
32 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       7                             
 6                   7   X   7                         
 7               7   X   X   X   7                     
 8           7   X   X   X   X   X   7                 
 9       7   X   X   X   X   X   X   X   7             
10           7   X   X   X   X   X   7                 
11               7   X   X   X   7                     
12                   7   X   7                         
13                       7                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       -                             
 6                   -   0   -                         
 7               -   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?             
10           -   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?   X                         
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8             
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8   7                         
14                                                     

The system now has a total of 128746032714843750000 optins
The initial system score was 305
The maximum obtainable for the system is 307
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 128746032714843750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 11), (11, 7), (9, 13), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(10, 13)]
bots_outside_system_moving_to_optional  = [(10, 13)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 11), (11, 7), (9, 13), (6, 8), (13, 9), (10, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 11), (11, 7), (9, 13), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.852000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 13), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(10, 13)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(9, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (13, 9), (7, 8)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (13, 9), (7, 8)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (10, 7), (8, 10), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (13, 9), (7, 8)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (11, 7), (8, 11), (11, 9), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (13, 9), (7, 8)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (13, 9), (7, 8)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (13, 9), (7, 8)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (8, 10), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (13, 9), (7, 8)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (8, 10), (7, 10), (8, 11), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (13, 9), (7, 8)]
filtered = [(9, 6)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (11, 10), (8, 10), (7, 10), (8, 11), (8, 7), (7, 9), (6, 8), (10, 10), (13, 9), (7, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 6.85 Ms for simplify_system to complete
-------------------------- running turn 67 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                       -                         
 6               -   X   X   -                     
 7           -   -   X   X   X   X   -             
 8           X   X   X   X   X   X   -             
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -   -     
11               X   X   X   X   -                 
12               -   -   X   -                     
13                       X                         
14                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                       -                         
 6               -   X   X   -                     
 7           -   -   X   X   X   X   -             
 8           X   X   X   X   X   X   -             
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -   -     
11               X   X   X   X   -                 
12               -   -   X   -                     
13                       X                         
14                       -                         


-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                       8                         
 6                   8   X   8                     
 7               8   X   X   X   8                 
 8           8   X   X   X   X   X   8             
 9       8   X   X   X   X   X   X   X   8         
10           8   X   X   X   X   X   8             
11               8   X   X   X   8                 
12                   8   X   8                     
13                       8                         
14                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                       -                         
 6                   ?   0   -                     
 7               -   0   0   0   ?                 
 8           ?   0   0   0   0   0   -             
 9       ?   0   0   0   0   0   0   0   ?   X     
10           -   0   0   0   0   0   -             
11               ?   0   0   0   -                 
12                   -   0   -                     
13                       ?                         
14                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                       8                         
 6                   8   9   8                     
 7               8   9  10   9   8                 
 8           8   9  10  11  10   9   8             
 9       8   9  10  11  12  11  10   9   8   7     
10           8   9  10  11  10   9   8             
11               8   9  10   9   8                 
12                   8   9   8                     
13                       8                         
14                                                 

The system now has a total of 46348571777343750000 optins
The initial system score was 307
The maximum obtainable for the system is 308
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 0
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 46348571777343750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 11), (8, 6), (11, 7), (9, 13), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 11), (8, 6), (11, 7), (9, 13), (6, 8), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 11), (8, 6), (11, 7), (9, 13), (6, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  6.583000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 11), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 11), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (7, 10), (8, 6), (9, 13), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 6)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.58 Ms for simplify_system to complete
-------------------------- running turn 68 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 579357147216796875000 optins
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 579357147216796875000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.627000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.63 Ms for simplify_system to complete
-------------------------- running turn 69 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 579357147216796875000 optins
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 579357147216796875000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.808000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.81 Ms for simplify_system to complete
-------------------------- running turn 70 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 579357147216796875000 optins
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 579357147216796875000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.475000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.48 Ms for simplify_system to complete
-------------------------- running turn 71 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 579357147216796875000 optins
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 579357147216796875000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (11, 7), (9, 13), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (11, 7), (9, 13), (6, 8), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (8, 6), (11, 7), (9, 13), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.505000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.50 Ms for simplify_system to complete
-------------------------- running turn 72 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                   -   -                     
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               X   X   X   X   -             
12               -   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 579357147216796875000 optins
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The simplifications thus far have yielded a gain of 0
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 579357147216796875000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  6.468000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.47 Ms for simplify_system to complete
-------------------------- running turn 73 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -   -                     
 6                       -   X   X   -                 
 7                   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   -         
 9       X   -   X   X   X   X   X   X   X   X   X     
10               -   -   X   X   X   X   X   -   -     
11                       X   X   X   X   -             
12                       -   -   X   -                 
13                               X                     
14                               -                     

Awarded move for (3, 9)  to (4, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -   -                     
 6                       -   X   X   -                 
 7                   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   -         
 9               X   X   X   X   X   X   X   X   X     
10               -   -   X   X   X   X   X   -   -     
11                       X   X   X   X   -             
12                       -   -   X   -                 
13                               X                     
14                               -                     


-------------------------------------
TARGET system:
33 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 5                               8                     
 6                           8   X   8                 
 7                       8   X   X   X   8             
 8                   8   X   X   X   X   X   8         
 9               8   X   X   X   X   X   X   X   8     
10                   8   X   X   X   X   X   8         
11                       8   X   X   X   8             
12                           8   X   8                 
13                               8                     
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 5                               -                     
 6                           ?   0   -                 
 7                       ?   0   0   0   ?             
 8                   ?   0   0   0   0   0   -         
 9               ?   0   0   0   0   0   0   0   ?     
10                   -   0   0   0   0   0   -         
11                       ?   0   0   0   -             
12                           -   0   -                 
13                               ?                     
14                                                     

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 5                               8                     
 6                           8   9   8                 
 7                       8   9  10   9   8             
 8                   8   9  10  11  10   9   8         
 9               8   9  10  11  12  11  10   9   8     
10                   8   9  10  11  10   9   8         
11                       8   9  10   9   8             
12                           8   9   8                 
13                               8                     
14                                                     

The system now has a total of 579357147216796875000 optins
The initial system score was 314
The maximum obtainable for the system is 315
The score gain were looking for is 1
The simplifications thus far have yielded a gain of 7
Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 579357147216796875000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

It took  7.177000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.18 Ms for simplify_system to complete
-------------------------- running turn 74 ---------------------------


=> INITIAL
BOT Positions:
36 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       -   -                             
 6                   -   X   X   -                         
 7               -   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   X   -       -   X     
 9       X   X   X   X   X   X   X   X   X   X   -   X   - 
10       -   -   -   X   X   X   X   X   -   -             
11                   X   X   X   X   -                     
12                   -   -   X   -                         
13                           X                             
14                           -                             

Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
35 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                       -   -                             
 6                   -   X   X   -                         
 7               -   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   X   -       -   X     
 9       X   X   X   X   X   X   X   X   X   X       -     
10       -   -   -   X   X   X   X   X   -   -             
11                   X   X   X   X   -                     
12                   -   -   X   -                         
13                           X                             
14                           -                             


-------------------------------------
TARGET system:
34 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           9                             
 6                       9   X   9                         
 7                   9   X   X   X   9                     
 8               9   X   X   X   X   X   9                 
 9           9   X   X   X   X   X   X   X   9             
10               9   X   X   X   X   X   9                 
11                   9   X   X   X   9                     
12                       9   X   9                         
13                           9                             
14                                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           -                             
 6                       ?   0   -                         
 7                   ?   0   0   0   ?                     
 8               ?   0   0   0   0   0   -                 
 9       X   ?   0   0   0   0   0   0   0   ?             
10               -   0   0   0   0   0   -                 
11                   ?   0   0   0   -                     
12                       -   0   -                         
13                           ?                             
14                                                         

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 5                           8                             
 6                       8   9   8                         
 7                   8   9  10   9   8                     
 8               8   9  10  11  10   9   8                 
 9       7   8   9  10  11  12  11  10   9   8             
10               8   9  10  11  10   9   8                 
11                   8   9  10   9   8                     
12                       8   9   8                         
13                           8                             
14                                                         

The system now has a total of 92697143554687500000 optins
The initial system score was 326
The maximum obtainable for the system is 329
The score gain were looking for is 3
The simplifications thus far have yielded a gain of 13
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 92697143554687500000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10), (6, 8)], 'scores': [1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = [(5, 9)]
bots_outside_system = [(4, 9)]
bots_outside_system_moving_to_optional  = [(4, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9), (4, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9)]

It took  8.563000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(6, 9)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (8, 7), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(10, 11), (9, 8), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (9, 7), (11, 7), (11, 9), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(6, 10)], 'scores': [-1]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(6, 10)], 'scores': [-1]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 8.56 Ms for simplify_system to complete
-------------------------- running turn 75 ---------------------------


=> INITIAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 3                                                     
 4                       X                             
 5                   -   -                             
 6               -   X   X   -                         
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             

Awarded move for (9, 4)  to (9, 5)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
36 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 3                                                     
 4                                                     
 5                   -                                 
 6               -   X   X   -                         
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
35 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 3                                                     
 4                                                     
 5                                                     
 6                  10   X  10                         
 7              10   X   X   X  10                     
 8          10   X   X   X   X   X  10                 
 9      10   X   X   X   X   X   X   X  10             
10          10   X   X   X   X   X  10                 
11              10   X   X   X  10                     
12                  10   X  10                         
13                      10                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
35 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 3                                                     
 4                                                     
 5                                                     
 6                   ?   0   -                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 3                                                     
 4                                                     
 5                                                     
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 333709716796875000000 optins
The initial system score was 342
The maximum obtainable for the system is 346
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 22
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 333709716796875000000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (13, 9)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 10
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.379000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 13), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 6)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.38 Ms for simplify_system to complete
-------------------------- running turn 76 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -   -                         
 5                   -   X   X                         
 6               -   X   X   -                         
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -   -                         
 5                   -   X   X                         
 6               -   X   X   -                         
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?   X                         
 6                   ?   0   -                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8   7                         
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 1668548583984375000000 optins
The initial system score was 344
The maximum obtainable for the system is 347
The score gain were looking for is 3
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 1668548583984375000000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 5) - {'options': [(9, 5), (10, 6)], 'scores': [1, 1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9), (10, 5)]
bots_outside_system_moving_to_optional  = [(14, 9), (10, 5)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.451000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9), (10, 5)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 5), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9), (10, 5)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9), (10, 5)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 9), (9, 6)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 6), (9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10), (9, 6)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11), (9, 6)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11), (9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (11, 7), (8, 11), (8, 7), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 8), (9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 13), (8, 11), (8, 7), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 8), (9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (11, 7), (8, 11), (8, 7), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11), (11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 13), (8, 11), (8, 7), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11), (11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (11, 10), (6, 10), (8, 10), (7, 10), (8, 6), (8, 11), (8, 7), (7, 9), (9, 13), (6, 8), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (11, 10), (6, 10), (8, 10), (7, 10), (8, 6), (9, 13), (8, 7), (7, 9), (6, 8), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (8, 7), (7, 9), (9, 13), (6, 8), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 13), (8, 7), (7, 9), (6, 8), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (8, 7), (7, 9), (9, 13), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 13), (8, 7), (7, 9), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (7, 7), (11, 10), (8, 6), (8, 7), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 6)], 'scores': [-1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 6)], 'scores': [-1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.45 Ms for simplify_system to complete
-------------------------- running turn 77 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   ?                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 2502822875976562500000 optins
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.345000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.34 Ms for simplify_system to complete
-------------------------- running turn 78 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   ?                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 2502822875976562500000 optins
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.067000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.07 Ms for simplify_system to complete
-------------------------- running turn 79 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   ?                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 2502822875976562500000 optins
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.056000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.06 Ms for simplify_system to complete
-------------------------- running turn 80 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   ?                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 2502822875976562500000 optins
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.158000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.16 Ms for simplify_system to complete
-------------------------- running turn 81 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   ?                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 2502822875976562500000 optins
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.534000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.53 Ms for simplify_system to complete
-------------------------- running turn 82 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   -   -   -         
11           -   X   X   X   X   -                     
12               -   -   X   -                         
13                       X                             
14                       -                             


-------------------------------------
TARGET system:
37 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                      12                             
 6                  12   X  12                         
 7              12   X   X   X  12                     
 8          12   X   X   X   X   X  12                 
 9      12   X   X   X   X   X   X   X  12             
10          12   X   X   X   X   X  12                 
11              12   X   X   X  12                     
12                  12   X  12                         
13                      12                             
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   ?                         
 7               ?   0   0   0   ?                     
 8           ?   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           ?   0   0   0   0   0   -                 
11               ?   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                                                     

The system now has a total of 2502822875976562500000 optins
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The simplifications thus far have yielded a gain of 7
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  9.459000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 9.46 Ms for simplify_system to complete
-------------------------- running turn 83 ---------------------------


=> INITIAL
BOT Positions:
41 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                               -                             
 5                           -   X   -                         
 6                       -   X   X   X   -                     
 7                   -   X   X   X   X   X   -                 
 8               -   X   X   X   X   X   X   -                 
 9       X   -   X   X   X   X   X   X   X   X   X   X   X   - 
10               -   X   X   X   X   X   X   -   -   -         
11                   -   X   X   X   X   -                     
12                       -   -   X   -                         
13                               X   -                         
14                               -       -                     
15                               X   -   X                     
16                                                             

Awarded move for (9, 15)  to (9, 14)
Awarded move for (3, 9)  to (4, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                               -                             
 5                           -   X   -                         
 6                       -   X   X   X   -                     
 7                   -   X   X   X   X   X   -                 
 8               -   X   X   X   X   X   X   -                 
 9               X   X   X   X   X   X   X   X   X   X   X   - 
10               -   X   X   X   X   X   X   -   -   -         
11                   -   X   X   X   X   -                     
12                       -   -   X   -                         
13                               X   -                         
14                                       -                     
15                                   -   X                     
16                                                             


-------------------------------------
TARGET system:
37 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                             
 5                              12                             
 6                          12   X  12                         
 7                      12   X   X   X  12                     
 8                  12   X   X   X   X   X  12                 
 9              12   X   X   X   X   X   X   X  12             
10                  12   X   X   X   X   X  12                 
11                      12   X   X   X  12                     
12                          12   X  12                         
13                              12                             
14                                                             
15                                                             
16                                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                             
 5                               ?                             
 6                           ?   0   ?                         
 7                       ?   0   0   0   ?                     
 8                   ?   0   0   0   0   0   -                 
 9               ?   0   0   0   0   0   0   0   ?   X         
10                   ?   0   0   0   0   0   -                 
11                       ?   0   0   0   -                     
12                           -   0   -                         
13                               ?                             
14                                                             
15                                                             
16                                                             

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                             
 5                               8                             
 6                           8   9   8                         
 7                       8   9  10   9   8                     
 8                   8   9  10  11  10   9   8                 
 9               8   9  10  11  12  11  10   9   8   7         
10                   8   9  10  11  10   9   8                 
11                       8   9  10   9   8                     
12                           8   9   8                         
13                               8                             
14                                                             
15                                                             
16                                                             

The system now has a total of 2502822875976562500000 optins
The initial system score was 361
The maximum obtainable for the system is 366
The score gain were looking for is 5
The simplifications thus far have yielded a gain of 26
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 2502822875976562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(11, 15) - {'options': [(10, 15)], 'scores': [1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

It took  12.182000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (9, 13), (8, 11), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (9, 5), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (9, 13), (7, 9), (6, 8), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (7, 9), (9, 13), (6, 8), (10, 10), (9, 12)]
filtered = [(7, 9)]
possible bots to move = [(10, 11), (11, 10), (9, 13), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (11, 15): {'options': [(10, 15)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(11, 15) - {'options': [(10, 15)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 12.18 Ms for simplify_system to complete
-------------------------- running turn 84 ---------------------------


=> INITIAL
BOT Positions:
41 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           -                             
 5                       -   X   -                         
 6                   -   X   X   X   -                     
 7               -   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   X   -                 
 9       X   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   -   X   X   X   X   X   X   -   -   -         
11               -   X   X   X   X   -                     
12                   -   -   X   -                         
13                           X   -                         
14                       -   X   -                         
15                           -   X                         
16                                                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
41 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           -                             
 5                       -   X   -                         
 6                   -   X   X   X   -                     
 7               -   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   X   -                 
 9       X   X   X   X   X   X   X   X   X   X   X   X   - 
10       -   -   X   X   X   X   X   X   -   -   -         
11               -   X   X   X   X   -                     
12                   -   -   X   -                         
13                           X   -                         
14                       -   X   -                         
15                           -   X                         
16                                                         


-------------------------------------
TARGET system:
39 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                         
 5                          14                             
 6                      14   X  14                         
 7                  14   X   X   X  14                     
 8              14   X   X   X   X   X  14                 
 9          14   X   X   X   X   X   X   X  14             
10              14   X   X   X   X   X  14                 
11                  14   X   X   X  14                     
12                      14   X  14                         
13                          14                             
14                                                         
15                                                         
16                                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                         
 5                           ?                             
 6                       ?   0   ?                         
 7                   ?   0   0   0   ?                     
 8               ?   0   0   0   0   0   -                 
 9       X   ?   0   0   0   0   0   0   0   ?   X         
10               ?   0   0   0   0   0   -                 
11                   ?   0   0   0   -                     
12                       -   0   -                         
13                           ?                             
14                           X                             
15                                                         
16                                                         

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                         
 5                           8                             
 6                       8   9   8                         
 7                   8   9  10   9   8                     
 8               8   9  10  11  10   9   8                 
 9       7   8   9  10  11  12  11  10   9   8   7         
10               8   9  10  11  10   9   8                 
11                   8   9  10   9   8                     
12                       8   9   8                         
13                           8                             
14                           7                             
15                                                         
16                                                         

The system now has a total of 64072265625000000000 optins
The initial system score was 364
The maximum obtainable for the system is 369
The score gain were looking for is 5
The simplifications thus far have yielded a gain of 13
Optional squares exist
3 bots need to move into optional
And 3 bots need to move out of occupied

System result = ...
The system has a total of 64072265625000000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10), (6, 8)], 'scores': [1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11)], 'scores': [1, 0, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (10, 12), (8, 12)], 'scores': [1, -1, -1]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(5, 9), (13, 9), (9, 13)]
bots_outside_system = [(14, 9), (4, 9), (9, 14)]
bots_outside_system_moving_to_optional  = [(14, 9), (4, 9), (9, 14)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (6, 8), (9, 5), (14, 9), (4, 9), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9), (9, 13)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (12, 9), (9, 12), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9), (9, 13)]

It took  12.582000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(6, 9), (12, 9), (9, 12)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(6, 9), (11, 9), (9, 12)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(6, 9), (10, 9), (9, 12)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(6, 9), (9, 9), (9, 12)]
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(6, 9), (9, 10), (9, 12)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10), (7, 9), (9, 12)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (11, 7), (8, 11), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 11), (7, 9), (9, 12)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11), (7, 9), (9, 12)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (7, 9), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 10), (7, 9), (9, 12)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 10), (7, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8)]
filtered = [(8, 10), (7, 8)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 5), (9, 6), (11, 7), (10, 10), (11, 8)]
filtered = [(9, 8), (8, 7)]
possible bots to move = [(10, 11), (10, 6), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (10, 10), (11, 8), (9, 5)]
filtered = [(10, 8), (8, 7)]
possible bots to move = [(10, 11), (10, 6), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (9, 7), (9, 5), (9, 6), (11, 7), (10, 10), (11, 8)]
filtered = [(10, 8), (9, 7)]
possible bots to move = [(10, 11), (10, 6), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (9, 7), (9, 6), (11, 7), (10, 10), (11, 8)]
filtered = [(10, 8), (9, 6)]
possible bots to move = [(10, 11), (10, 6), (7, 11), (11, 10), (10, 7), (6, 10), (7, 10), (9, 7), (11, 7), (9, 6), (10, 10), (11, 8)]
filtered = [(9, 6), (11, 8)]
possible bots to move = [(10, 11), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (11, 7), (10, 10), (11, 8)]
filtered = [(10, 7)]
possible bots to move = [(10, 11), (7, 11), (11, 10), (6, 10), (7, 10), (10, 10)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 7)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(8, 7)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 8)], 'scores': [1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(9, 6)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(10, 7)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (10, 15): {'options': [(10, 14)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 6)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(10, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 8)], 'scores': [-1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(12, 8)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 7)], 'scores': [-1]}, (9, 12): {'options': [(10, 12)], 'scores': [-1]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 7)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(8, 7)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8)], 'scores': [1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(9, 6)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(10, 7)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 6)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(10, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 8)], 'scores': [-1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 7)], 'scores': [-1]}
(9, 12) - {'options': [(10, 12)], 'scores': [-1]}
It took a total of 12.58 Ms for simplify_system to complete
-------------------------- running turn 85 ---------------------------


=> INITIAL
BOT Positions:
41 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -                         
 5                       -   X   -                     
 6                   -   X   X   X   -                 
 7               -   X   X   X   X   X   -             
 8           -   X   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   -   -   -     
11               -   X   X   X   X   -                 
12                   -   -   X   X   -                 
13                       -   X   -                     
14                           -   X                     
15                                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
41 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -                         
 5                       -   X   -                     
 6                   -   X   X   X   -                 
 7               -   X   X   X   X   X   -             
 8           -   X   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   -   -   -     
11               -   X   X   X   X   -                 
12                   -   -   X   X   -                 
13                       -   X   -                     
14                           -   X                     
15                                                     


-------------------------------------
TARGET system:
40 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                     
 5                          15                         
 6                      15   X  15                     
 7                  15   X   X   X  15                 
 8              15   X   X   X   X   X  15             
 9          15   X   X   X   X   X   X   X  15         
10              15   X   X   X   X   X  15             
11                  15   X   X   X  15                 
12                      15   X  15                     
13                          15                         
14                                                     
15                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
40 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                     
 5                           ?                         
 6                       ?   0   ?                     
 7                   ?   0   0   0   ?                 
 8               ?   0   0   0   0   0   ?             
 9       X   ?   0   0   0   0   0   0   0   ?   X     
10               ?   0   0   0   0   0   -             
11                   ?   0   0   0   -                 
12                       -   0   ?                     
13                           ?                         
14                                                     
15                                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                     
 5                           8                         
 6                       8   9   8                     
 7                   8   9  10   9   8                 
 8               8   9  10  11  10   9   8             
 9       7   8   9  10  11  12  11  10   9   8   7     
10               8   9  10  11  10   9   8             
11                   8   9  10   9   8                 
12                       8   9   8                     
13                           8                         
14                                                     
15                                                     

The system now has a total of 1601806640625000000000 optins
The initial system score was 368
The maximum obtainable for the system is 371
The score gain were looking for is 3
The simplifications thus far have yielded a gain of 7
Optional squares exist
2 bots need to move into optional
And 2 bots need to move out of occupied

System result = ...
The system has a total of 1601806640625000000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10), (6, 8)], 'scores': [1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 8)], 'scores': [1, 0]}



bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = [(5, 9), (13, 9)]
bots_outside_system = [(14, 9), (4, 9)]
bots_outside_system_moving_to_optional  = [(14, 9), (4, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 15
num_target_bots_in_occupied = 25
current_bots_in_optional = [(10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (12, 8), (14, 9), (4, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (6, 8), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9)]

It took  11.843000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(6, 9), (12, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 8), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 9), (7, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 9), (12, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 8), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 9), (9, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 9), (9, 10)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 8), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (8, 7), (9, 5), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 9), (9, 11)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 9), (8, 11)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 8), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (11, 9), (8, 7), (9, 5), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (11, 9), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(11, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 8), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(10, 9)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(10, 8)]
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (8, 8), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(9, 8)]
possible bots to move = [(10, 11), (10, 6), (7, 7), (10, 12), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (8, 7), (9, 6), (9, 13), (6, 8), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 8)]
possible bots to move = [(10, 11), (10, 6), (10, 12), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (9, 13), (8, 7), (9, 5), (9, 6), (11, 7), (10, 10), (11, 8), (9, 12), (12, 8)]
filtered = [(8, 7)]
possible bots to move = [(10, 11), (10, 6), (10, 12), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 7), (11, 7), (9, 6), (9, 13), (10, 10), (11, 8), (9, 5), (9, 12), (12, 8)]
filtered = [(9, 7)]
possible bots to move = [(10, 11), (10, 6), (10, 12), (7, 11), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (9, 13), (9, 5), (9, 6), (11, 7), (10, 10), (11, 8), (9, 12), (12, 8)]
filtered = [(10, 7)]
possible bots to move = [(10, 11), (10, 6), (10, 12), (7, 11), (11, 10), (6, 10), (8, 10), (7, 10), (8, 6), (9, 6), (9, 13), (10, 10), (9, 5), (9, 12)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(8, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(8, 7)], 'scores': [1]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(9, 8)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(11, 7)], 'scores': [-1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 8)], 'scores': [-1]}, (9, 7): {'options': [(10, 7)], 'scores': [-1]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (11, 7): {'options': [(11, 8)], 'scores': [1]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(9, 7)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(12, 8)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 7)], 'scores': [-1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(8, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(8, 7)], 'scores': [1]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(9, 8)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(11, 7)], 'scores': [-1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 8)], 'scores': [-1]}
(9, 7) - {'options': [(10, 7)], 'scores': [-1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8)], 'scores': [1]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(9, 7)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 7)], 'scores': [-1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 11.84 Ms for simplify_system to complete
-------------------------- running turn 86 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.465000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
-------------------------- running turn 87 ---------------------------
It took  67.775000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.491000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
-------------------------- running turn 88 ---------------------------
It took  67.459000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.539000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
-------------------------- running turn 89 ---------------------------
It took  67.675000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.483000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
-------------------------- running turn 90 ---------------------------
It took  67.488000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.683000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
-------------------------- running turn 91 ---------------------------
It took  68.261000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.452000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 92 ---------------------------
It took  67.739000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.850000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 93 ---------------------------
It took  67.637000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.503000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 94 ---------------------------
It took  67.780000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.411000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 95 ---------------------------
It took  67.743000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.525000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 96 ---------------------------
It took  67.859000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.475000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 97 ---------------------------
It took  67.448000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.450000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (8, 14), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 98 ---------------------------
It took  67.901000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.542000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
-------------------------- running turn 99 ---------------------------
It took  68.326000ms for start to complete


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -   -             
12               -   X   X   X   -   X             
13                   -   X   X                     
14                   X   -   -                     
15                                                 


-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X   2             
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =   -             
12               -   0   0   0   -   X             
13                   -   0   ?                     
14                   X   -                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7   6             
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 20954757928848266601562500000 optins
The initial system score was 382
The maximum obtainable for the system is 386
The score gain were looking for is 4
The simplifications thus far have yielded a gain of 0
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied

System result = ...
The system has a total of 20954757928848266601562500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12), (12, 11)], 'scores': [1, 1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}



bots_in_optional = [(14, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(12, 12), (8, 14)]
bots_outside_system_moving_to_optional  = [(12, 12), (8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (10, 13), (12, 12), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

It took  8.559000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (12, 12), (8, 14), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12), (8, 14)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (12, 12), (10, 13), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(12, 12)]
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Testing a bot freeze situation
Returning a valid solution
The found system doesnt have the max_gain
2
4
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 12) - {'options': [(12, 11)], 'scores': [1]}
(8, 14) - {'options': [(8, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1557, in act
  File "<string>", line 1513, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (12, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (3, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (10, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (8, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1559, in act
KeyError: (1, 8)
