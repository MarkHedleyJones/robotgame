Game seed: 497659723
Match seed: 497659723-0
--------------------------- running turn 0 ---------------------------
--------------------------- running turn 1 ---------------------------
--------------------------- running turn 2 ---------------------------
--------------------------- running turn 3 ---------------------------
--------------------------- running turn 4 ---------------------------
--------------------------- running turn 5 ---------------------------
--------------------------- running turn 6 ---------------------------
--------------------------- running turn 7 ---------------------------
--------------------------- running turn 8 ---------------------------
--------------------------- running turn 9 ---------------------------
-------------------------- running turn 10 ---------------------------
-------------------------- running turn 11 ---------------------------
-------------------------- running turn 12 ---------------------------
-------------------------- running turn 13 ---------------------------
-------------------------- running turn 14 ---------------------------
-------------------------- running turn 15 ---------------------------
-------------------------- running turn 16 ---------------------------
-------------------------- running turn 17 ---------------------------
-------------------------- running turn 18 ---------------------------


=> INITIAL
BOT Positions:
9 participants
     6   7   8   9  10  11  
 6                         
 7               X   -     
 8           -   X   -     
 9       -   X   X   X   - 
10           X   X   -     
11           -   -   X     
12               X         
13                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     6   7   8   9  10  11  
 6                         
 7               X   -     
 8           -   X   -     
 9       -   X   X   X   - 
10           X   X   -     
11           -   -   X     
12               X         
13                         


-------------------------------------
TARGET system:
9 participants
()
     6   7   8   9  10  11  
 6                         
 7               4         
 8           4   X   4     
 9       4   X   X   X   4 
10           4   X   4     
11               4         
12                         
13                         

Removing option (10, 11) from bot at (10, 11)
Removing option (8, 11) from bot at (8, 10)
Removing option (9, 12) from bot at (9, 12)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
9 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           -   0   -     
 9       -   0   0   0   - 
10           ?   0   -     
11               -   X     
12               X         
13                         

The system now has a total of 9000 optins
The initial system score was 102
The maximum obtainable for the system is 105
The score gain were looking for is 3
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 9000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(10, 10)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10)], 'scores': [1, 0, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(8, 10), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(10, 11), (9, 12)]
bots_outside_system_moving_to_optional  = [(10, 11), (9, 12)]
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 4
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 10), (9, 7), (10, 11), (9, 12)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.483000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.48 Ms for simplify_system to complete
-------------------------- running turn 19 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               X   -     
 8       X   -   X   -     
 9       -   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               X   -     
 8       X   -   X   -     
 9       -   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 6                         
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         

Removing option (11, 10) from bot at (10, 10)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (7, 8) from bot at (7, 8)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8       X   -   0   -     
 9       -   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

The system now has a total of 180000 optins
The initial system score was 105
The maximum obtainable for the system is 106
The score gain were looking for is 1
Optional squares exist
1 bots need to move into optional
But no bots need to move into occupied

System result = ...
The system has a total of 180000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(7, 8)]
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

It took  1.829000ms for simplify_system to complete
possible bots to move = [(9, 10), (10, 10), (9, 8), (8, 10), (9, 9), (8, 9), (9, 11), (7, 8), (10, 9), (9, 7)]
filtered = [(7, 8)]
possible bots to move = [(8, 9), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
filtered = []
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
checking
{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 8): {'options': [(8, 8)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 8) - {'options': [(8, 8)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.83 Ms for simplify_system to complete
-------------------------- running turn 20 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  
 6                     
 7           5         
 8       5   X   5     
 9   5   X   X   X   5 
10       5   X   5     
11           5         
12                     

Removing option (11, 10) from bot at (10, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           ?         
 8       ?   0   -     
 9   -   0   0   0   - 
10       ?   0   ?     
11           ?         
12                     

The system now has a total of 270000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.596000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.60 Ms for simplify_system to complete
-------------------------- running turn 21 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  
 6                     
 7           5         
 8       5   X   5     
 9   5   X   X   X   5 
10       5   X   5     
11           5         
12                     

Removing option (11, 10) from bot at (10, 10)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           ?         
 8       ?   0   -     
 9   -   0   0   0   - 
10       ?   0   ?     
11           ?         
12                     

The system now has a total of 270000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.742000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.74 Ms for simplify_system to complete
-------------------------- running turn 22 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  
 6                     
 7           5         
 8       5   X   5     
 9   5   X   X   X   5 
10       5   X   5     
11           5         
12                     

Removing option (11, 10) from bot at (10, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           ?         
 8       ?   0   -     
 9   -   0   0   0   - 
10       ?   0   ?     
11           ?         
12                     

The system now has a total of 270000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.626000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.63 Ms for simplify_system to complete
-------------------------- running turn 23 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  
 6                     
 7           5         
 8       5   X   5     
 9   5   X   X   X   5 
10       5   X   5     
11           5         
12                     

Removing option (11, 10) from bot at (10, 10)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           ?         
 8       ?   0   -     
 9   -   0   0   0   - 
10       ?   0   ?     
11           ?         
12                     

The system now has a total of 270000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.627000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.63 Ms for simplify_system to complete
-------------------------- running turn 24 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  
 6                     
 7           5         
 8       5   X   5     
 9   5   X   X   X   5 
10       5   X   5     
11           5         
12                     

Removing option (11, 10) from bot at (10, 10)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           ?         
 8       ?   0   -     
 9   -   0   0   0   - 
10       ?   0   ?     
11           ?         
12                     

The system now has a total of 270000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.765000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.77 Ms for simplify_system to complete
-------------------------- running turn 25 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           X   -     
 8   -   X   X   -     
 9   -   X   X   X   - 
10   -   X   X   X   - 
11       -   X   -     
12           -         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  
 6                     
 7           5         
 8       5   X   5     
 9   5   X   X   X   5 
10       5   X   5     
11           5         
12                     

Removing option (11, 10) from bot at (10, 10)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  
 6                     
 7           ?         
 8       ?   0   -     
 9   -   0   0   0   - 
10       ?   0   ?     
11           ?         
12                     

The system now has a total of 270000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  2.616000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 2.62 Ms for simplify_system to complete
-------------------------- running turn 26 ---------------------------


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  15  16  
 6                                         
 7           X   -                         
 8   -   X   X   -                         
 9   -   X   X   X   -   X   -   X   X   - 
10   -   X   X   X   -           -         
11       -   X   -                         
12           -                             
13           X                             
14                                         

Awarded move for (9, 13)  to (9, 12)
Awarded move for (12, 9)  to (11, 9)
Awarded move for (14, 9)  to (13, 9)
simplification made, repeating
Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  13  14  15  16  
 6                                         
 7           X   -                         
 8   -   X   X   -                         
 9   -   X   X   X                         
10   -   X   X   X   -                     
11       -   X   -                         
12                                         
13                                         
14                                         


-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  13  14  15  16  
 6                                         
 7           5                             
 8       5   X   5                         
 9   5   X   X   X                         
10       5   X   5                         
11           5                             
12                                         
13                                         
14                                         

Removing option (11, 10) from bot at (10, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  13  14  15  16  
 6                                         
 7           ?                             
 8       ?   0   -                         
 9   -   0   0   0                         
10       ?   0   ?                         
11           ?                             
12                                         
13                                         
14                                         

The system now has a total of 270000 optins
The initial system score was 136
The maximum obtainable for the system is 140
The score gain were looking for is 4
Optional squares exist
No bots need to leave optional
5
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 270000 options
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.027000ms for simplify_system to complete
The system only has one possibility so returning early
It took a total of 4.03 Ms for simplify_system to complete
-------------------------- running turn 27 ---------------------------


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  15  
 6                                     
 7           X   -                     
 8   -   X   X   -   -                 
 9   -   X   X   X   X   -   X   X     
10   -   X   X   X   -       -   -     
11       -   X   -                     
12           X                         
13           -                         

Awarded move for (13, 9)  to (12, 9)
Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
12 participants
     7   8   9  10  11  12  13  14  15  
 6                                     
 7           X   -                     
 8   -   X   X   -   -                 
 9   -   X   X   X   X                 
10   -   X   X   X   -                 
11       -   X   -                     
12           X                         
13           -                         


-------------------------------------
TARGET system:
12 participants
()
     7   8   9  10  11  12  13  14  15  
 6                                     
 7           7                         
 8       7   X   7                     
 9   7   X   X   X   7                 
10       7   X   7                     
11           7                         
12                                     
13                                     

Removing option (11, 10) from bot at (10, 10)
Removing option (10, 11) from bot at (10, 10)
Removing option (7, 8) from bot at (8, 8)
Removing option (11, 8) from bot at (11, 9)
Removing option (8, 11) from bot at (8, 10)
Removing option (7, 10) from bot at (8, 10)
Removing option (8, 11) from bot at (9, 11)
Removing option (10, 11) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 11)
Removing option (9, 12) from bot at (9, 12)
Removing option (9, 13) from bot at (9, 12)
Removing option (10, 7) from bot at (9, 7)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
12 participants
     7   8   9  10  11  12  13  14  15  
 6                                     
 7           ?                         
 8       ?   0   -                     
 9   -   0   0   0   ?                 
10       ?   0   ?                     
11           ?                         
12           X                         
13                                     

The system now has a total of 72000 optins
The initial system score was 140
The maximum obtainable for the system is 143
The score gain were looking for is 3
Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied

System result = ...
The system has a total of 72000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(10, 9), (10, 10)], 'scores': [1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(8, 10) - {'options': [(8, 9), (8, 10)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (8, 10), (10, 10)], 'scores': [1, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}



bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = [(9, 11)]
bots_outside_system = [(9, 12)]
bots_outside_system_moving_to_optional  = [(9, 12)]
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 7
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 10), (8, 8), (11, 9), (8, 10), (9, 7), (9, 12)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9), (9, 11)]

It took  2.945000ms for simplify_system to complete
possible bots to move = [(8, 9), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (10, 9), (9, 7)]
filtered = [(9, 10)]
possible bots to move = [(10, 10), (9, 8), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (10, 9), (9, 7)]
filtered = [(9, 9)]
possible bots to move = [(8, 9), (10, 10), (9, 8), (11, 9), (8, 8), (10, 9), (9, 7)]
filtered = [(8, 9)]
possible bots to move = [(10, 10), (11, 9), (10, 9)]
filtered = []
Testing a bot freeze situation
Returning a valid solution
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
checking
{(9, 10): {'options': [(9, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.94 Ms for simplify_system to complete
-------------------------- running turn 28 ---------------------------


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.950000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
-------------------------- running turn 29 ---------------------------
It took  2.514000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.757000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
-------------------------- running turn 30 ---------------------------
It took  2.313000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.774000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
-------------------------- running turn 31 ---------------------------
It took  2.787000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.852000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 32 ---------------------------
It took  2.766000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.763000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 33 ---------------------------
It took  2.778000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.885000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 34 ---------------------------
It took  2.764000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.948000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 35 ---------------------------
It took  2.756000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.809000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 36 ---------------------------
It took  2.753000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.879000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 37 ---------------------------
It took  2.866000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.960000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 38 ---------------------------
It took  2.743000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.792000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 39 ---------------------------
It took  2.795000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.806000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 40 ---------------------------
It took  2.773000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.015000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
-------------------------- running turn 41 ---------------------------
It took  2.898000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.726000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 42 ---------------------------
It took  2.799000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.754000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 43 ---------------------------
It took  2.772000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.959000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 44 ---------------------------
It took  2.785000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.766000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 45 ---------------------------
It took  2.835000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.785000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 46 ---------------------------
It took  2.879000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.068000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 47 ---------------------------
It took  2.762000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.733000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 48 ---------------------------
It took  2.815000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.775000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 49 ---------------------------
It took  2.805000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.967000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 50 ---------------------------
It took  2.790000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.778000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (16, 12)
-------------------------- running turn 51 ---------------------------
It took  2.890000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.848000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 52 ---------------------------
It took  2.931000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  5.103000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 53 ---------------------------
It took  2.770000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.760000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 54 ---------------------------
It took  2.752000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.785000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 55 ---------------------------
It took  2.789000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.979000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 56 ---------------------------
It took  2.815000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.794000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 57 ---------------------------
It took  2.801000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.836000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 58 ---------------------------
It took  2.772000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.099000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 59 ---------------------------
It took  2.741000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.765000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 60 ---------------------------
It took  2.845000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.780000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (17, 7)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (6, 16)
-------------------------- running turn 61 ---------------------------
It took  2.877000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.005000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 62 ---------------------------
It took  2.771000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.769000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 63 ---------------------------
It took  2.769000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.791000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 64 ---------------------------
It took  2.806000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.985000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 65 ---------------------------
It took  2.802000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.780000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 66 ---------------------------
It took  2.859000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.862000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 67 ---------------------------
It took  2.877000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.142000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 68 ---------------------------
It took  2.790000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.808000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 69 ---------------------------
It took  2.789000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.836000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 70 ---------------------------
It took  2.764000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.978000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 71 ---------------------------
It took  2.967000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.872000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 72 ---------------------------
It took  2.831000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.781000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 73 ---------------------------
It took  2.853000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.989000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 74 ---------------------------
It took  2.785000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.783000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 75 ---------------------------
It took  2.838000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.806000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 76 ---------------------------
It took  2.830000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.979000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 77 ---------------------------
It took  2.833000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.794000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 78 ---------------------------
It took  2.814000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.814000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 79 ---------------------------
It took  2.859000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.009000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 80 ---------------------------
It took  2.803000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.806000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 6)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (11, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 7)
-------------------------- running turn 81 ---------------------------
It took  2.910000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.759000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 82 ---------------------------
It took  2.782000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.023000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 83 ---------------------------
It took  2.909000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.783000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 84 ---------------------------
It took  2.989000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.857000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 85 ---------------------------
It took  2.813000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.978000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 86 ---------------------------
It took  2.808000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.751000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 87 ---------------------------
It took  2.776000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.760000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 88 ---------------------------
It took  2.819000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  5.009000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 89 ---------------------------
It took  2.765000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.791000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 90 ---------------------------
It took  2.795000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.741000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (1, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (4, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (3, 4)
-------------------------- running turn 91 ---------------------------
It took  2.912000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.007000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 92 ---------------------------
It took  2.795000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.789000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 93 ---------------------------
It took  2.770000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.790000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 94 ---------------------------
It took  2.853000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.010000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 95 ---------------------------
It took  2.837000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.814000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 96 ---------------------------
It took  2.841000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.933000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 97 ---------------------------
It took  2.813000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.017000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 98 ---------------------------
It took  3.110000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  4.113000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
-------------------------- running turn 99 ---------------------------
It took  2.896000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           X   -                 
 8   -   X   X   X   -             
 9   -   X   X   X   X   X   X     
10   -   X   X   X   -   -   -     
11       -   X   -                 
12           -                     


-------------------------------------
TARGET system:
14 participants
()
     7   8   9  10  11  12  13  14  
 6           1                     
 7           X   1                 
 8   1   X   X   X   1             
 9   X   X   X   X   X   1         
10   1   X   X   X   1             
11       1   X   1                 
12           1                     

Removing option (13, 9) from bot at (13, 9)
Removing option (13, 10) from bot at (13, 9)
Removing option (12, 10) from bot at (12, 9)

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     7   8   9  10  11  12  13  14  
 6           -                     
 7           0   -                 
 8   -   0   0   0   -             
 9   =   0   0   0   0   ?   X     
10   -   0   0   0   -             
11       -   0   -                 
12           -                     

The system now has a total of 75000000 optins
The initial system score was 143
The maximum obtainable for the system is 145
The score gain were looking for is 2
Optional squares exist
No bots need to leave optional
13
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 75000000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8)], 'scores': [1, 1, 0, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}



bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []

num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (10, 9), (9, 7), (12, 9)]

Testing a bot freeze situation
Returning a valid solution
It took  3.804000ms for simplify_system to complete
possible bots to move = [(11, 9)]
filtered = [(11, 9)]
solve_system returned NONE
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1480, in act
  File "<string>", line 1436, in decide_actions
TypeError: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (2, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (12, 9)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (10, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (9, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (15, 14)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1482, in act
KeyError: (7, 17)
[5, 20] - seed: 497659723-0
