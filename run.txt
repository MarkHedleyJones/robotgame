Game seed: 249441369
Match seed: 249441369-0
--------------------------- running turn 0 ---------------------------
--------------------------- running turn 1 ---------------------------
--------------------------- running turn 2 ---------------------------
--------------------------- running turn 3 ---------------------------
--------------------------- running turn 4 ---------------------------
--------------------------- running turn 5 ---------------------------
--------------------------- running turn 6 ---------------------------
--------------------------- running turn 7 ---------------------------
--------------------------- running turn 8 ---------------------------
--------------------------- running turn 9 ---------------------------
-------------------------- running turn 10 ---------------------------
-------------------------- running turn 11 ---------------------------
-------------------------- running turn 12 ---------------------------
-------------------------- running turn 13 ---------------------------
-------------------------- running turn 14 ---------------------------
-------------------------- running turn 15 ---------------------------
-------------------------- running turn 16 ---------------------------
-------------------------- running turn 17 ---------------------------
-------------------------- running turn 18 ---------------------------
-------------------------- running turn 19 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  12  13  
 6                                 
 7               X   -             
 8       X   -   X   -             
 9       -   X   X   X   -   X     
10           -   X   -             
11           -   X                 
12               X                 
13               -                 

Awarded move for (12, 9)  to (11, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
9 participants
     6   7   8   9  10  11  12  13  
 6                                 
 7               X   -             
 8       X   -   X   -             
 9       -   X   X   X             
10           -   X   -             
11           -   X                 
12               X                 
13               -                 

determine_ideal_outcome called with [(9, 10), (9, 8), (9, 9), (8, 9), (9, 11), (9, 12), (7, 8), (10, 9), (9, 7)]
outcome = 
num_optional - 4
optional - [(10, 8), (10, 10), (8, 8), (8, 10), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (9, 8), (9, 9), (8, 9), (9, 11), (9, 12), (7, 8), (10, 9), (9, 7)]
levels - {8: [(9, 13)], 9: [(10, 7), (9, 12), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (8, 8), (8, 10), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 96

-------------------------------------
TARGET system:
9 participants
()
     6   7   8   9  10  11  12  13  
 6                                 
 7               4                 
 8           4   X   4             
 9       4   X   X   X             
10           4   X   4             
11               4                 
12                                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
9 participants
     6   7   8   9  10  11  12  13  
 6                                 
 7               ?                 
 8       X   -   0   -             
 9       -   0   0   0             
10           -   0   -             
11               ?                 
12               X                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6                                 
 7              10                 
 8       9  10  11  10             
 9      10  11  12  11             
10          10  11  10             
11              10                 
12               9                 
13                                 

The system now has a total of 4800 optins
The initial system score was 103
The maximum obtainable for the system is 106
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = [(9, 11)]
bots_outside_system = [(9, 12), (7, 8)]
bots_outside_system_moving_to_optional  = [(9, 12), (7, 8)]
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 10), (9, 11)]
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 5
current_bots_in_optional = [(9, 7), (9, 12), (7, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9), (9, 11)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 10), (9, 8), (9, 9), (8, 9), (10, 9), (9, 11)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 11)]
So lets move one of [(9, 10), (9, 8), (8, 9), (10, 9)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 4800 options
(9, 10) - {'options': [(9, 9), (8, 10), (10, 10)], 'scores': [1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  1.911000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (9, 9), (8, 9), (7, 8), (10, 9), (9, 7)]
filtered = [(9, 10), (7, 8)]
Will move (7, 8)
0 systems were filtered as they were not valid
possible bots to move = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9), (9, 7)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (9, 9), (8, 9), (10, 9), (9, 7)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(8, 9), (9, 8), (10, 9), (9, 7)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((9, 8), (9, 8)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 9): {'options': [(8, 10)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (7, 8): {'options': [(8, 8)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(9, 10): {'options': [(9, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 9): {'options': [(8, 10)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (7, 8): {'options': [(8, 8)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 9) - {'options': [(8, 10)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 8) - {'options': [(8, 8)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.91 Ms for simplify_system to complete
-------------------------- running turn 20 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         

determine_ideal_outcome called with [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
levels - {9: [(10, 11), (11, 8), (10, 7), (7, 10), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 6                         
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           ?             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   -         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 6                         
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 225000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 225000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  1.608000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((9, 10), (9, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.61 Ms for simplify_system to complete
-------------------------- running turn 21 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         

determine_ideal_outcome called with [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
levels - {9: [(10, 11), (11, 8), (10, 7), (7, 10), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 6                         
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           ?             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   -         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 6                         
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 225000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 225000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  1.601000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((9, 10), (9, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.60 Ms for simplify_system to complete
-------------------------- running turn 22 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         

determine_ideal_outcome called with [(8, 9), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
occupied - [(9, 9), (9, 10), (9, 8), (8, 9), (10, 9)]
available_bots - [(8, 9), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
levels - {9: [(11, 8), (10, 7), (7, 10), (10, 11), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)], 11: [(9, 10), (9, 8), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 6                         
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           ?             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   -         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 6                         
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 225000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(8, 9), (9, 8), (9, 10), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 225000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  1.619000ms for simplify_system to complete
possible bots to move = [(8, 9), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.62 Ms for simplify_system to complete
-------------------------- running turn 23 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         

determine_ideal_outcome called with [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
levels - {9: [(10, 11), (11, 8), (10, 7), (7, 10), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 6                         
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           ?             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   -         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 6                         
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 225000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 225000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  1.620000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((9, 10), (9, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.62 Ms for simplify_system to complete
-------------------------- running turn 24 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         

determine_ideal_outcome called with [(8, 9), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
occupied - [(9, 9), (9, 10), (9, 8), (8, 9), (10, 9)]
available_bots - [(8, 9), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
levels - {9: [(11, 8), (10, 7), (7, 10), (10, 11), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)], 11: [(9, 10), (9, 8), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 6                         
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           ?             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   -         
11           ?             
12                         

Cell Scores:
     7   8   9  10  11  12  
 6                         
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         

The system now has a total of 225000 optins
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(8, 9), (9, 8), (9, 10), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 225000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  1.620000ms for simplify_system to complete
possible bots to move = [(8, 9), (8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 1.62 Ms for simplify_system to complete
-------------------------- running turn 25 ---------------------------


=> INITIAL
BOT Positions:
12 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12           -             
13           X             
14           -             
15           X             
16                         

Awarded move for (9, 13)  to (9, 12)
Awarded move for (9, 15)  to (9, 14)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           X   -         
 8   -   X   X   -   -     
 9   -   X   X   X   X     
10   -   X   X   -         
11       -   X   -         
12                         
13                         
14                         
15                         
16                         

determine_ideal_outcome called with [(8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (8, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 10), (9, 8), (8, 9), (10, 9)]
available_bots - [(8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (8, 9), (10, 9), (9, 7)]
levels - {9: [(11, 8), (10, 7), (7, 10), (10, 11), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 10), (9, 8), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     7   8   9  10  11  12  
 6                         
 7           5             
 8       5   X   5         
 9   5   X   X   X   5     
10       5   X   5         
11           5             
12                         
13                         
14                         
15                         
16                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     7   8   9  10  11  12  
 6                         
 7           ?             
 8       ?   0   -         
 9   -   0   0   0   ?     
10       ?   0   -         
11           ?             
12                         
13                         
14                         
15                         
16                         

Cell Scores:
     7   8   9  10  11  12  
 6                         
 7          10             
 8      10  11  10         
 9  10  11  12  11  10     
10      10  11  10         
11          10             
12                         
13                         
14                         
15                         
16                         

The system now has a total of 225000 optins
The initial system score was 120
The maximum obtainable for the system is 122
The score gain were looking for is 2
The system_score_gain_required = 0

bots_in_optional = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 225000 options
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  2.220000ms for simplify_system to complete
possible bots to move = [(8, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (9, 11), (8, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.22 Ms for simplify_system to complete
-------------------------- running turn 26 ---------------------------


=> INITIAL
BOT Positions:
13 participants
     5   6   7   8   9  10  11  12  
 6                                 
 7                   X   -         
 8           -   X   X   -   -     
 9       X   -   X   X   X   X     
10           -   X   X   -         
11               -   X   -         
12                   X   -         
13                   -             
14                   X             
15                                 

Awarded move for (6, 9)  to (7, 9)
Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     5   6   7   8   9  10  11  12  
 6                                 
 7                   X   -         
 8           -   X   X   -   -     
 9               X   X   X   X     
10           -   X   X   -         
11               -   X   -         
12                   X   -         
13                                 
14                                 
15                                 

determine_ideal_outcome called with [(9, 10), (9, 8), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 6
optional - [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (9, 8), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (10, 9), (9, 7)]
levels - {8: [(10, 12)], 9: [(10, 11), (11, 8), (10, 7), (9, 12), (7, 10), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 116

-------------------------------------
TARGET system:
11 participants
()
     5   6   7   8   9  10  11  12  
 6                                 
 7                   6             
 8               6   X   6         
 9               X   X   X   6     
10               6   X   6         
11                   6             
12                                 
13                                 
14                                 
15                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
11 participants
     5   6   7   8   9  10  11  12  
 6                                 
 7                   ?             
 8               ?   0   -         
 9               0   0   0   ?     
10               ?   0   -         
11                   ?             
12                   X             
13                                 
14                                 
15                                 

Cell Scores:
     5   6   7   8   9  10  11  12  
 6                                 
 7                  10             
 8              10  11  10         
 9              11  12  11  10     
10              10  11  10         
11                  10             
12                   9             
13                                 
14                                 
15                                 

The system now has a total of 28800 optins
The initial system score was 131
The maximum obtainable for the system is 134
The score gain were looking for is 3
The system_score_gain_required = 1

bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 11), (9, 7)]
bots_in_optional_moving_to_occupied = [(9, 11)]
bots_outside_system = [(9, 12)]
bots_outside_system_moving_to_optional  = [(9, 12)]
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 10), (9, 11)]
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 5
current_bots_in_optional = [(11, 9), (8, 10), (8, 8), (9, 7), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 9), (8, 10), (8, 8), (9, 7)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9), (9, 11)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 10), (9, 8), (9, 9), (8, 9), (10, 9), (9, 11)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 11)]
So lets move one of [(9, 10), (9, 8), (8, 9), (10, 9)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 28800 options
(9, 10) - {'options': [(9, 9), (8, 10), (10, 10)], 'scores': [1, -1, -1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(8, 10) - {'options': [(8, 9), (8, 10)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10)], 'scores': [1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}


It took  2.549000ms for simplify_system to complete
possible bots to move = [(9, 10), (9, 8), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (10, 9), (9, 7)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(8, 9), (9, 8), (11, 9), (8, 10), (9, 9), (8, 8), (10, 9), (9, 7)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(11, 9), (10, 9)]
filtered = []
No bots that need to move could be found
Works... [((11, 9), (11, 9)), ((10, 9), (10, 9))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(9, 10): {'options': [(9, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.55 Ms for simplify_system to complete
-------------------------- running turn 27 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -                     
 9   -   X   X   X   X   X   -   X   -   X     
10       -   X   X   -   -                     
11           -   X   -                         
12               -                             
13               X                             
14                                             

Awarded move for (9, 13)  to (9, 12)
Awarded move for (15, 9)  to (14, 9)
Awarded move for (13, 9)  to (12, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
12 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -                     
 9   -   X   X   X   X   X                     
10       -   X   X   -   -                     
11           -   X   -                         
12                                             
13                                             
14                                             

determine_ideal_outcome called with [(10, 8), (9, 8), (11, 9), (8, 10), (8, 8), (9, 10), (9, 11), (9, 9), (8, 9), (9, 7), (10, 9), (7, 9)]
outcome = 
num_optional - 7
optional - [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10)]
available_bots - [(10, 8), (9, 8), (11, 9), (8, 10), (8, 8), (9, 10), (9, 11), (9, 9), (8, 9), (9, 7), (10, 9), (7, 9)]
levels - {9: [(6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 126

-------------------------------------
TARGET system:
12 participants
()
     6   7   8   9  10  11  12  13  14  15  16  
 6                                             
 7               7                             
 8           7   X   7                         
 9       7   X   X   X   7                     
10           7   X   7                         
11               7                             
12                                             
13                                             
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
12 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6                                             
 7               ?                             
 8           ?   0   ?                         
 9       ?   0   0   0   ?                     
10           ?   0   -                         
11               ?                             
12                                             
13                                             
14                                             

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  16  
 6                                             
 7              10                             
 8          10  11  10                         
 9      10  11  12  11  10                     
10          10  11  10                         
11              10                             
12                                             
13                                             
14                                             

The system now has a total of 1350000 optins
The initial system score was 148
The maximum obtainable for the system is 151
The score gain were looking for is 3
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 10), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 10), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 10), (9, 9), (8, 9), (10, 9)]

Optional squares exist
No bots need to leave optional
5
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1350000 options
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  3.185000ms for simplify_system to complete
possible bots to move = [(10, 8), (9, 8), (11, 9), (8, 10), (8, 8), (9, 10), (9, 11), (9, 9), (8, 9), (9, 7), (10, 9), (7, 9)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((8, 10), (8, 10)), ((8, 8), (8, 8)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((9, 7), (9, 7)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 3.18 Ms for simplify_system to complete
-------------------------- running turn 28 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  15  
 6               -                         
 7           -   X   -                     
 8       -   X   X   X   -                 
 9   -   X   X   X   X   X   X   -   X     
10       -   X   X   -   -   -             
11           -   X   -                     
12               X                         
13               -                         

Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  12  13  14  15  
 6               -                         
 7           -   X   -                     
 8       -   X   X   X   -                 
 9   -   X   X   X   X   X   X             
10       -   X   X   -   -   -             
11           -   X   -                     
12               X                         
13               -                         

determine_ideal_outcome called with [(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 1
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
levels - {8: [(12, 10), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 145

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  12  13  14  15  
 6               1                         
 7           1   X   1                     
 8       1   X   X   X   1                 
 9   1   X   X   X   X   X   1             
10       1   X   X   X   1                 
11           1   X   1                     
12               1                         
13                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  12  13  14  15  
 6               -                         
 7           -   0   -                     
 8       -   0   0   0   -                 
 9   -   0   0   0   0   0   ?             
10       -   0   0   =   -                 
11           -   0   -                     
12               ?                         
13                                         

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  
 6               9                         
 7           9  10   9                     
 8       9  10  11  10   9                 
 9   9  10  11  12  11  10   9             
10       9  10  11  10   9                 
11           9  10   9                     
12               9                         
13                                         

The system now has a total of 300000000 optins
The initial system score was 151
The maximum obtainable for the system is 153
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(9, 12), (12, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (12, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (12, 9)]
current_bots_in_occupied = [(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = [(10, 10)]
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
1 bots need to move out of optional
And 1 bots need to move into occupied
len(current_bots_in_optional_that_can_move_to_occupied) = 2
Deficit = -1
It should be possible to make this happen
Like by doing one from 1 of the following solutions
Valid combo (checking) = ([(9, 12), (9, 11), (9, 10), (10, 10)],)
Works... ([(9, 12), (9, 11), (9, 10), (10, 10)],)
Found a way of moving the bots around...
([(9, 12), (9, 11), (9, 10), (10, 10)],)

System result = ...
The system has a total of 3840000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(8, 10) - {'options': [(8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(10, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  4.218000ms for simplify_system to complete
possible bots to move = [(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 8), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 8), (8, 8)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(10, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(10, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(10, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 4.22 Ms for simplify_system to complete
-------------------------- running turn 29 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  
 6               -                     
 7           -   X   -                 
 8       -   X   X   X   -             
 9   -   X   X   X   X   X   X   X     
10       -   X   X   X   -   -   -     
11           -   X   -                 
12               -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  
 6               -                     
 7           -   X   -                 
 8       -   X   X   X   -             
 9   -   X   X   X   X   X   X   X     
10       -   X   X   X   -   -   -     
11           -   X   -                 
12               -                     

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (13, 9), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (13, 9), (9, 11), (8, 9), (7, 9), (12, 9), (10, 9), (9, 7)]
levels - {7: [(13, 10)], 8: [(12, 10), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  14  
 6               2                     
 7           2   X   2                 
 8       2   X   X   X   2             
 9   2   X   X   X   X   X   2         
10       2   X   X   X   2             
11           2   X   2                 
12               2                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  
 6               -                     
 7           -   0   -                 
 8       -   0   0   0   -             
 9   -   0   0   0   0   0   ?   X     
10       -   0   0   0   -             
11           -   0   -                 
12               -                     

Cell Scores:
     6   7   8   9  10  11  12  13  14  
 6               9                     
 7           9  10   9                 
 8       9  10  11  10   9             
 9   9  10  11  12  11  10   9   8     
10       9  10  11  10   9             
11           9  10   9                 
12               9                     

The system now has a total of 281250000 optins
The initial system score was 153
The maximum obtainable for the system is 154
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(12, 9)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(11, 9), (12, 9)]
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(13, 9)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(12, 9)]
So lets move one of [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 281250000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.367000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 11), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (8, 9), (9, 7), (10, 9), (7, 9)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (8, 8), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (7, 9), (9, 7)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (7, 9)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 11), (10, 10), (9, 8), (8, 10), (8, 8), (8, 9), (7, 9), (9, 7)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (8, 8), (9, 8), (8, 10), (8, 9), (9, 7), (7, 9)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((9, 7), (9, 7)), ((7, 9), (7, 9))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 2.37 Ms for simplify_system to complete
-------------------------- running turn 30 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(7, 11), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               -                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 

The system now has a total of 3515625000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.189000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.19 Ms for simplify_system to complete
-------------------------- running turn 31 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 

determine_ideal_outcome called with [(8, 9), (10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(8, 9), (10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(7, 11), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               -                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 

The system now has a total of 3515625000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(8, 9), (10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (8, 11)]
current_bots_in_occupied = [(8, 9), (10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(8, 9), (10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 3515625000 options
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.217000ms for simplify_system to complete
possible bots to move = [(8, 9), (10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((8, 9), (8, 9)), ((10, 8), (10, 8)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.22 Ms for simplify_system to complete
-------------------------- running turn 32 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(7, 11), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               -                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 

The system now has a total of 3515625000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.397000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.40 Ms for simplify_system to complete
-------------------------- running turn 33 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   X   -             
 8       -   X   X   X   -         
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(7, 11), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  
 6               2                 
 7           2   X   2             
 8       2   X   X   X   2         
 9   2   X   X   X   X   X   2     
10       2   X   X   X   2         
11           2   X   2             
12               2                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  
 6               -                 
 7           -   0   -             
 8       -   0   0   0   -         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               -                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 

The system now has a total of 3515625000 optins
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.213000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.21 Ms for simplify_system to complete
-------------------------- running turn 34 ---------------------------


=> INITIAL
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -                     
 9   -   X   X   X   X   X   X   -   X   X   - 
10       -   X   X   X   -   -       -         
11       -   X   X   -                         
12               -                             

Awarded move for (14, 9)  to (13, 9)
Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   X   -                         
 8       -   X   X   X   -                     
 9   -   X   X   X   X   X   X                 
10       -   X   X   X   -   -                 
11       -   X   X   -                         
12               -                             

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(7, 11), (12, 10)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  13  14  15  16  
 6               2                             
 7           2   X   2                         
 8       2   X   X   X   2                     
 9   2   X   X   X   X   X   2                 
10       2   X   X   X   2                     
11           2   X   2                         
12               2                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  13  14  15  16  
 6               -                             
 7           -   0   -                         
 8       -   0   0   0   -                     
 9   -   0   0   0   0   0   ?                 
10       -   0   0   0   -                     
11           ?   0   -                         
12               -                             

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  16  
 6               9                             
 7           9  10   9                         
 8       9  10  11  10   9                     
 9   9  10  11  12  11  10   9                 
10       9  10  11  10   9                     
11           9  10   9                         
12               9                             

The system now has a total of 3515625000 optins
The initial system score was 167
The maximum obtainable for the system is 169
The score gain were looking for is 2
The system_score_gain_required = 0

bots_in_optional = [(12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.913000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.91 Ms for simplify_system to complete
-------------------------- running turn 35 ---------------------------


=> INITIAL
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  15  
 6               -                         
 7           -   X   -                     
 8       -   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   -   -   -   -     
11       -   X   X   -                     
12               -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  15  
 6               -                         
 7           -   X   -                     
 8       -   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   -   -   -   -     
11       -   X   X   -                     
12               -                         

determine_ideal_outcome called with [(10, 8), (10, 10), (14, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (13, 9), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 3
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (13, 9), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {7: [(13, 10)], 8: [(7, 11), (12, 10), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 163

-------------------------------------
TARGET system:
16 participants
()
     6   7   8   9  10  11  12  13  14  15  
 6               3                         
 7           3   X   3                     
 8       3   X   X   X   3                 
 9   3   X   X   X   X   X   3             
10       3   X   X   X   3                 
11           3   X   3                     
12               3                         

This is system split, groups are...
0
  [(14, 9), [(13, 9)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
16 participants
     6   7   8   9  10  11  12  13  14  15  
 6               -                         
 7           -   0   -                     
 8       -   0   0   0   -                 
 9   -   0   0   0   0   0   ?   X         
10       -   0   0   0   -                 
11           ?   0   -                     
12               -                         

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  
 6               9                         
 7           9  10   9                     
 8       9  10  11  10   9                 
 9   9  10  11  12  11  10   9   8         
10       9  10  11  10   9                 
11           9  10   9                     
12               9                         

The system now has a total of 843750000 optins
The initial system score was 169
The maximum obtainable for the system is 171
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(11, 9), (12, 9)]
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 13
current_bots_in_optional = [(8, 11), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(12, 9)]
So lets move one of [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 843750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.983000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (8, 11), (10, 9), (9, 7)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 11), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (9, 7), (8, 11), (10, 9), (7, 9)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (8, 8), (9, 8), (9, 9), (8, 10), (9, 10), (8, 11), (9, 11), (8, 9), (7, 9), (9, 7)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (8, 11), (7, 9)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 11), (10, 10), (9, 8), (8, 10), (8, 8), (8, 9), (7, 9), (8, 11), (9, 7)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (8, 8), (9, 8), (8, 10), (8, 9), (9, 7), (7, 9)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 8), (8, 9), (7, 9), (9, 7)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (9, 8), (8, 8), (9, 7), (7, 9)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (9, 8), (7, 9), (9, 7)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (9, 7), (7, 9)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 10), (7, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 10), (10, 10)), ((7, 9), (7, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(10, 8): {'options': [(11, 8)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(10, 8): {'options': [(11, 8)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.98 Ms for simplify_system to complete
-------------------------- running turn 36 ---------------------------


=> INITIAL
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  14  
 4                                     
 5               X                     
 6               -                     
 7           -   X   -   -             
 8       -   X   X   X   X             
 9   -   X   X   X   X   X   X   X     
10       -   X   X   X   -   -   -     
11       -   X   X   -                 
12               -                     

Awarded move for (9, 5)  to (9, 6)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  
 4                                     
 5                                     
 6                                     
 7           -   X   -   -             
 8       -   X   X   X   X             
 9   -   X   X   X   X   X   X   X     
10       -   X   X   X   -   -   -     
11       -   X   X   -                 
12               -                     

determine_ideal_outcome called with [(10, 8), (10, 10), (11, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (13, 9), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 4
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (11, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (13, 9), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {7: [(13, 10)], 8: [(7, 11), (12, 10), (11, 7), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 172

-------------------------------------
TARGET system:
17 participants
()
     6   7   8   9  10  11  12  13  14  
 4                                     
 5                                     
 6                                     
 7           4   X   4                 
 8       4   X   X   X   4             
 9   4   X   X   X   X   X   4         
10       4   X   X   X   4             
11           4   X   4                 
12               4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  
 4                                     
 5                                     
 6                                     
 7           -   0   -                 
 8       -   0   0   0   ?             
 9   -   0   0   0   0   0   ?   X     
10       -   0   0   0   -             
11           ?   0   -                 
12               -                     

Cell Scores:
     6   7   8   9  10  11  12  13  14  
 4                                     
 5                                     
 6                                     
 7           9  10   9                 
 8       9  10  11  10   9             
 9   9  10  11  12  11  10   9   8     
10       9  10  11  10   9             
11           9  10   9                 
12               9                     

The system now has a total of 1687500000 optins
The initial system score was 179
The maximum obtainable for the system is 181
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(11, 8), (12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = [(13, 9)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(11, 9), (12, 9)]
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 8), (8, 11), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 8), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7), (12, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(12, 9)]
So lets move one of [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 1687500000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(10, 8), (11, 8)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (8, 7)], 'scores': [1, 0, -1, -1]}


It took  3.057000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (8, 11), (10, 9), (9, 7)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 11), (10, 10), (11, 8), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (9, 7), (8, 11), (10, 9), (7, 9)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (11, 8), (8, 8), (9, 8), (9, 9), (8, 10), (9, 10), (9, 11), (8, 9), (7, 9), (8, 11), (9, 7)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (8, 11), (7, 9)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 11), (10, 10), (11, 8), (9, 8), (8, 10), (8, 8), (8, 9), (7, 9), (8, 11), (9, 7)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (11, 8), (8, 8), (9, 8), (8, 10), (8, 9), (9, 7), (7, 9)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (8, 8), (8, 9), (7, 9), (9, 7)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (8, 8), (9, 7), (7, 9)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 10), (11, 8), (9, 8), (7, 9), (9, 7)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 10), (9, 7), (7, 9)]
filtered = []
No bots that need to move could be found
Works... [((10, 10), (10, 10)), ((9, 7), (9, 7)), ((7, 9), (7, 9))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(10, 8): {'options': [(10, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 7)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 3.06 Ms for simplify_system to complete
-------------------------- running turn 37 ---------------------------


=> INITIAL
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 11), (8, 6), (11, 7), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 181

-------------------------------------
TARGET system:
18 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               5                 
 7           5   X   5             
 8       5   X   X   X   5         
 9   5   X   X   X   X   X   5     
10       5   X   X   X   5         
11           5   X   5             
12               5                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               -                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 

The system now has a total of 79101562500 optins
The initial system score was 181
The maximum obtainable for the system is 181
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 79101562500 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  2.756000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.76 Ms for simplify_system to complete
-------------------------- running turn 38 ---------------------------


=> INITIAL
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 5
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 11), (8, 6), (11, 7), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 181

-------------------------------------
TARGET system:
18 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               5                 
 7           5   X   5             
 8       5   X   X   X   5         
 9   5   X   X   X   X   X   5     
10       5   X   X   X   5         
11           5   X   5             
12               5                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
18 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               -                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 

The system now has a total of 79101562500 optins
The initial system score was 181
The maximum obtainable for the system is 181
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 79101562500 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  2.749000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.75 Ms for simplify_system to complete
-------------------------- running turn 39 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7       X   -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               -                 
13               X                 
14                                 

Awarded move for (9, 13)  to (9, 12)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
19 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7       X   -   X   X   -         
 8       -   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12                                 
13                                 
14                                 

determine_ideal_outcome called with [(10, 8), (8, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (7, 7), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 6
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (8, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (7, 7), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 7), (7, 11), (8, 6), (11, 7), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 190

-------------------------------------
TARGET system:
19 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               6                 
 7           6   X   6             
 8       6   X   X   X   6         
 9   6   X   X   X   X   X   6     
10       6   X   X   X   6         
11           6   X   6             
12                                 
13                                 
14                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
19 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7       X   -   0   ?             
 8       -   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12                                 
13                                 
14                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7       8   9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12                                 
13                                 
14                                 

The system now has a total of 126562500000 optins
The initial system score was 197
The maximum obtainable for the system is 199
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(7, 7)]
bots_outside_system_moving_to_optional  = [(7, 7)]
bots_in_occupied = [(10, 8), (8, 10), (10, 10), (9, 8), (11, 9), (9, 9), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11), (7, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (12, 9), (11, 8), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (8, 10), (10, 10), (9, 8), (11, 9), (9, 9), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (10, 10), (11, 9), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (8, 10), (10, 10), (9, 8), (11, 9), (9, 9), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 126562500000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7)], 'scores': [1, 1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11)], 'scores': [1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  4.124000ms for simplify_system to complete
possible bots to move = [(10, 8), (8, 10), (10, 10), (10, 7), (12, 9), (9, 8), (11, 9), (9, 9), (7, 7), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = [(7, 7)]
Will move (7, 7)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (9, 7), (10, 10), (10, 7), (9, 6), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (11, 8), (8, 8), (9, 11), (8, 9), (12, 9), (8, 11), (10, 9), (7, 9)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((9, 7), (9, 7)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((9, 6), (9, 6)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 4.12 Ms for simplify_system to complete
-------------------------- running turn 40 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       ?   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  3.100000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((7, 8), (7, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((12, 9), (12, 9)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.10 Ms for simplify_system to complete
-------------------------- running turn 41 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 

determine_ideal_outcome called with [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       ?   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  3.135000ms for simplify_system to complete
possible bots to move = [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((7, 8), (7, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((12, 9), (12, 9)), ((9, 11), (9, 11)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.13 Ms for simplify_system to complete
-------------------------- running turn 42 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 

determine_ideal_outcome called with [(9, 10), (10, 8), (10, 10), (10, 7), (9, 6), (8, 11), (11, 9), (8, 10), (9, 9), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (9, 7), (7, 8), (9, 8), (10, 9), (7, 9)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 10), (10, 8), (10, 10), (10, 7), (9, 6), (8, 11), (11, 9), (8, 10), (9, 9), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (9, 7), (7, 8), (9, 8), (10, 9), (7, 9)]
levels - {8: [(10, 6), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       ?   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (9, 6), (8, 11), (11, 8), (9, 12), (12, 9), (7, 8)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (10, 8), (10, 10), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (9, 8), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (9, 6), (8, 11), (11, 8), (9, 12), (12, 9), (7, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (9, 6), (8, 11), (11, 8), (9, 12), (12, 9), (7, 8)]
current_bots_in_occupied = [(9, 10), (10, 8), (10, 10), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (9, 8), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (10, 8), (10, 10), (11, 9), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (9, 8), (10, 9), (7, 9)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}


It took  3.122000ms for simplify_system to complete
possible bots to move = [(9, 10), (10, 8), (10, 10), (10, 7), (9, 6), (8, 11), (11, 9), (8, 10), (9, 9), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (9, 7), (7, 8), (9, 8), (10, 9), (7, 9)]
filtered = []
No bots that need to move could be found
Works... [((9, 10), (9, 10)), ((10, 8), (10, 8)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((12, 9), (12, 9)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((7, 8), (7, 8)), ((9, 8), (9, 8)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 3.12 Ms for simplify_system to complete
-------------------------- running turn 43 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 

determine_ideal_outcome called with [(10, 8), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       ?   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  3.144000ms for simplify_system to complete
possible bots to move = [(10, 8), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (8, 9), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((7, 8), (7, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((12, 9), (12, 9)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.14 Ms for simplify_system to complete
-------------------------- running turn 44 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12               X                 
13               -                 

determine_ideal_outcome called with [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       ?   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               ?                 
13                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 

The system now has a total of 474609375000 optins
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  3.307000ms for simplify_system to complete
possible bots to move = [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((7, 8), (7, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((12, 9), (12, 9)), ((9, 11), (9, 11)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.31 Ms for simplify_system to complete
-------------------------- running turn 45 ---------------------------


=> INITIAL
BOT Positions:
21 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12           -   X   -             
13               -   X             
14                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
21 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6           -   X   -             
 7           -   X   X   -         
 8   -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   - 
10       -   X   X   X   -         
11       -   X   X   -             
12           -   X   -             
13               -   X             
14                                 

determine_ideal_outcome called with [(10, 8), (9, 10), (10, 13), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
levels - {8: [(10, 6), (10, 12), (7, 11), (8, 6), (9, 13), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6               7                 
 7           7   X   7             
 8       7   X   X   X   7         
 9   7   X   X   X   X   X   7     
10       7   X   X   X   7         
11           7   X   7             
12               7                 
13                                 
14                                 

This is system split, groups are...
0
  [(10, 13), [(9, 13)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               ?                 
 7           -   0   ?             
 8       ?   0   0   0   ?         
 9   -   0   0   0   0   0   ?     
10       -   0   0   0   -         
11           ?   0   -             
12               ?                 
13                                 
14                                 

Cell Scores:
     6   7   8   9  10  11  12  13  
 5                                 
 6               9                 
 7           9  10   9             
 8       9  10  11  10   9         
 9   9  10  11  12  11  10   9     
10       9  10  11  10   9         
11           9  10   9             
12               9                 
13                                 
14                                 

The system now has a total of 474609375000 optins
The initial system score was 206
The maximum obtainable for the system is 207
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 7), (7, 8), (11, 8), (9, 12), (12, 9), (9, 6), (8, 11)]
current_bots_in_occupied = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]

Optional squares exist
No bots need to leave optional
13
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 474609375000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  3.693000ms for simplify_system to complete
possible bots to move = [(10, 8), (9, 10), (10, 10), (10, 7), (7, 8), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (11, 8), (8, 8), (9, 12), (12, 9), (9, 11), (7, 9), (9, 6), (8, 11), (10, 9), (9, 7)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((10, 7), (10, 7)), ((7, 8), (7, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((12, 9), (12, 9)), ((9, 11), (9, 11)), ((7, 9), (7, 9)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.69 Ms for simplify_system to complete
-------------------------- running turn 46 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               -   X                     
 6           -   X   -                     
 7           -   X   X   -                 
 8   -   X   X   X   X   X   -       -     
 9   -   X   X   X   X   X   X   -   X     
10       -   X   X   X   -   -   -   X     
11       -   X   X   -                     
12               X   -                     
13               X   -                     
14               X   -                     
15                                         

Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
24 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               -   X                     
 6           -   X   -                     
 7           -   X   X   -                 
 8   -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X       -     
10       -   X   X   X   -   -   -   X     
11       -   X   X   -                     
12               X   -                     
13               X   -                     
14               X   -                     
15                                         

determine_ideal_outcome called with [(9, 8), (8, 9), (12, 9), (10, 8), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (14, 10), (9, 14), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (9, 13), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 8
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 8), (8, 9), (12, 9), (10, 8), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {7: [(10, 13), (9, 14)], 8: [(10, 6), (10, 12), (7, 11), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 208

-------------------------------------
TARGET system:
21 participants
()
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6               8                         
 7           8   X   8                     
 8       8   X   X   X   8                 
 9   8   X   X   X   X   X   8             
10       8   X   X   X   8                 
11           8   X   8                     
12               8                         
13                                         
14                                         
15                                         

This is system split, groups are...
0
  [(10, 5), [(9, 5)], [1]]


1
  [(14, 10), [(14, 9)], [1]]


2
  [(9, 14), [(9, 13)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
21 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6               ?                         
 7           -   0   ?                     
 8       ?   0   0   0   ?                 
 9   -   0   0   0   0   0   ?             
10       -   0   0   0   -                 
11           ?   0   -                     
12               ?                         
13               X                         
14                                         
15                                         

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6               9                         
 7           9  10   9                     
 8       9  10  11  10   9                 
 9   9  10  11  12  11  10   9             
10       9  10  11  10   9                 
11           9  10   9                     
12               9                         
13               8                         
14                                         
15                                         

The system now has a total of 75937500000 optins
The initial system score was 234
The maximum obtainable for the system is 239
The score gain were looking for is 5
The system_score_gain_required = 1

bots_in_optional = [(12, 9), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
bots_in_optional_moving_to_occupied = [(9, 12)]
bots_outside_system = [(9, 13)]
bots_outside_system_moving_to_optional  = [(9, 13)]
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 11), (9, 12)]
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 13
current_bots_in_optional = [(12, 9), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8), (9, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(12, 9), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (9, 12)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 12)]
So lets move one of [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 75937500000 options
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(14, 10) - {'options': [(14, 9)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}


It took  5.484000ms for simplify_system to complete
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (8, 9), (12, 9), (10, 8), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (12, 9), (10, 8), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (12, 9), (10, 8), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(12, 9), (10, 8), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(12, 9), (10, 7), (8, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 7), (8, 10), (9, 7), (8, 11), (9, 6), (7, 9), (10, 10), (7, 8)]
filtered = []
No bots that need to move could be found
Works... [((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (14, 10): {'options': [(14, 9)], 'scores': [1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 5
this possibility has a score of 5
checking
{(9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (14, 10): {'options': [(14, 9)], 'scores': [1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(14, 10) - {'options': [(14, 9)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 5.48 Ms for simplify_system to complete
-------------------------- running turn 47 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               X   -                     
 6           -   X   -                     
 7           -   X   X   -                 
 8   -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   -   -   -     
11       -   X   X   -   -                 
12               X   -                     
13               X                         
14               -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               X   -                     
 6           -   X   -                     
 7           -   X   X   -                 
 8   -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   -   -   -     
11       -   X   X   -   -                 
12               X   -                     
13               X                         
14               -                         

determine_ideal_outcome called with [(9, 8), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 11
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (9, 14), (10, 5)], 8: [(11, 11), (10, 6), (10, 12), (7, 11), (9, 5), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 235

-------------------------------------
TARGET system:
24 participants
()
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5                                         
 6              11                         
 7          11   X  11                     
 8      11   X   X   X  11                 
 9  11   X   X   X   X   X  11             
10      11   X   X   X  11                 
11          11   X  11                     
12              11                         
13                                         
14                                         

This is system split, groups are...
0
  [(14, 9), [(13, 9)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
24 participants
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               X                         
 6               ?                         
 7           -   0   ?                     
 8       ?   0   0   0   ?                 
 9   -   0   0   0   0   0   ?   X         
10       -   0   0   0   ?                 
11           ?   0   -                     
12               ?                         
13               X                         
14                                         

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  
 4                                         
 5               8                         
 6               9                         
 7           9  10   9                     
 8       9  10  11  10   9                 
 9   9  10  11  12  11  10   9   8         
10       9  10  11  10   9                 
11           9  10   9                     
12               9                         
13               8                         
14                                         

The system now has a total of 3888000000 optins
The initial system score was 239
The maximum obtainable for the system is 243
The score gain were looking for is 4
The system_score_gain_required = 3

bots_in_optional = [(12, 9), (11, 10), (10, 7), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
bots_in_optional_moving_to_occupied = [(12, 9), (9, 6), (9, 12)]
bots_outside_system = [(13, 9), (9, 13), (9, 5)]
bots_outside_system_moving_to_optional  = [(13, 9), (9, 13), (9, 5)]
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 11), (9, 7), (11, 9), (12, 9), (9, 6), (9, 12)]
num_target_bots_in_optional = 11
num_target_bots_in_occupied = 13
current_bots_in_optional = [(11, 10), (10, 7), (8, 11), (11, 8), (7, 8), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 10), (10, 7), (8, 11), (11, 8), (7, 8)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (12, 9), (9, 6), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (11, 9), (9, 7), (9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (12, 9), (9, 6), (9, 12)]

Optional squares exist
3 bots need to move into optional
And 3 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(12, 9), (9, 6), (9, 12)]
So lets move one of [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 3888000000 options
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8)], 'scores': [1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(10, 10), (11, 10)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (10, 7)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (10, 7), (8, 7)], 'scores': [1, -1, -1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(10, 8), (11, 8)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}


It took  5.369000ms for simplify_system to complete
possible bots to move = [(9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 11), (9, 7), (11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (9, 10), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 11), (10, 9), (9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (8, 11), (9, 10), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 8), (9, 11), (10, 9)]
Will move (9, 8)
System failed because a bot has no moves
1 systems were filtered as they were not valid
possible bots to move = [(8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (10, 9), (8, 11), (9, 10), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8)]
filtered = [(9, 11), (10, 9), (9, 9)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (10, 9), (8, 11), (9, 10), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9), (10, 9), (9, 10)]
Will move (10, 9)
System failed because a bot has no moves
1 systems were filtered as they were not valid
possible bots to move = [(8, 9), (10, 8), (10, 7), (7, 9), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 7), (7, 9), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 8), (10, 7), (11, 8)]
filtered = []
No bots that need to move could be found
Works... [((10, 8), (10, 8)), ((10, 7), (10, 7)), ((11, 8), (11, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(9, 8): {'options': [(9, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 10)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(8, 10)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 11)], 'scores': [-1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 4
this possibility has a score of 4
checking
{(9, 8): {'options': [(9, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 10)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(8, 10)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 11)], 'scores': [-1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(10, 10)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 11)], 'scores': [-1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 5.37 Ms for simplify_system to complete
-------------------------- running turn 48 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6               -   X   -                 
 7           -   -   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6               -   X   -                 
 7           -   -   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6                   X                     
 7               X   X   X                 
 8           X   X   X   X   X             
 9       X   X   X   X   X   X   X         
10           X   X   X   X   X             
11               X   X   X                 
12                   X                     
13                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6                   0                     
 7               =   0   0                 
 8           0   0   0   0   0             
 9       0   0   0   0   0   0   0   X     
10           0   0   0   0   0             
11               0   0   0                 
12                   0                     
13                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6                   9                     
 7               9  10   9                 
 8           9  10  11  10   9             
 9       9  10  11  12  11  10   9   8     
10           9  10  11  10   9             
11               9  10   9                 
12                   9                     
13                                         

The system now has a total of 4556250000000 optins
The initial system score was 243
The maximum obtainable for the system is 244
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(13, 9)]
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(12, 9), (11, 9), (13, 9)]
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = [(8, 7)]
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 4556250000000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(10, 10), (11, 10)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(10, 8), (11, 8)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.759000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(9, 11)]
Will move (9, 11)
System failed because two bots take the same coordinate
1 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because a bot has no moves
1 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (11, 10), (7, 10), (7, 9), (10, 10), (7, 8)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 10), (11, 10)), ((7, 10), (7, 10)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 7)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(8, 7)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 7)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(8, 7)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 7)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(8, 7)], 'scores': [-1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.76 Ms for simplify_system to complete
-------------------------- running turn 49 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.497000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.50 Ms for simplify_system to complete
-------------------------- running turn 50 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.438000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.44 Ms for simplify_system to complete
-------------------------- running turn 51 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.444000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.44 Ms for simplify_system to complete
-------------------------- running turn 52 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.445000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.45 Ms for simplify_system to complete
-------------------------- running turn 53 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 optins
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.649000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.65 Ms for simplify_system to complete
-------------------------- running turn 54 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 5                           -                         
 6                       -   X   -                     
 7                   -   X   X   X   -                 
 8               -   X   X   X   X   X   -             
 9       X   -   X   X   X   X   X   X   X   -   X     
10               -   X   X   X   X   X   -       -     
11                   -   X   X   X   -       -   X     
12                       -   X   -                     
13                           -                         

Awarded move for (14, 9)  to (13, 9)
Awarded move for (4, 9)  to (5, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
26 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 5                           -                         
 6                       -   X   -                     
 7                   -   X   X   X   -                 
 8               -   X   X   X   X   X   -             
 9               X   X   X   X   X   X   X             
10               -   X   X   X   X   X   -       -     
11                   -   X   X   X   -       -   X     
12                       -   X   -                     
13                           -                         

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (14, 11), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                     
 6                           X                         
 7                       X   X   X                     
 8                   X   X   X   X   X                 
 9               X   X   X   X   X   X   X             
10                   X   X   X   X   X                 
11                       X   X   X                     
12                           X                         
13                                                     

This is system split, groups are...
0
  [(14, 11), [(14, 10)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                     
 6                           0                         
 7                       0   0   0                     
 8                   0   0   0   0   0                 
 9               0   0   0   0   0   0   0             
10                   0   0   0   0   0                 
11                       0   0   0                     
12                           0                         
13                                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                     
 6                           9                         
 7                       9  10   9                     
 8                   9  10  11  10   9                 
 9               9  10  11  12  11  10   9             
10                   9  10  11  10   9                 
11                       9  10   9                     
12                           9                         
13                                                     

The system now has a total of 128144531250000 optins
The initial system score was 263
The maximum obtainable for the system is 266
The score gain were looking for is 3
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(14, 11) - {'options': [(14, 10)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  6.774000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (14, 11): {'options': [(14, 10)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (14, 11): {'options': [(14, 10)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(14, 11) - {'options': [(14, 10)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.77 Ms for simplify_system to complete
-------------------------- running turn 55 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                 
 4                       X                         
 5                       -                         
 6                   -   X   -                     
 7               -   X   X   X   -                 
 8           -   X   X   X   X   X   -   -         
 9       X   X   X   X   X   X   X   X   X   -     
10       -   -   X   X   X   X   X   -   -   X     
11               -   X   X   X   -                 
12                   -   X   -                     
13                       -                         

Awarded move for (9, 4)  to (9, 5)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                 
 4                                                 
 5                                                 
 6                   -   X   -                     
 7               -   X   X   X   -                 
 8           -   X   X   X   X   X   -   -         
 9       X   X   X   X   X   X   X   X   X   -     
10       -   -   X   X   X   X   X   -   -   X     
11               -   X   X   X   -                 
12                   -   X   -                     
13                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (14, 10), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 2
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 8), (14, 9), (13, 10), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 260

-------------------------------------
TARGET system:
27 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                 
 4                                                 
 5                                                 
 6                   2   X   2                     
 7               2   X   X   X   2                 
 8           2   X   X   X   X   X   2             
 9       2   X   X   X   X   X   X   X   2         
10           2   X   X   X   X   X   2             
11               2   X   X   X   2                 
12                   2   X   2                     
13                       2                         

This is system split, groups are...
0
  [(14, 10), [(14, 9)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
27 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                 
 4                                                 
 5                                                 
 6                   -   0   -                     
 7               -   0   0   0   -                 
 8           -   0   0   0   0   0   -             
 9       ?   0   0   0   0   0   0   0   ?         
10           -   0   0   0   0   0   -             
11               -   0   0   0   -                 
12                   -   0   -                     
13                       -                         

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                 
 4                                                 
 5                                                 
 6                   8   9   8                     
 7               8   9  10   9   8                 
 8           8   9  10  11  10   9   8             
 9       8   9  10  11  12  11  10   9   8         
10           8   9  10  11  10   9   8             
11               8   9  10   9   8                 
12                   8   9   8                     
13                       8                         

The system now has a total of 572204589843750000 optins
The initial system score was 273
The maximum obtainable for the system is 275
The score gain were looking for is 2
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 572204589843750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(14, 10) - {'options': [(14, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.151000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (14, 10): {'options': [(14, 9)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (14, 10): {'options': [(14, 9)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(14, 10) - {'options': [(14, 9)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.15 Ms for simplify_system to complete
-------------------------- running turn 56 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       X   -                     
 6                   -   X   -                     
 7               -   X   X   X   -                 
 8           -   X   X   X   X   X   -             
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -   -     
11               -   X   X   X   -                 
12                   -   X   -                     
13                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       X   -                     
 6                   -   X   -                     
 7               -   X   X   X   -                 
 8           -   X   X   X   X   X   -             
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -   -     
11               -   X   X   X   -                 
12                   -   X   -                     
13                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(14, 10)], 7: [(14, 9), (13, 10), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       4                         
 6                   4   X   4                     
 7               4   X   X   X   4                 
 8           4   X   X   X   X   X   4             
 9       4   X   X   X   X   X   X   X   4         
10           4   X   X   X   X   X   4             
11               4   X   X   X   4                 
12                   4   X   4                     
13                       4                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       ?                         
 6                   -   0   -                     
 7               -   0   0   0   -                 
 8           -   0   0   0   0   0   -             
 9       ?   0   0   0   0   0   0   0   ?   X     
10           -   0   0   0   0   0   -             
11               -   0   0   0   -                 
12                   -   0   -                     
13                       -                         

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       8                         
 6                   8   9   8                     
 7               8   9  10   9   8                 
 8           8   9  10  11  10   9   8             
 9       8   9  10  11  12  11  10   9   8   7     
10           8   9  10  11  10   9   8             
11               8   9  10   9   8                 
12                   8   9   8                     
13                       8                         

The system now has a total of 343322753906250000 optins
The initial system score was 275
The maximum obtainable for the system is 276
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (13, 9), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(12, 9), (13, 9)]
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(13, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 343322753906250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.899000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
Will move (12, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((7, 10), (7, 10)), ((9, 7), (9, 7)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.90 Ms for simplify_system to complete
-------------------------- running turn 57 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       4                     
 6                   4   X   4                 
 7               4   X   X   X   4             
 8           4   X   X   X   X   X   4         
 9       4   X   X   X   X   X   X   X   4     
10           4   X   X   X   X   X   4         
11               4   X   X   X   4             
12                   4   X   4                 
13                       4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   -   0   -                 
 7               -   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 4291534423828125000 optins
The initial system score was 276
The maximum obtainable for the system is 276
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.513000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.51 Ms for simplify_system to complete
-------------------------- running turn 58 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       4                     
 6                   4   X   4                 
 7               4   X   X   X   4             
 8           4   X   X   X   X   X   4         
 9       4   X   X   X   X   X   X   X   4     
10           4   X   X   X   X   X   4         
11               4   X   X   X   4             
12                   4   X   4                 
13                       4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   -   0   -                 
 7               -   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 4291534423828125000 optins
The initial system score was 276
The maximum obtainable for the system is 276
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.742000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.74 Ms for simplify_system to complete
-------------------------- running turn 59 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       4                     
 6                   4   X   4                 
 7               4   X   X   X   4             
 8           4   X   X   X   X   X   4         
 9       4   X   X   X   X   X   X   X   4     
10           4   X   X   X   X   X   4         
11               4   X   X   X   4             
12                   4   X   4                 
13                       4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   -   0   -                 
 7               -   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 4291534423828125000 optins
The initial system score was 276
The maximum obtainable for the system is 276
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.540000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.54 Ms for simplify_system to complete
-------------------------- running turn 60 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       4                     
 6                   4   X   4                 
 7               4   X   X   X   4             
 8           4   X   X   X   X   X   4         
 9       4   X   X   X   X   X   X   X   4     
10           4   X   X   X   X   X   4         
11               4   X   X   X   4             
12                   4   X   4                 
13                       4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   -   0   -                 
 7               -   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 4291534423828125000 optins
The initial system score was 276
The maximum obtainable for the system is 276
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.750000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.75 Ms for simplify_system to complete
-------------------------- running turn 61 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       4                     
 6                   4   X   4                 
 7               4   X   X   X   4             
 8           4   X   X   X   X   X   4         
 9       4   X   X   X   X   X   X   X   4     
10           4   X   X   X   X   X   4         
11               4   X   X   X   4             
12                   4   X   4                 
13                       4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   -   0   -                 
 7               -   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 4291534423828125000 optins
The initial system score was 276
The maximum obtainable for the system is 276
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.585000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.58 Ms for simplify_system to complete
-------------------------- running turn 62 ---------------------------


=> INITIAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       X   -                 
 6                   -   X   -                 
 7               -   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       4                     
 6                   4   X   4                 
 7               4   X   X   X   4             
 8           4   X   X   X   X   X   4         
 9       4   X   X   X   X   X   X   X   4     
10           4   X   X   X   X   X   4         
11               4   X   X   X   4             
12                   4   X   4                 
13                       4                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   -   0   -                 
 7               -   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 4291534423828125000 optins
The initial system score was 276
The maximum obtainable for the system is 276
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  4.532000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.53 Ms for simplify_system to complete
-------------------------- running turn 63 ---------------------------


=> INITIAL
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       X   -                         
 6                   -   X   -               -   X     
 7               -   X   X   X   X   -       -   X     
 8           -   X   X   X   X   X   -           -     
 9       X   X   X   X   X   X   X   X   X   -   X     
10       -   -   X   X   X   X   X   -   -             
11               -   X   X   X   -                     
12                   -   X   -                         
13                       -                             

Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
31 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       X   -                         
 6                   -   X   -               -   X     
 7               -   X   X   X   X   -       -   X     
 8           -   X   X   X   X   X   -           -     
 9       X   X   X   X   X   X   X   X   X             
10       -   -   X   X   X   X   X   -   -             
11               -   X   X   X   -                     
12                   -   X   -                         
13                       -                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (15, 7), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (15, 6), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 4
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 276

-------------------------------------
TARGET system:
29 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       4                             
 6                   4   X   4                         
 7               4   X   X   X   4                     
 8           4   X   X   X   X   X   4                 
 9       4   X   X   X   X   X   X   X   4             
10           4   X   X   X   X   X   4                 
11               4   X   X   X   4                     
12                   4   X   4                         
13                       4                             

This is system split, groups are...
0
  [(15, 6), [(15, 7)], [1]]


1
  [(15, 7), [(15, 8)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
29 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   -   0   -                         
 7               -   0   0   0   ?                     
 8           -   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?             
10           -   0   0   0   0   0   -                 
11               -   0   0   0   -                     
12                   -   0   -                         
13                       -                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8             
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             

The system now has a total of 4291534423828125000 optins
The initial system score was 289
The maximum obtainable for the system is 292
The score gain were looking for is 3
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 4
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 4291534423828125000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(15, 7) - {'options': [(15, 8)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(15, 6) - {'options': [(15, 7)], 'scores': [1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  5.853000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (15, 7): {'options': [(15, 8)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (15, 6): {'options': [(15, 7)], 'scores': [1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (15, 7): {'options': [(15, 8)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (15, 6): {'options': [(15, 7)], 'scores': [1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(15, 7) - {'options': [(15, 8)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(15, 6) - {'options': [(15, 7)], 'scores': [1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.85 Ms for simplify_system to complete
-------------------------- running turn 64 ---------------------------


=> INITIAL
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       X   -                         
 6                   -   X   -                         
 7               -   X   X   X   X   -       -   X     
 8           -   X   X   X   X   X   -       -   X   - 
 9       X   X   X   X   X   X   X   X   X   X   -     
10       -   -   X   X   X   X   X   -   -   -         
11               -   X   X   X   -                     
12                   -   X   -                         
13                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       X   -                         
 6                   -   X   -                         
 7               -   X   X   X   X   -       -   X     
 8           -   X   X   X   X   X   -       -   X   - 
 9       X   X   X   X   X   X   X   X   X   X   -     
10       -   -   X   X   X   X   X   -   -   -         
11               -   X   X   X   -                     
12                   -   X   -                         
13                       -                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (15, 8), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (15, 7), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 5
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(14, 10)], 7: [(14, 9), (13, 10), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 284

-------------------------------------
TARGET system:
30 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       5                             
 6                   5   X   5                         
 7               5   X   X   X   5                     
 8           5   X   X   X   X   X   5                 
 9       5   X   X   X   X   X   X   X   5             
10           5   X   X   X   X   X   5                 
11               5   X   X   X   5                     
12                   5   X   5                         
13                       5                             

This is system split, groups are...
0
  [(15, 8), [(15, 9)], [1]]
  [(15, 7), [(15, 8)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
30 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   -   0   -                         
 7               -   0   0   0   ?                     
 8           -   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           -   0   0   0   0   0   -                 
11               -   0   0   0   -                     
12                   -   0   -                         
13                       -                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             

The system now has a total of 1029968261718750000 optins
The initial system score was 292
The maximum obtainable for the system is 295
The score gain were looking for is 3
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(12, 9), (13, 9)]
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (11, 7), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(13, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 1029968261718750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(15, 7) - {'options': [(15, 8)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  5.893000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
Will move (12, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (9, 7), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 11), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 8), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
Will move (10, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (7, 10), (9, 7), (8, 7), (9, 6), (7, 9), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (7, 10), (8, 7), (9, 6), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 6)]
Will move (9, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (7, 10), (8, 7), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 10), (11, 10)), ((7, 10), (7, 10)), ((8, 7), (8, 7)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (15, 7): {'options': [(15, 8)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (15, 7): {'options': [(15, 8)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(15, 7) - {'options': [(15, 8)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.89 Ms for simplify_system to complete
-------------------------- running turn 65 ---------------------------


=> INITIAL
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       X   -                         
 6               -   X   X   -                         
 7               -   X   X   X   X   -                 
 8           -   X   X   X   X   X   -       -   X     
 9       X   X   X   X   X   X   X   X   X   -   X   - 
10       -   -   X   X   X   X   X   -   -             
11               -   X   X   X   -                     
12                   -   X   -                         
13                       -                             

Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
31 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       X   -                         
 6               -   X   X   -                         
 7               -   X   X   X   X   -                 
 8           -   X   X   X   X   X   -       -   X     
 9       X   X   X   X   X   X   X   X   X       -     
10       -   -   X   X   X   X   X   -   -             
11               -   X   X   X   -                     
12                   -   X   -                         
13                       -                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (15, 8), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 5
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 284

-------------------------------------
TARGET system:
30 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       5                             
 6                   5   X   5                         
 7               5   X   X   X   5                     
 8           5   X   X   X   X   X   5                 
 9       5   X   X   X   X   X   X   X   5             
10           5   X   X   X   X   X   5                 
11               5   X   X   X   5                     
12                   5   X   5                         
13                       5                             

This is system split, groups are...
0
  [(15, 8), [(15, 9)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
30 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   -                         
 7               -   0   0   0   ?                     
 8           -   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?             
10           -   0   0   0   0   0   -                 
11               -   0   0   0   -                     
12                   -   0   -                         
13                       -                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8             
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             

The system now has a total of 12874603271484375000 optins
The initial system score was 295
The maximum obtainable for the system is 297
The score gain were looking for is 2
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (8, 6), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (8, 6), (13, 9), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (8, 6), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 12874603271484375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  5.789000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (15, 8): {'options': [(15, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(15, 8) - {'options': [(15, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.79 Ms for simplify_system to complete
-------------------------- running turn 66 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -   X                     
 6               -   X   X   -   -                     
 7               -   X   X   X   X   -                 
 8           -   X   X   X   X   X   -   -   -         
 9       X   X   X   X   X   X   X   X   X   X   X   - 
10       -   -   X   X   X   X   X   -   -   X         
11               -   X   X   X   -           -         
12                   -   X   -                         
13                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -   X                     
 6               -   X   X   -   -                     
 7               -   X   X   X   X   -                 
 8           -   X   X   X   X   X   -   -   -         
 9       X   X   X   X   X   X   X   X   X   X   X   - 
10       -   -   X   X   X   X   X   -   -   X         
11               -   X   X   X   -           -         
12                   -   X   -                         
13                       -                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (11, 5), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (14, 10), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (15, 9), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 6
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(14, 10), (14, 8)], 7: [(8, 5), (13, 8), (14, 9), (13, 10), (7, 6), (9, 4), (12, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 292

-------------------------------------
TARGET system:
31 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       6                             
 6                   6   X   6                         
 7               6   X   X   X   6                     
 8           6   X   X   X   X   X   6                 
 9       6   X   X   X   X   X   X   X   6             
10           6   X   X   X   X   X   6                 
11               6   X   X   X   6                     
12                   6   X   6                         
13                       6                             

This is system split, groups are...
0
  [(11, 5), [(10, 5)], [1]]


1
  [(14, 10), [(14, 9), (13, 10)], [1, 1]]
  [(15, 9), [(14, 9), (15, 9)], [1, 0]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
31 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       ?                             
 6                   ?   0   -                         
 7               -   0   0   0   ?                     
 8           -   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?   X         
10           -   0   0   0   0   0   -                 
11               -   0   0   0   -                     
12                   -   0   -                         
13                       -                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8   7         
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             

The system now has a total of 3089904785156250000 optins
The initial system score was 309
The maximum obtainable for the system is 313
The score gain were looking for is 4
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (8, 6), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9)]
bots_outside_system_moving_to_optional  = [(14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(12, 9), (13, 9)]
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (8, 6), (11, 7), (9, 5), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (8, 6), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(13, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 3089904785156250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(14, 10) - {'options': [(13, 10)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.704000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9)]
Will move (12, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (10, 8), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 6), (9, 7), (8, 7), (9, 5), (9, 6), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = [(10, 7)]
Will move (10, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (7, 10), (8, 6), (9, 7), (8, 7), (9, 6), (7, 9), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (7, 10), (8, 6), (8, 7), (9, 6), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 6)]
Will move (9, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 10), (7, 10), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 10), (11, 10)), ((7, 10), (7, 10)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (14, 10): {'options': [(13, 10)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 4
this possibility has a score of 4
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (14, 10): {'options': [(13, 10)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(14, 10) - {'options': [(13, 10)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.70 Ms for simplify_system to complete
-------------------------- running turn 67 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -   -                     
 5                   -   X   X                     
 6               -   X   X   -                     
 7           -   X   X   X   X   X   -             
 8           -   X   X   X   X   X   -   -   -     
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   X   -     
11               -   X   X   X   -       -         
12                   -   X   -                     
13                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -   -                     
 5                   -   X   X                     
 6               -   X   X   -                     
 7           -   X   X   X   X   X   -             
 8           -   X   X   X   X   X   -   -   -     
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   X   -     
11               -   X   X   X   -       -         
12                   -   X   -                     
13                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (13, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (13, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(14, 10), (10, 4), (13, 11), (14, 8)], 7: [(8, 5), (13, 8), (14, 9), (6, 7), (7, 6), (9, 4), (12, 7), (13, 10), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       9                         
 6                   9   X   9                     
 7               9   X   X   X   9                 
 8           9   X   X   X   X   X   9             
 9       9   X   X   X   X   X   X   X   9         
10           9   X   X   X   X   X   9             
11               9   X   X   X   9                 
12                   9   X   9                     
13                       9                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       ?   X                     
 6                   ?   0   -                     
 7               ?   0   0   0   ?                 
 8           -   0   0   0   0   0   -             
 9       ?   0   0   0   0   0   0   0   ?   X     
10           -   0   0   0   0   0   -   X         
11               -   0   0   0   -                 
12                   -   0   -                     
13                       -                         

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                 
 5                       8   7                     
 6                   8   9   8                     
 7               8   9  10   9   8                 
 8           8   9  10  11  10   9   8             
 9       8   9  10  11  12  11  10   9   8   7     
10           8   9  10  11  10   9   8   7         
11               8   9  10   9   8                 
12                   8   9   8                     
13                       8                         

The system now has a total of 9887695312500000000 optins
The initial system score was 313
The maximum obtainable for the system is 316
The score gain were looking for is 3
The system_score_gain_required = 3

bots_in_optional = [(5, 9), (7, 7), (8, 6), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9)]
bots_outside_system = [(14, 9), (13, 10), (10, 5)]
bots_outside_system_moving_to_optional  = [(14, 9), (13, 10), (10, 5)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(12, 9), (13, 9)]
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (8, 6), (11, 7), (9, 5), (14, 9), (13, 10), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (8, 6), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(13, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 9887695312500000000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 8)], 'scores': [1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (11, 11)], 'scores': [1, 1, 0, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 10) - {'options': [(12, 10)], 'scores': [1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 5) - {'options': [(9, 5), (10, 6)], 'scores': [1, 1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.806000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(12, 9), (10, 5)]
Will move (12, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (9, 6), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 5), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(11, 9), (10, 5)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9), (10, 5)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (9, 6), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (9, 5), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 5), (9, 9)]
Will move (10, 5)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 6), (9, 9)]
Will move (9, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 7), (9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 7), (9, 10)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (9, 10), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 8), (9, 10)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (9, 10), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 8), (9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 8), (9, 11)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 11), (11, 8)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (11, 10), (10, 7), (8, 10), (7, 10), (8, 6), (8, 11), (8, 7), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11), (11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (11, 10), (8, 10), (7, 10), (8, 6), (8, 11), (8, 7), (7, 9), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (11, 10), (8, 10), (7, 10), (8, 6), (8, 7), (7, 9), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (11, 10), (7, 10), (8, 6), (8, 7), (7, 9), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (11, 10), (7, 10), (8, 6), (8, 7), (7, 9), (10, 10), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (11, 10), (7, 10), (8, 6), (8, 7), (7, 9), (10, 10), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because two bots take the same coordinate
1 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (11, 10), (7, 10), (8, 6), (8, 7), (7, 9), (10, 10), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (7, 7), (11, 10), (7, 10), (8, 6), (8, 7), (10, 10), (9, 12)]
filtered = [(6, 9)]
Will move (6, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (11, 10), (7, 10), (8, 6), (8, 7), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((10, 11), (10, 11)), ((7, 7), (7, 7)), ((11, 10), (11, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((8, 7), (8, 7)), ((10, 10), (10, 10)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 6)], 'scores': [-1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (13, 10): {'options': [(12, 10)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 6)], 'scores': [-1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (13, 10): {'options': [(12, 10)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 6)], 'scores': [-1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(13, 10) - {'options': [(12, 10)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.81 Ms for simplify_system to complete
-------------------------- running turn 68 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(9, 4), (14, 9), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       9                     
 6                   9   X   9                 
 7               9   X   X   X   9             
 8           9   X   X   X   X   X   9         
 9       9   X   X   X   X   X   X   X   9     
10           9   X   X   X   X   X   9         
11               9   X   X   X   9             
12                   9   X   9                 
13                       9                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 1042842864990234375000 optins
The initial system score was 316
The maximum obtainable for the system is 316
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1042842864990234375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.007000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.01 Ms for simplify_system to complete
-------------------------- running turn 69 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(9, 4), (14, 9), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       9                     
 6                   9   X   9                 
 7               9   X   X   X   9             
 8           9   X   X   X   X   X   9         
 9       9   X   X   X   X   X   X   X   9     
10           9   X   X   X   X   X   9         
11               9   X   X   X   9             
12                   9   X   9                 
13                       9                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 1042842864990234375000 optins
The initial system score was 316
The maximum obtainable for the system is 316
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1042842864990234375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.286000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.29 Ms for simplify_system to complete
-------------------------- running turn 70 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(9, 4), (14, 9), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       9                     
 6                   9   X   9                 
 7               9   X   X   X   9             
 8           9   X   X   X   X   X   9         
 9       9   X   X   X   X   X   X   X   9     
10           9   X   X   X   X   X   9         
11               9   X   X   X   9             
12                   9   X   9                 
13                       9                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 1042842864990234375000 optins
The initial system score was 316
The maximum obtainable for the system is 316
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1042842864990234375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  5.977000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.98 Ms for simplify_system to complete
-------------------------- running turn 71 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(9, 4), (14, 9), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       9                     
 6                   9   X   9                 
 7               9   X   X   X   9             
 8           9   X   X   X   X   X   9         
 9       9   X   X   X   X   X   X   X   9     
10           9   X   X   X   X   X   9         
11               9   X   X   X   9             
12                   9   X   9                 
13                       9                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 1042842864990234375000 optins
The initial system score was 316
The maximum obtainable for the system is 316
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1042842864990234375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.019000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.02 Ms for simplify_system to complete
-------------------------- running turn 72 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   -   X   X   X   -   -         
12                   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(9, 4), (14, 9), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       9                     
 6                   9   X   9                 
 7               9   X   X   X   9             
 8           9   X   X   X   X   X   9         
 9       9   X   X   X   X   X   X   X   9     
10           9   X   X   X   X   X   9         
11               9   X   X   X   9             
12                   9   X   9                 
13                       9                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               -   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 1042842864990234375000 optins
The initial system score was 316
The maximum obtainable for the system is 316
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1042842864990234375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  6.059000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.06 Ms for simplify_system to complete
-------------------------- running turn 73 ---------------------------


=> INITIAL
BOT Positions:
36 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                               -                             
 5                           -   X   -                         
 6                       -   X   X   X   -                     
 7                   -   X   X   X   X   X   -                 
 8               -   -   X   X   X   X   X   -   -             
 9       X   -   X   X   X   X   X   X   X   X   X   -   X     
10               -   X   X   X   X   X   X   X   -             
11                   -   -   X   X   X   -   -                 
12                           -   X   -                         
13                               -                             

Awarded move for (3, 9)  to (4, 9)
Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                               -                             
 5                           -   X   -                         
 6                       -   X   X   X   -                     
 7                   -   X   X   X   X   X   -                 
 8               -   -   X   X   X   X   X   -   -             
 9               X   X   X   X   X   X   X   X   X             
10               -   X   X   X   X   X   X   X   -             
11                   -   -   X   X   X   -   -                 
12                           -   X   -                         
13                               -                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(13, 8), (5, 8), (6, 7), (8, 5), (7, 6), (9, 4), (12, 7), (13, 10), (6, 11), (12, 11), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                             
 5                               9                             
 6                           9   X   9                         
 7                       9   X   X   X   9                     
 8                   9   X   X   X   X   X   9                 
 9               9   X   X   X   X   X   X   X   9             
10                   9   X   X   X   X   X   9                 
11                       9   X   X   X   9                     
12                           9   X   9                         
13                               9                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                             
 5                               ?                             
 6                           ?   0   ?                         
 7                       ?   0   0   0   ?                     
 8                   -   0   0   0   0   0   -                 
 9               ?   0   0   0   0   0   0   0   ?             
10                   ?   0   0   0   0   0   ?                 
11                       -   0   0   0   -                     
12                           -   0   -                         
13                               -                             

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                                                             
 5                               8                             
 6                           8   9   8                         
 7                       8   9  10   9   8                     
 8                   8   9  10  11  10   9   8                 
 9               8   9  10  11  12  11  10   9   8             
10                   8   9  10  11  10   9   8                 
11                       8   9  10   9   8                     
12                           8   9   8                         
13                               8                             

The system now has a total of 1042842864990234375000 optins
The initial system score was 328
The maximum obtainable for the system is 330
The score gain were looking for is 2
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 1042842864990234375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  7.829000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.83 Ms for simplify_system to complete
-------------------------- running turn 74 ---------------------------


=> INITIAL
BOT Positions:
36 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -                         
 5                       -   X   -                     
 6                   -   X   X   X   -                 
 7               -   X   X   X   X   X   -             
 8           -   -   X   X   X   X   X   -   -         
 9       X   X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   X   -   -     
11               -   -   X   X   X   -   -             
12                       -   X   -                     
13                           -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
36 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -                         
 5                       -   X   -                     
 6                   -   X   X   X   -                 
 7               -   X   X   X   X   X   -             
 8           -   -   X   X   X   X   X   -   -         
 9       X   X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   X   -   -     
11               -   -   X   X   X   -   -             
12                       -   X   -                     
13                           -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 11
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (14, 9), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(4, 10), (14, 10)], 7: [(13, 8), (14, 9), (5, 8), (4, 9), (8, 5), (7, 6), (9, 4), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 332

-------------------------------------
TARGET system:
36 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                     
 5                          11                         
 6                      11   X  11                     
 7                  11   X   X   X  11                 
 8              11   X   X   X   X   X  11             
 9          11   X   X   X   X   X   X   X  11         
10              11   X   X   X   X   X  11             
11                  11   X   X   X  11                 
12                      11   X  11                     
13                          11                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
36 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                     
 5                           ?                         
 6                       ?   0   ?                     
 7                   ?   0   0   0   ?                 
 8               -   0   0   0   0   0   -             
 9       X   ?   0   0   0   0   0   0   0   ?   X     
10               ?   0   0   0   0   0   ?             
11                   -   0   0   0   -                 
12                       -   0   -                     
13                           -                         

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                                                     
 5                           8                         
 6                       8   9   8                     
 7                   8   9  10   9   8                 
 8               8   9  10  11  10   9   8             
 9       7   8   9  10  11  12  11  10   9   8   7     
10               8   9  10  11  10   9   8             
11                   8   9  10   9   8                 
12                       8   9   8                     
13                           8                         

The system now has a total of 26696777343750000000 optins
The initial system score was 330
The maximum obtainable for the system is 332
The score gain were looking for is 2
The system_score_gain_required = 2

bots_in_optional = [(5, 9), (10, 6), (7, 7), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = [(5, 9), (13, 9)]
bots_outside_system = [(14, 9), (4, 9)]
bots_outside_system_moving_to_optional  = [(14, 9), (4, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(6, 9), (12, 9), (5, 9), (13, 9)]
num_target_bots_in_optional = 11
num_target_bots_in_occupied = 25
current_bots_in_optional = [(10, 6), (7, 7), (6, 10), (8, 6), (12, 10), (11, 7), (9, 5), (14, 9), (4, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 6), (7, 7), (6, 10), (8, 6), (12, 10), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (12, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9), (13, 9)]

Optional squares exist
2 bots need to move into optional
And 2 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(5, 9), (13, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 26696777343750000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10), (6, 8)], 'scores': [1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 10)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  7.742000ms for simplify_system to complete
possible bots to move = [(6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(6, 9), (12, 9)]
Will move (6, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(12, 9), (7, 9)]
Will move (12, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (7, 8), (9, 9), (8, 8), (9, 5), (9, 12)]
filtered = [(11, 9), (7, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 9), (7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 9), (10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (7, 8), (9, 9), (8, 8), (9, 5), (9, 12)]
filtered = [(8, 9), (9, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 9), (8, 8)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10), (8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (7, 8), (9, 5), (9, 12)]
filtered = [(9, 8), (9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (9, 8), (10, 6), (7, 7), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(9, 8), (9, 11)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (10, 6), (7, 7), (10, 8), (11, 10), (9, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(10, 8), (9, 11)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (10, 6), (7, 7), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (12, 10), (9, 6), (11, 7), (10, 10), (11, 8), (7, 8), (9, 5), (9, 12)]
filtered = [(9, 11), (11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (10, 6), (7, 7), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (12, 10), (9, 6), (10, 10), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 7), (9, 11)]
Will move (10, 7)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (10, 6), (7, 7), (11, 10), (9, 5), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (9, 7), (8, 11), (8, 7), (12, 10), (9, 6), (10, 10), (7, 8), (9, 12)]
filtered = [(9, 11), (9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 10), (6, 10), (8, 10), (9, 11), (7, 10), (8, 11), (12, 10), (10, 10), (9, 12)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 10), (6, 10), (8, 10), (7, 10), (8, 11), (12, 10), (10, 10), (9, 12)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 10), (12, 10), (10, 10), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((10, 11), (10, 11)), ((11, 10), (11, 10)), ((12, 10), (12, 10)), ((10, 10), (10, 10)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(6, 8)], 'scores': [-1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(6, 8)], 'scores': [-1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(6, 8)], 'scores': [-1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.74 Ms for simplify_system to complete
-------------------------- running turn 75 ---------------------------


=> INITIAL
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -   X             
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   -   X   -                 
13                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
37 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -   X             
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   -   X   -                 
13                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (11, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 11
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (9, 4), (14, 9), (5, 8), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 332

-------------------------------------
TARGET system:
36 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      11                     
 6                  11   X  11                 
 7              11   X   X   X  11             
 8          11   X   X   X   X   X  11         
 9      11   X   X   X   X   X   X   X  11     
10          11   X   X   X   X   X  11         
11              11   X   X   X  11             
12                  11   X  11                 
13                      11                     

This is system split, groups are...
0
  [(11, 5), [(10, 5)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
36 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     

The system now has a total of 9385585784912109375000 optins
The initial system score was 338
The maximum obtainable for the system is 339
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 11
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (6, 8), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 9385585784912109375000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13)], 'scores': [1, 0, -1]}


It took  7.132000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.13 Ms for simplify_system to complete
-------------------------- running turn 76 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   -   X   -                 
13                       -   X                 
14                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   -   X   -                 
13                       -   X                 
14                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 5), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 5), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(10, 4)], 7: [(7, 12), (9, 4), (14, 9), (5, 8), (4, 9), (8, 5), (7, 6), (10, 13), (13, 10), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      13                     
 6                  13   X  13                 
 7              13   X   X   X  13             
 8          13   X   X   X   X   X  13         
 9      13   X   X   X   X   X   X   X  13     
10          13   X   X   X   X   X  13         
11              13   X   X   X  13             
12                  13   X  13                 
13                      13                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?   X                 
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   -   0   -                 
13                       -   X                 
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8   7                 
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8   7                 
14                                             

The system now has a total of 62570571899414062500000 optins
The initial system score was 352
The maximum obtainable for the system is 355
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(10, 13), (10, 5)]
bots_outside_system_moving_to_optional  = [(10, 13), (10, 5)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (6, 8), (9, 5), (10, 13), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (11, 7), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 62570571899414062500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 13) - {'options': [(9, 13), (10, 12)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 5) - {'options': [(9, 5), (10, 6)], 'scores': [1, 1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.917000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (10, 5), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(10, 13), (10, 5)]
Will move (10, 5)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (10, 6), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(10, 13), (9, 6)]
Will move (10, 13)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (10, 6), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 9), (8, 8), (13, 9), (9, 12)]
filtered = [(9, 6)]
Will move (9, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (10, 6), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (10, 6), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (10, 6), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 9), (8, 8), (13, 9), (9, 12)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (10, 9), (10, 6), (8, 11), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because two bots take the same coordinate
1 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (13, 9), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
System failed because two bots take the same coordinate
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (10, 10), (11, 8), (13, 9), (9, 12)]
filtered = [(6, 9)]
Will move (6, 9)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (10, 9), (10, 6), (13, 9), (11, 9), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (10, 9), (10, 6), (11, 9), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (13, 9), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
System failed because two bots take the same coordinate
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (10, 9), (10, 6), (11, 9), (12, 10), (7, 9), (11, 7), (10, 10), (11, 8), (13, 9), (9, 12)]
filtered = [(6, 9)]
Will move (6, 9)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(6, 9)]
Will move (6, 9)
System failed because two bots take the same coordinate
1 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
System failed because a bot has no moves
3 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (7, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(7, 10)]
Will move (7, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because a bot has no moves
1 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
System failed because two bots take the same coordinate
3 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(6, 9)]
Will move (6, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because two bots take the same coordinate
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because two bots take the same coordinate
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 10)]
Will move (7, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
System failed because two bots take the same coordinate
3 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (10, 9), (10, 6), (13, 9), (11, 9), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
System failed because a bot has no moves
3 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because a bot has no moves
1 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because two bots take the same coordinate
1 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because two bots take the same coordinate
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because two bots take the same coordinate
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(6, 9), (10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = [(6, 9)]
Will move (6, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (12, 9), (10, 8), (11, 10), (10, 7), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because two bots take the same coordinate
System failed because two bots take the same coordinate
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because two bots take the same coordinate
1 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (11, 7), (10, 10), (11, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because two bots take the same coordinate
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (10, 10), (11, 8), (7, 8), (8, 8), (13, 9), (9, 12)]
filtered = [(7, 8)]
Will move (7, 8)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(10, 11), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (10, 10), (11, 8), (8, 8), (9, 12)]
filtered = [(8, 8)]
Will move (8, 8)
System failed because a bot has no moves
System failed because a bot has no moves
2 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (7, 10), (8, 6), (10, 9), (10, 6), (13, 9), (11, 9), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (10, 10), (11, 8), (8, 8), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((10, 6), (10, 6)), ((13, 9), (13, 9)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 9)], 'scores': [1]}, (12, 12): {'options': [(11, 12)], 'scores': [1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 9)], 'scores': [1]}, (12, 12): {'options': [(11, 12)], 'scores': [1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(12, 12) - {'options': [(11, 12)], 'scores': [1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.92 Ms for simplify_system to complete
-------------------------- running turn 77 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   -   X             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   -   X             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   -   X             
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8   7             
13                       8                     
14                                             

The system now has a total of 187711715698242187500000 optins
The initial system score was 355
The maximum obtainable for the system is 356
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(11, 12)]
bots_outside_system_moving_to_optional  = [(11, 12)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (11, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 187711715698242187500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11)], 'scores': [1, 1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.640000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = [(11, 12)]
Will move (11, 12)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (9, 6), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((9, 5), (9, 5)), ((10, 7), (10, 7)), ((9, 6), (9, 6)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 13), (9, 13)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (11, 12): {'options': [(10, 12)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (11, 12): {'options': [(10, 12)], 'scores': [1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(11, 12) - {'options': [(10, 12)], 'scores': [1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.64 Ms for simplify_system to complete
-------------------------- running turn 78 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   ?                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 281567573547363281250000 optins
The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.593000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.59 Ms for simplify_system to complete
-------------------------- running turn 79 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   ?                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 281567573547363281250000 optins
The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.587000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.59 Ms for simplify_system to complete
-------------------------- running turn 80 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   ?                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 281567573547363281250000 optins
The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.587000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.59 Ms for simplify_system to complete
-------------------------- running turn 81 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   ?                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 281567573547363281250000 optins
The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.825000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.82 Ms for simplify_system to complete
-------------------------- running turn 82 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   ?                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 281567573547363281250000 optins
The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.826000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.83 Ms for simplify_system to complete
-------------------------- running turn 83 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   -   -         
12               -   X   X   X   -             
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      14                     
 6                  14   X  14                 
 7              14   X   X   X  14             
 8          14   X   X   X   X   X  14         
 9      14   X   X   X   X   X   X   X  14     
10          14   X   X   X   X   X  14         
11              14   X   X   X  14             
12                  14   X  14                 
13                      14                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   ?         
11               ?   0   0   0   -             
12                   ?   0   ?                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 281567573547363281250000 optins
The initial system score was 356
The maximum obtainable for the system is 356
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.801000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.80 Ms for simplify_system to complete
-------------------------- running turn 84 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 2                                                     
 3                               X                     
 4                               -                     
 5                           -   X   -                 
 6                       -   X   X   X   -             
 7                   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   -         
 9       X   -   X   X   X   X   X   X   X   X   X   - 
10               -   X   X   X   X   X   X   X   -     
11                   -   X   X   X   X   -   -         
12                       -   X   X   X   -             
13                           -   X   -                 
14                               -   X   -             
15                               -   X                 
16                                                     

Awarded move for (3, 9)  to (4, 9)
Awarded move for (9, 3)  to (9, 4)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
41 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 2                                                     
 3                                                     
 4                                                     
 5                           -   X   -                 
 6                       -   X   X   X   -             
 7                   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   -         
 9               X   X   X   X   X   X   X   X   X   - 
10               -   X   X   X   X   X   X   X   -     
11                   -   X   X   X   X   -   -         
12                       -   X   X   X   -             
13                           -   X   -                 
14                               -   X   -             
15                               -   X                 
16                                                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (10, 14), (11, 7), (13, 9), (8, 11), (11, 9), (10, 15), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(7, 12), (8, 5), (14, 9), (5, 8), (6, 7), (10, 13), (11, 12), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (12, 11), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 2                                                     
 3                                                     
 4                                                     
 5                              14                     
 6                          14   X  14                 
 7                      14   X   X   X  14             
 8                  14   X   X   X   X   X  14         
 9              14   X   X   X   X   X   X   X  14     
10                  14   X   X   X   X   X  14         
11                      14   X   X   X  14             
12                          14   X  14                 
13                              14                     
14                                                     
15                                                     
16                                                     

This is system split, groups are...
0
  [(10, 15), [(10, 14), (9, 15)], [1, 1]]
  [(10, 14), [(10, 13)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 2                                                     
 3                                                     
 4                                                     
 5                               ?                     
 6                           ?   0   ?                 
 7                       ?   0   0   0   ?             
 8                   ?   0   0   0   0   0   -         
 9               ?   0   0   0   0   0   0   0   ?     
10                   ?   0   0   0   0   0   ?         
11                       ?   0   0   0   -             
12                           ?   0   ?                 
13                               ?                     
14                                                     
15                                                     
16                                                     

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 2                                                     
 3                                                     
 4                                                     
 5                               8                     
 6                           8   9   8                 
 7                       8   9  10   9   8             
 8                   8   9  10  11  10   9   8         
 9               8   9  10  11  12  11  10   9   8     
10                   8   9  10  11  10   9   8         
11                       8   9  10   9   8             
12                           8   9   8                 
13                               8                     
14                                                     
15                                                     
16                                                     

The system now has a total of 281567573547363281250000 optins
The initial system score was 379
The maximum obtainable for the system is 383
The score gain were looking for is 4
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist
No bots need to leave optional
25
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 281567573547363281250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(9, 3) - {'options': [(9, 4)], 'scores': [1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  12.550000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 15): {'options': [(10, 14)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (9, 3): {'options': [(9, 4)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 4
this possibility has a score of 4
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 15): {'options': [(10, 14)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (9, 3): {'options': [(9, 4)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(9, 3) - {'options': [(9, 4)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 12.55 Ms for simplify_system to complete
-------------------------- running turn 85 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 3                           -                     
 4                           X                     
 5                       -   X   -                 
 6                   -   X   X   X   -             
 7               -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X   X   - 
10       -   -   X   X   X   X   X   X   X   -     
11               -   X   X   X   X   -   -         
12                   -   X   X   X   -             
13                       -   X   X   -             
14                           -   X                 
15                               -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 3                           -                     
 4                           X                     
 5                       -   X   -                 
 6                   -   X   X   X   -             
 7               -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X   X   - 
10       -   -   X   X   X   X   X   X   X   -     
11               -   X   X   X   X   -   -         
12                   -   X   X   X   -             
13                       -   X   X   -             
14                           -   X                 
15                               -                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (9, 4), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (10, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (10, 13), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (8, 6), (12, 10), (9, 13), (13, 9), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (9, 4), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (10, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {5: [(10, 15)], 6: [(10, 14), (4, 10), (9, 3), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (10, 13), (13, 10), (9, 14), (6, 11), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (8, 6), (12, 10), (9, 13), (13, 9), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  
 3                                                 
 4                           2                     
 5                       2   X   2                 
 6                   2   X   X   X   2             
 7               2   X   X   X   X   X   2         
 8           2   X   X   X   X   X   X   X         
 9       2   X   X   X   X   X   X   X   X   X   2 
10           2   X   X   X   X   X   X   X   2     
11               2   X   X   X   X   X   2         
12                   2   X   X   X   2             
13                       2   X   2                 
14                           2                     
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 3                                                 
 4                           ?                     
 5                       -   0   -                 
 6                   -   0   0   0   -             
 7               -   0   0   0   0   0   -         
 8           -   0   0   0   0   0   0   =         
 9       ?   0   0   0   0   0   0   0   0   0   - 
10           -   0   0   0   0   0   0   0   -     
11               -   0   0   0   0   =   -         
12                   -   0   0   0   -             
13                       -   0   ?                 
14                           -   X                 
15                                                 

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  
 3                                                 
 4                           7                     
 5                       7   8   7                 
 6                   7   8   9   8   7             
 7               7   8   9  10   9   8   7         
 8           7   8   9  10  11  10   9   8         
 9       7   8   9  10  11  12  11  10   9   8   7 
10           7   8   9  10  11  10   9   8   7     
11               7   8   9  10   9   8   7         
12                   7   8   9   8   7             
13                       7   8   7                 
14                           7   6                 
15                                                 

The system now has a total of 22351741790771484375000000000 optins
The initial system score was 383
The maximum obtainable for the system is 386
The score gain were looking for is 3
The system_score_gain_required = 3

bots_in_optional = [(9, 4), (4, 9), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(10, 14)]
bots_outside_system_moving_to_optional  = [(10, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 4), (4, 9), (10, 13), (10, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 4), (4, 9), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5)]
current_bots_outside = []
target_occupied_not_occupied = [(11, 11), (12, 8)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]

Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied
len(current_bots_in_optional_that_can_move_to_occupied) = 3
Deficit = -1
It should be possible to make this happen
Like by doing one from 2 of the following solutions
Valid combo (checking) = ([(4, 9), (5, 9), (6, 9), (6, 10), (7, 10), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11)], [(9, 4), (9, 5), (9, 6), (10, 6), (10, 7), (10, 8), (11, 8), (12, 8)])
Works... ([(4, 9), (5, 9), (6, 9), (6, 10), (7, 10), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11)], [(9, 4), (9, 5), (9, 6), (10, 6), (10, 7), (10, 8), (11, 8), (12, 8)])
Found a way of moving the bots around...
([(4, 9), (5, 9), (6, 9), (6, 10), (7, 10), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11)], [(9, 4), (9, 5), (9, 6), (10, 6), (10, 7), (10, 8), (11, 8), (12, 8)])

System result = ...
The system has a total of 6370099200000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(11, 11)], 'scores': [-1]}
(9, 8) - {'options': [(9, 9), (9, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1]}
(10, 6) - {'options': [(10, 7)], 'scores': [1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(9, 12), (10, 12), (11, 12)], 'scores': [1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10)], 'scores': [1, 0, -1, -1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10)], 'scores': [1, 1, 0, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(10, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (8, 7)], 'scores': [1, 0, -1]}
(10, 14) - {'options': [(10, 13), (9, 14)], 'scores': [1, 1]}
(11, 7) - {'options': [(11, 7), (12, 7)], 'scores': [0, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(10, 6)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8)], 'scores': [1, 0, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 8), (6, 7), (5, 8)], 'scores': [1, 0, -1, -1]}
(8, 12) - {'options': [(9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 0, -1, -1]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [0, -1, -1, -1]}


It took  75.843000ms for simplify_system to complete
possible bots to move = [(9, 8), (7, 7), (10, 12), (8, 9), (12, 9), (11, 10), (8, 10), (8, 6), (10, 13), (10, 9), (9, 7), (10, 14), (11, 7), (13, 9), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (9, 13), (6, 8), (8, 12), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
filtered = [(10, 14)]
Will move (10, 14)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (7, 7), (10, 12), (8, 9), (12, 9), (11, 10), (8, 10), (8, 8), (8, 6), (10, 9), (9, 7), (9, 13), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (8, 12), (10, 10), (9, 9), (13, 9), (7, 8), (9, 12)]
filtered = [(10, 13)]
Will move (10, 13)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (7, 7), (10, 12), (8, 9), (12, 9), (11, 10), (8, 10), (8, 6), (10, 9), (9, 7), (11, 7), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (9, 13), (6, 8), (8, 12), (7, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 12)]
filtered = [(9, 13)]
Will move (9, 13)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (7, 7), (10, 12), (8, 9), (12, 9), (11, 10), (8, 10), (8, 8), (8, 6), (10, 9), (9, 7), (13, 9), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (11, 7), (6, 8), (8, 12), (10, 10), (9, 9), (7, 8), (9, 12)]
filtered = [(9, 12)]
Will move (9, 12)
0 systems were filtered as they were not valid
possible bots to move = [(9, 8), (7, 7), (8, 9), (12, 9), (11, 10), (8, 10), (8, 6), (10, 9), (9, 7), (11, 7), (11, 9), (9, 10), (8, 7), (12, 10), (7, 9), (6, 8), (8, 12), (10, 10), (9, 9), (8, 8), (13, 9), (7, 8)]
filtered = []
No bots that need to move could be found
Works... [((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((7, 9), (7, 9)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(11, 11)], 'scores': [-1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 7)], 'scores': [1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(11, 12)], 'scores': [-1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 8)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(10, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(9, 11)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(10, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(12, 8)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(10, 12)], 'scores': [-1]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(11, 11)], 'scores': [-1]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 7)], 'scores': [1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(11, 12)], 'scores': [-1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 8)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(10, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(9, 11)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(10, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(12, 8)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(10, 12)], 'scores': [-1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(11, 11)], 'scores': [-1]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 7)], 'scores': [1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(11, 12)], 'scores': [-1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(10, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(10, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(10, 12)], 'scores': [-1]}
It took a total of 75.84 Ms for simplify_system to complete
-------------------------- running turn 86 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       -   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       -   -                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       -                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     

The system now has a total of 157160684466361999511718750000 optins
The initial system score was 386
The maximum obtainable for the system is 386
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 157160684466361999511718750000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14)], 'scores': [1, 0, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.343000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.34 Ms for simplify_system to complete
-------------------------- running turn 87 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                   X   -   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                   X   -   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 14), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (7, 6), (5, 8), (10, 13), (13, 10), (6, 11), (12, 7), (13, 8), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (9, 14), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 14), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (12, 12), (8, 14), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (7, 6), (5, 8), (10, 13), (13, 10), (6, 11), (12, 7), (13, 8), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (9, 14), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                   X   -                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                   6   7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 392
The maximum obtainable for the system is 393
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(11, 12), (10, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(8, 14)]
bots_outside_system_moving_to_optional  = [(8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.799000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 14), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
Will move (8, 14)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (9, 6), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((9, 5), (9, 5)), ((10, 7), (10, 7)), ((9, 6), (9, 6)), ((6, 10), (6, 10)), ((10, 12), (10, 12)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((10, 13), (10, 13)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((11, 12), (11, 12)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((9, 13), (9, 13)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.80 Ms for simplify_system to complete
-------------------------- running turn 88 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.055000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.06 Ms for simplify_system to complete
-------------------------- running turn 89 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.037000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.04 Ms for simplify_system to complete
-------------------------- running turn 90 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.028000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.03 Ms for simplify_system to complete
-------------------------- running turn 91 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.204000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.20 Ms for simplify_system to complete
-------------------------- running turn 92 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.157000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.16 Ms for simplify_system to complete
-------------------------- running turn 93 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.210000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.21 Ms for simplify_system to complete
-------------------------- running turn 94 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   X   -         
13                   -   X   X   -             
14                       X   -                 
15                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (9, 15), (12, 12), (11, 13)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (4, 9), (11, 12), (7, 6), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   -                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   ?             
13                   -   0   ?                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 optins
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.129000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.13 Ms for simplify_system to complete
-------------------------- running turn 95 ---------------------------


=> INITIAL
BOT Positions:
47 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   X   X   -   X   -     
11           -   X   X   X   X   X   -   -   X         
12               -   X   X   X   X   -                 
13                   -   X   X   -                     
14                       X   -                         
15                       -                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
47 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   X   X   -   X   -     
11           -   X   X   X   X   X   -   -   X         
12               -   X   X   X   X   -                 
13                   -   X   X   -                     
14                       X   -                         
15                       -                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (14, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (14, 11), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (15, 9), (9, 5), (7, 8), (9, 12), (12, 8)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 5
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (11, 12), (7, 6), (9, 4), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (14, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (15, 9), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {5: [(15, 10), (14, 11)], 6: [(14, 10), (10, 14), (9, 15), (12, 12), (15, 9), (11, 13)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (11, 12), (7, 6), (9, 4), (5, 8), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 407

-------------------------------------
TARGET system:
46 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       5                             
 5                   5   X   5                         
 6               5   X   X   X   5                     
 7           5   X   X   X   X   X   5                 
 8       5   X   X   X   X   X   X   X   5             
 9   5   X   X   X   X   X   X   X   X   X   5         
10       5   X   X   X   X   X   X   X   5             
11           5   X   X   X   X   X   5                 
12               5   X   X   X   5                     
13                   5   X   5                         
14                       5                             
15                                                     

This is system split, groups are...
0
  [(14, 11), [(14, 10)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
46 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   0   -                         
 6               -   0   0   0   -                     
 7           -   0   0   0   0   0   -                 
 8       -   0   0   0   0   0   0   0   -             
 9   -   0   0   0   0   0   0   0   0   0   -   X     
10       -   0   0   0   0   0   0   0   -   X         
11           -   0   0   0   0   0   -                 
12               -   0   0   0   ?                     
13                   -   0   ?                         
14                       ?                             
15                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       7                             
 5                   7   8   7                         
 6               7   8   9   8   7                     
 7           7   8   9  10   9   8   7                 
 8       7   8   9  10  11  10   9   8   7             
 9   7   8   9  10  11  12  11  10   9   8   7   6     
10       7   8   9  10  11  10   9   8   7   6         
11           7   8   9  10   9   8   7                 
12               7   8   9   8   7                     
13                   7   8   7                         
14                       7                             
15                                                     

The system now has a total of 314321368932723999023437500000 optins
The initial system score was 410
The maximum obtainable for the system is 413
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(11, 12), (10, 13), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(14, 10), (15, 9)]
bots_outside_system_moving_to_optional  = [(14, 10), (15, 9)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 12), (10, 13), (9, 14), (14, 10), (15, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(11, 12), (10, 13), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 314321368932723999023437500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(14, 10) - {'options': [(13, 10)], 'scores': [1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 8)], 'scores': [1, 0, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (12, 11)], 'scores': [1, 1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(14, 11) - {'options': [(14, 10)], 'scores': [1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  8.948000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (14, 10): {'options': [(13, 10)], 'scores': [1]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (14, 11): {'options': [(14, 10)], 'scores': [1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (14, 10): {'options': [(13, 10)], 'scores': [1]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (14, 11): {'options': [(14, 10)], 'scores': [1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(14, 10) - {'options': [(13, 10)], 'scores': [1]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(14, 11) - {'options': [(14, 10)], 'scores': [1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 8.95 Ms for simplify_system to complete
-------------------------- running turn 96 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   X   X   X     
11           -   X   X   X   X   X   -   -   -     
12               -   X   X   X   X   -             
13               -   -   X   X   -                 
14               X   -   X   -                     
15                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   X   X   X     
11           -   X   X   X   X   X   -   -   -     
12               -   X   X   X   X   -             
13               -   -   X   X   -                 
14               X   -   X   -                     
15                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (7, 14), (14, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 6
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (11, 12), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (5, 8), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (14, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {5: [(14, 11)], 6: [(12, 12), (10, 14), (9, 15), (13, 11), (14, 10), (11, 13), (14, 8)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (11, 12), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (5, 8), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 414

-------------------------------------
TARGET system:
47 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       6                         
 5                   6   X   6                     
 6               6   X   X   X   6                 
 7           6   X   X   X   X   X   6             
 8       6   X   X   X   X   X   X   X   6         
 9   6   X   X   X   X   X   X   X   X   X   6     
10       6   X   X   X   X   X   X   X   6         
11           6   X   X   X   X   X   6             
12               6   X   X   X   6                 
13                   6   X   6                     
14                       6                         
15                                                 

This is system split, groups are...
0
  [(7, 14), [(8, 14)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
47 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   0   ?   X     
11           -   0   0   0   0   0   -             
12               -   0   0   0   ?                 
13                   -   0   ?                     
14                       ?                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7   6     
11           7   8   9  10   9   8   7             
12               7   8   9   8   7                 
13                   7   8   7                     
14                       7                         
15                                                 

The system now has a total of 7858034223318099975585937500000 optins
The initial system score was 418
The maximum obtainable for the system is 420
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(14, 9), (11, 12), (10, 13), (13, 10), (9, 14)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(14, 10)]
bots_outside_system_moving_to_optional  = [(14, 10)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (14, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (11, 12), (10, 13), (13, 10), (9, 14)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 7858034223318099975585937500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 10) - {'options': [(13, 9), (12, 10), (13, 10)], 'scores': [1, 1, 0]}
(7, 14) - {'options': [(8, 14)], 'scores': [1]}
(14, 10) - {'options': [(14, 9), (13, 10)], 'scores': [1, 1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  9.071000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (14, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(14, 10)]
Will move (14, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (9, 6), (7, 11), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (9, 14), (9, 13), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12), (12, 8)]
filtered = [(13, 9)]
Will move (13, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (13, 10), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 12), (12, 8)]
filtered = [(12, 9)]
Will move (12, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (13, 10), (9, 14), (9, 13), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (9, 6), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (9, 10), (8, 7), (12, 10), (11, 12), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (9, 7), (9, 14), (9, 13), (10, 13), (9, 10), (8, 7), (12, 10), (13, 10), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 9), (8, 8), (9, 5), (9, 12), (12, 8)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (9, 7), (13, 10), (9, 14), (11, 7), (8, 11), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (9, 6), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (9, 7), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (8, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (9, 14), (11, 7), (8, 11), (8, 7), (12, 10), (13, 10), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (8, 8), (9, 5), (9, 12), (12, 8)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (9, 7), (13, 10), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 10)]
Will move (8, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 9), (9, 6), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (9, 14), (11, 7), (8, 7), (12, 10), (11, 12), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (8, 8), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (9, 7), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (13, 10), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (8, 8), (9, 5), (9, 12), (12, 8)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (7, 11), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (13, 10), (9, 14), (11, 7), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (9, 6), (7, 11), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (9, 7), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (6, 8), (8, 12), (11, 8), (10, 10), (7, 8), (9, 12), (12, 8)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (9, 14), (11, 7), (8, 7), (12, 10), (13, 10), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 5), (9, 12), (12, 8)]
filtered = [(11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (7, 11), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (9, 7), (13, 10), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (6, 8), (8, 12), (10, 10), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(11, 7)]
Will move (11, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (9, 6), (7, 11), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (9, 14), (8, 7), (12, 10), (11, 12), (7, 9), (9, 13), (6, 8), (8, 12), (10, 10), (7, 8), (9, 12), (12, 8)]
filtered = [(10, 7)]
Will move (10, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (7, 11), (11, 10), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (9, 7), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (13, 10), (7, 9), (6, 8), (8, 12), (7, 8), (10, 10), (9, 5), (9, 12), (12, 8)]
filtered = [(9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (7, 11), (11, 10), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (13, 10), (9, 14), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (10, 10), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(9, 6)]
Will move (9, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (7, 11), (11, 10), (9, 5), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (9, 14), (9, 13), (10, 13), (8, 7), (12, 10), (11, 12), (7, 9), (6, 8), (8, 12), (10, 10), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 6)]
Will move (8, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (7, 11), (11, 10), (6, 10), (11, 12), (10, 12), (7, 10), (10, 13), (9, 14), (12, 10), (13, 10), (7, 9), (9, 13), (6, 8), (8, 12), (7, 8), (10, 10), (9, 5), (9, 12), (12, 8)]
filtered = [(7, 7)]
Will move (7, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 11), (11, 10), (11, 12), (6, 10), (10, 12), (7, 10), (13, 10), (9, 14), (9, 13), (10, 13), (12, 10), (7, 9), (6, 8), (8, 12), (10, 10), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(7, 8)]
Will move (7, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 11), (11, 10), (9, 5), (13, 10), (6, 10), (10, 12), (7, 10), (10, 13), (9, 14), (12, 10), (11, 12), (7, 9), (9, 13), (6, 8), (8, 12), (10, 10), (9, 12), (12, 8)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 11), (11, 10), (6, 10), (11, 12), (10, 12), (7, 10), (9, 14), (9, 13), (10, 13), (12, 10), (13, 10), (6, 8), (8, 12), (10, 10), (9, 5), (9, 12), (12, 8)]
filtered = [(6, 9)]
Will move (6, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (10, 11), (11, 11), (10, 6), (7, 11), (11, 10), (11, 12), (6, 10), (10, 12), (7, 10), (10, 13), (13, 10), (9, 14), (12, 10), (9, 13), (6, 8), (8, 12), (10, 10), (9, 5), (9, 12), (12, 8)]
filtered = [(5, 9)]
Will move (5, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 11), (10, 6), (7, 11), (11, 10), (9, 5), (13, 10), (6, 10), (10, 12), (7, 10), (9, 14), (9, 13), (10, 13), (12, 10), (11, 12), (6, 8), (8, 12), (10, 10), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((10, 11), (10, 11)), ((11, 11), (11, 11)), ((10, 6), (10, 6)), ((7, 11), (7, 11)), ((11, 10), (11, 10)), ((9, 5), (9, 5)), ((13, 10), (13, 10)), ((6, 10), (6, 10)), ((10, 12), (10, 12)), ((7, 10), (7, 10)), ((9, 14), (9, 14)), ((9, 13), (9, 13)), ((10, 13), (10, 13)), ((12, 10), (12, 10)), ((11, 12), (11, 12)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (7, 14): {'options': [(8, 14)], 'scores': [1]}, (14, 10): {'options': [(14, 9)], 'scores': [1]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (7, 14): {'options': [(8, 14)], 'scores': [1]}, (14, 10): {'options': [(14, 9)], 'scores': [1]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(13, 10) - {'options': [(13, 10)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(7, 14) - {'options': [(8, 14)], 'scores': [1]}
(14, 10) - {'options': [(14, 9)], 'scores': [1]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 9.07 Ms for simplify_system to complete
-------------------------- running turn 97 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       X   X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -   -         
12               -   X   X   X   X   -             
13                   -   X   X   -                 
14               -   X   X   -                     
15                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       X   X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -   -         
12               -   X   X   X   X   -             
13                   -   X   X   -                 
14               -   X   X   -                     
15                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (8, 14), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 7
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (7, 6), (9, 4), (10, 13), (13, 10), (6, 11), (12, 7), (12, 11), (6, 7), (5, 8), (11, 12), (10, 5), (5, 10), (8, 13), (9, 14), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (8, 14), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {5: [(7, 14)], 6: [(12, 12), (10, 14), (9, 15), (13, 11), (5, 11), (14, 10), (8, 14), (11, 13), (14, 8)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (7, 6), (9, 4), (10, 13), (13, 10), (6, 11), (12, 7), (12, 11), (6, 7), (5, 8), (11, 12), (10, 5), (5, 10), (8, 13), (9, 14), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 421

-------------------------------------
TARGET system:
48 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   X   7                     
 6               7   X   X   X   7                 
 7           7   X   X   X   X   X   7             
 8       7   X   X   X   X   X   X   X   7         
 9   7   X   X   X   X   X   X   X   X   X   7     
10       7   X   X   X   X   X   X   X   7         
11           7   X   X   X   X   X   7             
12               7   X   X   X   7                 
13                   7   X   7                     
14                       7                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       ?   0   0   0   0   0   0   0   ?         
11           -   0   0   0   0   0   -             
12               -   0   0   0   ?                 
13                   -   0   ?                     
14                   X   ?                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7                 
13                   7   8   7                     
14                   6   7                         
15                                                 

The system now has a total of 23574102669954299926757812500000 optins
The initial system score was 420
The maximum obtainable for the system is 421
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(8, 14)]
bots_outside_system_moving_to_optional  = [(8, 14)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 41
current_bots_in_optional = [(14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10), (8, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (11, 7), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 23574102669954299926757812500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 10) - {'options': [(13, 9), (12, 10), (13, 10)], 'scores': [1, 1, 0]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(8, 14) - {'options': [(9, 14), (8, 13)], 'scores': [1, 1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  8.652000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (11, 7), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (8, 14), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = [(8, 14)]
Will move (8, 14)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (9, 6), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (9, 13), (7, 8), (9, 12), (12, 8)]
filtered = [(9, 13)]
Will move (9, 13)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (13, 10), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 9), (8, 8), (9, 5), (13, 9), (9, 12), (12, 8)]
filtered = [(9, 12)]
Will move (9, 12)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (9, 11), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (13, 10), (13, 9), (10, 13), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (12, 8)]
filtered = [(9, 11)]
Will move (9, 11)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (9, 6), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (13, 9), (7, 8), (12, 8)]
filtered = [(9, 10)]
Will move (9, 10)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (10, 13), (11, 9), (8, 7), (12, 10), (13, 10), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 9), (8, 8), (9, 5), (13, 9), (12, 8)]
filtered = [(9, 9)]
Will move (9, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (13, 9), (8, 11), (11, 9), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (8, 8), (9, 5), (7, 8), (12, 8)]
filtered = [(8, 9)]
Will move (8, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (9, 6), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (10, 13), (11, 9), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (8, 8), (13, 9), (7, 8), (12, 8)]
filtered = [(8, 8)]
Will move (8, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (8, 7), (12, 10), (13, 10), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(9, 8)]
Will move (9, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (8, 11), (10, 9), (9, 7), (13, 10), (13, 9), (10, 13), (11, 9), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 5), (7, 8), (12, 8)]
filtered = [(10, 8)]
Will move (10, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (9, 6), (7, 11), (14, 9), (12, 9), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (13, 9), (7, 8), (12, 8)]
filtered = [(10, 9)]
Will move (10, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (8, 11), (9, 7), (10, 13), (11, 9), (8, 7), (12, 10), (13, 10), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (7, 8), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(11, 9)]
Will move (11, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (10, 7), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (13, 10), (13, 9), (8, 11), (8, 7), (12, 10), (9, 6), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 5), (7, 8), (12, 8)]
filtered = [(11, 8)]
Will move (11, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (9, 6), (7, 11), (14, 9), (12, 9), (11, 10), (9, 5), (10, 7), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (8, 11), (9, 7), (10, 13), (8, 7), (12, 10), (11, 12), (7, 9), (11, 7), (5, 10), (6, 8), (8, 12), (10, 10), (13, 9), (7, 8), (12, 8)]
filtered = [(11, 7)]
Will move (11, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (10, 7), (9, 6), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (10, 13), (9, 7), (8, 11), (8, 7), (12, 10), (13, 10), (7, 9), (5, 10), (6, 8), (8, 12), (7, 8), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(10, 7)]
Will move (10, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (11, 12), (6, 10), (10, 12), (7, 10), (8, 6), (8, 11), (9, 7), (13, 10), (13, 9), (10, 13), (8, 7), (12, 10), (9, 6), (7, 9), (5, 10), (6, 8), (8, 12), (10, 10), (9, 5), (7, 8), (12, 8)]
filtered = [(9, 7)]
Will move (9, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (9, 6), (7, 11), (14, 9), (12, 9), (11, 10), (9, 5), (13, 10), (6, 10), (10, 12), (7, 10), (8, 6), (10, 13), (8, 11), (8, 7), (12, 10), (11, 12), (7, 9), (5, 10), (6, 8), (8, 12), (10, 10), (13, 9), (7, 8), (12, 8)]
filtered = [(9, 6)]
Will move (9, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (6, 10), (11, 12), (10, 12), (7, 10), (8, 6), (8, 11), (10, 13), (8, 7), (12, 10), (13, 10), (7, 9), (5, 10), (6, 8), (8, 12), (7, 8), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(8, 6)]
Will move (8, 6)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (7, 7), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (11, 12), (6, 10), (10, 12), (7, 10), (10, 13), (13, 10), (13, 9), (8, 11), (12, 10), (7, 9), (5, 10), (6, 8), (8, 12), (10, 10), (9, 5), (7, 8), (12, 8)]
filtered = [(7, 7)]
Will move (7, 7)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (9, 5), (13, 10), (6, 10), (10, 12), (7, 10), (8, 11), (10, 13), (12, 10), (11, 12), (7, 9), (5, 10), (6, 8), (8, 12), (10, 10), (13, 9), (7, 8), (12, 8)]
filtered = [(7, 8)]
Will move (7, 8)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (6, 10), (11, 12), (10, 12), (7, 10), (10, 13), (8, 11), (12, 10), (13, 10), (7, 9), (5, 10), (6, 8), (8, 12), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(7, 9)]
Will move (7, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (10, 6), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (11, 12), (6, 10), (10, 12), (7, 10), (8, 11), (13, 10), (13, 9), (10, 13), (12, 10), (5, 10), (6, 8), (8, 12), (10, 10), (9, 5), (12, 8)]
filtered = [(6, 9)]
Will move (6, 9)
0 systems were filtered as they were not valid
possible bots to move = [(5, 9), (10, 11), (11, 11), (10, 6), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (9, 5), (13, 10), (6, 10), (10, 12), (7, 10), (10, 13), (8, 11), (12, 10), (11, 12), (5, 10), (6, 8), (8, 12), (10, 10), (13, 9), (12, 8)]
filtered = [(5, 9)]
Will move (5, 9)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 11), (10, 6), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (6, 10), (11, 12), (10, 12), (7, 10), (8, 11), (10, 13), (12, 10), (13, 10), (6, 8), (8, 12), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(6, 10)]
Will move (6, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 11), (10, 6), (8, 10), (7, 11), (14, 9), (12, 9), (11, 10), (11, 12), (10, 12), (7, 10), (10, 13), (13, 10), (13, 9), (8, 11), (12, 10), (6, 8), (8, 12), (10, 10), (9, 5), (12, 8)]
filtered = [(7, 10)]
Will move (7, 10)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 11), (10, 6), (7, 11), (14, 9), (12, 9), (11, 10), (9, 5), (13, 10), (10, 12), (8, 11), (10, 13), (12, 10), (11, 12), (6, 8), (8, 12), (10, 10), (13, 9), (12, 8)]
filtered = [(8, 11)]
Will move (8, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 11), (10, 6), (7, 11), (14, 9), (12, 9), (11, 10), (11, 12), (10, 12), (10, 13), (12, 10), (13, 10), (6, 8), (8, 12), (10, 10), (9, 5), (13, 9), (12, 8)]
filtered = [(7, 11)]
Will move (7, 11)
0 systems were filtered as they were not valid
possible bots to move = [(10, 11), (11, 11), (10, 6), (14, 9), (12, 9), (11, 10), (11, 12), (10, 12), (13, 10), (13, 9), (10, 13), (12, 10), (6, 8), (8, 12), (10, 10), (9, 5), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((10, 11), (10, 11)), ((11, 11), (11, 11)), ((10, 6), (10, 6)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((11, 12), (11, 12)), ((10, 12), (10, 12)), ((13, 10), (13, 10)), ((13, 9), (13, 9)), ((10, 13), (10, 13)), ((12, 10), (12, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((9, 5), (9, 5)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
Top solution detected - avalanching down
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 10): {'options': [(8, 11)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 12)], 'scores': [-1]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(8, 10)], 'scores': [1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (8, 11): {'options': [(7, 11)], 'scores': [-1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (5, 10): {'options': [(6, 10)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 10): {'options': [(8, 11)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 12)], 'scores': [-1]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(8, 10)], 'scores': [1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (8, 11): {'options': [(7, 11)], 'scores': [-1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (5, 10): {'options': [(6, 10)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 10) - {'options': [(8, 11)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 12)], 'scores': [-1]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10)], 'scores': [1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(8, 11) - {'options': [(7, 11)], 'scores': [-1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(13, 10) - {'options': [(13, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(5, 10) - {'options': [(6, 10)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 8.65 Ms for simplify_system to complete
-------------------------- running turn 98 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       X   X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -   -         
12               X   X   X   X   X   -             
13               -   -   X   X   -                 
14                       X   -                     
15                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       X   X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -   -         
12               X   X   X   X   X   -             
13               -   -   X   X   -                 
14                       X   -                     
15                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 7
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (5, 8), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(12, 12), (10, 14), (9, 15), (13, 11), (5, 11), (14, 10), (7, 13), (11, 13), (14, 8)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (5, 8), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 421

-------------------------------------
TARGET system:
48 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   X   7                     
 6               7   X   X   X   7                 
 7           7   X   X   X   X   X   7             
 8       7   X   X   X   X   X   X   X   7         
 9   7   X   X   X   X   X   X   X   X   X   7     
10       7   X   X   X   X   X   X   X   7         
11           7   X   X   X   X   X   7             
12               7   X   X   X   7                 
13                   7   X   7                     
14                       7                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       ?   0   0   0   0   0   0   0   ?         
11           -   0   0   0   0   0   -             
12               ?   0   0   0   ?                 
13                   -   0   ?                     
14                       ?                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7                 
13                   7   8   7                     
14                       7                         
15                                                 

The system now has a total of 35361154004931449890136718750000 optins
The initial system score was 421
The maximum obtainable for the system is 421
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 12), (14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 41
current_bots_in_optional = [(7, 12), (14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 12), (14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 35361154004931449890136718750000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 10) - {'options': [(13, 9), (12, 10), (13, 10)], 'scores': [1, 1, 0]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  8.450000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 10), (13, 10)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 10) - {'options': [(13, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 8.45 Ms for simplify_system to complete
-------------------------- running turn 99 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       X   X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -   -         
12               X   X   X   X   X   -             
13               -   -   X   X   -                 
14                       X   -                     
15                       -                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   X   -                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -             
 8       -   X   X   X   X   X   X   X   -   -     
 9   -   X   X   X   X   X   X   X   X   X   X     
10       X   X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -   -         
12               X   X   X   X   X   -             
13               -   -   X   X   -                 
14                       X   -                     
15                       -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 7
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (5, 8), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(12, 12), (10, 14), (9, 15), (13, 11), (5, 11), (14, 10), (7, 13), (11, 13), (14, 8)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (5, 8), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 421

-------------------------------------
TARGET system:
48 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   X   7                     
 6               7   X   X   X   7                 
 7           7   X   X   X   X   X   7             
 8       7   X   X   X   X   X   X   X   7         
 9   7   X   X   X   X   X   X   X   X   X   7     
10       7   X   X   X   X   X   X   X   7         
11           7   X   X   X   X   X   7             
12               7   X   X   X   7                 
13                   7   X   7                     
14                       7                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
48 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   -                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       ?   0   0   0   0   0   0   0   ?         
11           -   0   0   0   0   0   -             
12               ?   0   0   0   ?                 
13                   -   0   ?                     
14                       ?                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8   7             
12               7   8   9   8   7                 
13                   7   8   7                     
14                       7                         
15                                                 

The system now has a total of 35361154004931449890136718750000 optins
The initial system score was 421
The maximum obtainable for the system is 421
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 12), (14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 41
current_bots_in_optional = [(7, 12), (14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 12), (14, 9), (11, 12), (10, 13), (13, 10), (9, 14), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
No bots need to leave optional
41
unoccupied_occupied
[]
And no bots need to move into occupied, will try to freeze

System result = ...
The system has a total of 35361154004931449890136718750000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12), (11, 11), (11, 12)], 'scores': [1, 1, 0]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12), (10, 13)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(13, 10) - {'options': [(13, 9), (12, 10), (13, 10)], 'scores': [1, 1, 0]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  8.503000ms for simplify_system to complete
possible bots to move = [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (11, 12), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 13), (10, 9), (9, 7), (13, 10), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
filtered = []
No bots that need to move could be found
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((11, 12), (11, 12)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 13), (10, 13)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((13, 10), (13, 10)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (11, 12): {'options': [(11, 12)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 13): {'options': [(10, 13)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (13, 10): {'options': [(13, 10)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(11, 12) - {'options': [(11, 12)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 13) - {'options': [(10, 13)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(13, 10) - {'options': [(13, 10)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 8.50 Ms for simplify_system to complete
[5, 49] - seed: 249441369-0
