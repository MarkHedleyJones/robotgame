Game seed: 21425875
Match seed: 21425875-0
--------------------------- running turn 0 ---------------------------
--------------------------- running turn 1 ---------------------------
--------------------------- running turn 2 ---------------------------
--------------------------- running turn 3 ---------------------------
--------------------------- running turn 4 ---------------------------
--------------------------- running turn 5 ---------------------------
--------------------------- running turn 6 ---------------------------
--------------------------- running turn 7 ---------------------------
--------------------------- running turn 8 ---------------------------
--------------------------- running turn 9 ---------------------------
-------------------------- running turn 10 ---------------------------
-------------------------- running turn 11 ---------------------------
-------------------------- running turn 12 ---------------------------
-------------------------- running turn 13 ---------------------------
-------------------------- running turn 14 ---------------------------
-------------------------- running turn 15 ---------------------------
-------------------------- running turn 16 ---------------------------
-------------------------- running turn 17 ---------------------------
-------------------------- running turn 18 ---------------------------
-------------------------- running turn 19 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6               X                 
 7       X   -   -                 
 8   -   X   -   X   -             
 9       -   X   X   X   -   X     
10           -   X   -             
11               -                 
12               X                 
13                                 

Awarded move for (9, 12)  to (9, 11)
Awarded move for (12, 9)  to (11, 9)
Awarded move for (9, 6)  to (9, 7)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
7 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6                                 
 7       X   -                     
 8   -   X   -   X   -             
 9       -   X   X   X             
10           -   X   -             
11                                 
12                                 
13                                 

[(9, 10), (9, 8), (9, 9), (7, 7), (8, 9), (10, 9), (7, 8)]
[(8, 9), (7, 8), (9, 8), (9, 9), (9, 10), (10, 9)]

-------------------------------------
TARGET system:
6 participants
()
     6   7   8   9  10  11  12  13  
 5                                 
 6                                 
 7                                 
 8           1   X   1             
 9       1   X   X   X             
10           1   X   1             
11                                 
12                                 
13                                 

Removing unavailable_bots from the problem
The system of unavailable_bots is
(7, 7) - {'options': [(7, 8), (8, 7)], 'scores': [1, 1]}

This splits into 1 smaller systems
The optimum outcome here is
[((7, 7), (7, 8))]
The system was reduced

-------------------------------------
=> SYSTEM SPLIT REDUCTION
BOT Positions:
6 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6                                 
 7                                 
 8   -   X   -   X   -             
 9       -   X   X   X             
10           -   X   -             
11                                 
12                                 
13                                 

Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
6 participants
     6   7   8   9  10  11  12  13  
 5                                 
 6                                 
 7                                 
 8       X   -   0   -             
 9       -   0   0   0             
10           -   0   -             
11                                 
12                                 
13                                 

(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9)], 'scores': [1, 1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 66
Testing a bot freeze situation
Did this generate a solution?
No, it didnt
It took  2.349000ms for simplify_system to complete
Picking best move - looking for score of 105
It took  11.480000ms for pick_best to complete
It took a total of 2.35 Ms for simplify_system to complete
It took a total of 11.48 Ms for pick_best to complete
-------------------------- running turn 20 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  12  
 6                             
 7           -   X   -         
 8   -   X   X   X   -   -     
 9       -   X   X   X   X     
10           -   X   -         
11           -   X             
12                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  12  
 6                             
 7           -   X   -         
 8   -   X   X   X   -   -     
 9       -   X   X   X   X     
10           -   X   -         
11           -   X             
12                             

[(8, 9), (9, 8), (11, 9), (9, 9), (9, 10), (8, 8), (9, 11), (7, 8), (10, 9), (9, 7)]
[(9, 10), (9, 8), (11, 9), (9, 9), (8, 9), (8, 8), (9, 11), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  12  
 6                             
 7               5             
 8           5   X   5         
 9       5   X   X   X   5     
10           5   X   5         
11               5             
12                             

Removing move (11, 9) -> (11, 8)  because it moves away from the ideal
Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (7, 8) -> (7, 8)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  12  
 6                             
 7               ?             
 8       X   ?   0   -         
 9       -   0   0   0   ?     
10           -   0   -         
11               ?             
12                             

(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 106
Testing a bot freeze situation
Did this generate a solution?
No, it didnt
It took  2.083000ms for simplify_system to complete
Picking best move - looking for score of 106
It took  370.565000ms for pick_best to complete
It took a total of 2.08 Ms for simplify_system to complete
It took a total of 370.56 Ms for pick_best to complete
-------------------------- running turn 21 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8       -   X   X   X   - 
 9   -   X   X   X   X   - 
10           X   X         
11           -   -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8       -   X   X   X   - 
 9   -   X   X   X   X   - 
10           X   X         
11           -   -         

[(10, 8), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (9, 7), (10, 9), (7, 9)]
[(10, 8), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (7, 9), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 6                         
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X         
11               5         

Removing move (10, 8) -> (11, 8)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal
Removing move (9, 7) -> (9, 6)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           ?   0   ?     
 9       ?   0   0   0   - 
10           ?   0         
11               -         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11)], 'scores': [1, 0, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 106
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 106
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 106
The frozen system now has a score of 106
It took  1.961000ms for simplify_system to complete
Picking best move - looking for score of 106
It took  388.815000ms for pick_best to complete
It took a total of 1.96 Ms for simplify_system to complete
It took a total of 388.81 Ms for pick_best to complete
-------------------------- running turn 22 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7           -   X   -     
 8       -   X   X   -     
 9   -   X   X   X   X   - 
10       -   X   X   -     
11           -   X   -     
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7           -   X   -     
 8       -   X   X   -     
 9   -   X   X   X   X   - 
10       -   X   X   -     
11           -   X   -     
12                         

[(8, 9), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (7, 9), (10, 9), (9, 7)]
[(9, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 6                         
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         

Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           ?   0   -     
 9       ?   0   0   0   - 
10           ?   0   -     
11               ?         
12                         

(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 106
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 106
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 106
The frozen system now has a score of 106
It took  2.114000ms for simplify_system to complete
Picking best move - looking for score of 106
It took  452.223000ms for pick_best to complete
It took a total of 2.11 Ms for simplify_system to complete
It took a total of 452.22 Ms for pick_best to complete
-------------------------- running turn 23 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7           -   X   -     
 8       -   X   X   -     
 9   -   X   X   X   X   - 
10       -   X   X   -     
11           -   X   -     
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7           -   X   -     
 8       -   X   X   -     
 9   -   X   X   X   X   - 
10       -   X   X   -     
11           -   X   -     
12                         

[(9, 10), (9, 8), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
[(8, 9), (8, 8), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (7, 9), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 6                         
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         

Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           ?   0   -     
 9       ?   0   0   0   - 
10           ?   0   -     
11               ?         
12                         

(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 106
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 106
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 106
The frozen system now has a score of 106
It took  2.099000ms for simplify_system to complete
Picking best move - looking for score of 106
It took  441.657000ms for pick_best to complete
It took a total of 2.10 Ms for simplify_system to complete
It took a total of 441.66 Ms for pick_best to complete
-------------------------- running turn 24 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6               -         
 7               X   -     
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10           -   X   X   - 
11           -   X         
12                         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6               -         
 7               X   -     
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10           -   X   X   - 
11           -   X         
12                         

[(10, 8), (10, 10), (9, 8), (9, 9), (9, 10), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (9, 10), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 6                         
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         

Removing move (10, 8) -> (11, 8)  because it moves away from the ideal
Removing move (10, 10) -> (11, 10)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal
Removing move (9, 7) -> (9, 6)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           -   0   ?     
11               ?         
12                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 106
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 106
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 106
The frozen system now has a score of 106
It took  2.066000ms for simplify_system to complete
Picking best move - looking for score of 106
It took  471.799000ms for pick_best to complete
It took a total of 2.07 Ms for simplify_system to complete
It took a total of 471.80 Ms for pick_best to complete
-------------------------- running turn 25 ---------------------------


=> INITIAL
BOT Positions:
11 participants
     6   7   8   9  10  11  
 6                         
 7           -   X   -     
 8       -   X   X   -     
 9   -   X   X   X   X   - 
10       -   X   X   -     
11           -   X   -     
12               -         
13               X         
14                         

Awarded move for (9, 13)  to (9, 12)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7           -   X   -     
 8       -   X   X   -     
 9   -   X   X   X   X   - 
10       -   X   X   -     
11           -   X   -     
12                         
13                         
14                         

[(9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]
[(8, 8), (9, 8), (9, 9), (8, 10), (9, 10), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 6                         
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         
13                         
14                         

Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           ?   0   -     
 9       ?   0   0   0   - 
10           ?   0   -     
11               ?         
12                         
13                         
14                         

(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 106
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 114
Freezing the system as-is will change it by 1
The maximum obtainable for the system is 115
The frozen system now has a score of 115
It took  2.321000ms for simplify_system to complete
Picking best move - looking for score of 115
It took  461.770000ms for pick_best to complete
It took a total of 2.32 Ms for simplify_system to complete
It took a total of 461.77 Ms for pick_best to complete
-------------------------- running turn 26 ---------------------------


=> INITIAL
BOT Positions:
12 participants
     4   5   6   7   8   9  10  11  
 7                       -         
 8               -   -   X   X   - 
 9       X   -   X   X   X   X   - 
10               -   X   X   X   - 
11                   -   X   -     
12                       X         
13                       -         

Awarded move for (5, 9)  to (6, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
11 participants
     4   5   6   7   8   9  10  11  
 7                       -         
 8               -   -   X   X   - 
 9               X   X   X   X   - 
10               -   X   X   X   - 
11                   -   X   -     
12                       X         
13                       -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (9, 11), (10, 9), (8, 9), (9, 12), (7, 9)]
[(9, 10), (10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (9, 11), (9, 12), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
11 participants
()
     4   5   6   7   8   9  10  11  
 7                       6         
 8                   6   X   6     
 9               6   X   X   X   6 
10                   6   X   6     
11                       6         
12                                 
13                                 

Removing move (10, 8) -> (11, 8)  because it moves away from the ideal
Removing move (10, 10) -> (11, 10)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (9, 11) -> (9, 12)  because it moves away from the ideal
Removing move (9, 12) -> (9, 12)  because it moves away from the ideal
Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 9) -> (7, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
11 participants
     4   5   6   7   8   9  10  11  
 7                       -         
 8                   -   0   ?     
 9               ?   0   0   0   - 
10                   ?   0   ?     
11                       ?         
12                       X         
13                                 

(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 116
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 123
Freezing the system as-is will change it by 3
The maximum obtainable for the system is 125
The frozen system now has a score of 126
It took  2.486000ms for simplify_system to complete
Picking best move - looking for score of 125
It took  286.948000ms for pick_best to complete
It took a total of 2.49 Ms for simplify_system to complete
It took a total of 286.95 Ms for pick_best to complete
-------------------------- running turn 27 ---------------------------


=> INITIAL
BOT Positions:
12 participants
     5   6   7   8   9  10  11  
 6                   -         
 7               -   X   -     
 8           -   X   X   X   - 
 9   -   X   X   X   X   X   - 
10           -   X   X   -     
11               -   X   -     
12                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
12 participants
     5   6   7   8   9  10  11  
 6                   -         
 7               -   X   -     
 8           -   X   X   X   - 
 9   -   X   X   X   X   X   - 
10           -   X   X   -     
11               -   X   -     
12                             

[(10, 8), (6, 9), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
[(9, 10), (6, 9), (10, 8), (9, 8), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
12 participants
()
     5   6   7   8   9  10  11  
 6                             
 7                   7         
 8               7   X   7     
 9           7   X   X   X   7 
10               7   X   7     
11                   7         
12                             

Removing move (6, 9) -> (6, 9)  because it moves away from the ideal
Removing move (6, 9) -> (5, 9)  because it moves away from the ideal
Removing move (10, 8) -> (11, 8)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal
Removing move (9, 7) -> (9, 6)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal
Removing move (7, 9) -> (7, 8)  because it moves away from the ideal
Removing move (7, 9) -> (7, 10)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
12 participants
     5   6   7   8   9  10  11  
 6                             
 7                   ?         
 8               ?   0   ?     
 9       X   ?   0   0   0   - 
10               ?   0   -     
11                   ?         
12                             

(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 10)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 8), (8, 10)], 'scores': [1, -1, -1]}
(8, 8) - {'options': [(9, 8), (8, 8)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
All remaining bots are frozen
The outcome_max_score = 126
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 125
Freezing the system as-is will change it by 1
The maximum obtainable for the system is 126
The frozen system now has a score of 126
It took  2.422000ms for simplify_system to complete
Picking best move - looking for score of 126
It took  161.799000ms for pick_best to complete
It took a total of 2.42 Ms for simplify_system to complete
It took a total of 161.80 Ms for pick_best to complete
-------------------------- running turn 28 ---------------------------


=> INITIAL
BOT Positions:
12 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X     
10       -   X   X   -   -     
11           -   X   -         
12                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
12 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X     
10       -   X   X   -   -     
11           -   X   -         
12                             

[(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]
[(10, 8), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
12 participants
()
     6   7   8   9  10  11  12  
 6                             
 7               7             
 8           7   X   7         
 9       7   X   X   X   7     
10           7   X   7         
11               7             
12                             

Removing move (10, 8) -> (11, 8)  because it moves away from the ideal
Removing move (10, 8) -> (10, 7)  because it moves away from the ideal
Removing move (11, 9) -> (11, 8)  because it moves away from the ideal
Removing move (11, 9) -> (11, 10)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (8, 8) -> (7, 8)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal
Removing move (9, 7) -> (9, 6)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
12 participants
     6   7   8   9  10  11  12  
 6                             
 7               ?             
 8           ?   0   ?         
 9       ?   0   0   0   ?     
10           ?   0   -         
11               ?             
12                             

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 126
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 126
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 126
The frozen system now has a score of 126
It took  2.493000ms for simplify_system to complete
Picking best move - looking for score of 126
It took  3689.889000ms for pick_best to complete
It took a total of 2.49 Ms for simplify_system to complete
It took a total of 3689.89 Ms for pick_best to complete
-------------------------- running turn 29 ---------------------------


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7       X   -   X   -     
 8       -   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         
13               X         
14                         

Awarded move for (9, 13)  to (9, 12)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
13 participants
     6   7   8   9  10  11  
 6               -         
 7       X   -   X   -     
 8       -   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12                         
13                         
14                         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (7, 7), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
[(10, 8), (10, 10), (8, 8), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
12 participants
()
     6   7   8   9  10  11  
 6                         
 7               7         
 8           7   X   7     
 9       7   X   X   X   7 
10           7   X   7     
11               7         
12                         
13                         
14                         

Removing unavailable_bots from the problem
The system of unavailable_bots is
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}

This splits into 1 smaller systems
The optimum outcome here is
[((7, 7), (7, 8))]
The system was reduced

-------------------------------------
=> SYSTEM SPLIT REDUCTION
BOT Positions:
12 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8           X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12                         
13                         
14                         

Removing move (10, 8) -> (11, 8)  because it moves away from the ideal
Removing move (10, 10) -> (11, 10)  because it moves away from the ideal
Removing move (8, 8) -> (8, 7)  because it moves away from the ideal
Removing move (8, 10) -> (8, 11)  because it moves away from the ideal
Removing move (8, 10) -> (7, 10)  because it moves away from the ideal
Removing move (9, 11) -> (8, 11)  because it moves away from the ideal
Removing move (9, 11) -> (10, 11)  because it moves away from the ideal
Removing move (9, 7) -> (10, 7)  because it moves away from the ideal
Removing move (9, 7) -> (9, 6)  because it moves away from the ideal
Removing move (7, 9) -> (6, 9)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
12 participants
     6   7   8   9  10  11  
 6                         
 7               ?         
 8           ?   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         
13                         
14                         

(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
All remaining bots are frozen
The outcome_max_score = 126
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 142
Freezing the system as-is will change it by 2
The maximum obtainable for the system is 144
The frozen system now has a score of 144
It took  2.993000ms for simplify_system to complete
Picking best move - looking for score of 144
It took  4803.609000ms for pick_best to complete
It took a total of 2.99 Ms for simplify_system to complete
It took a total of 4803.61 Ms for pick_best to complete
-------------------------- running turn 30 ---------------------------


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.908000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 31 ---------------------------
It took  100146.813000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.049000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 32 ---------------------------
It took  187.383000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.847000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 33 ---------------------------
It took  59.894000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.876000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 34 ---------------------------
It took  60.805000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.886000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 35 ---------------------------
It took  61.066000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.858000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 36 ---------------------------
It took  60.291000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.932000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 37 ---------------------------
It took  60.491000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.874000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 38 ---------------------------
It took  59.762000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.862000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 39 ---------------------------
It took  61.063000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.058000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 40 ---------------------------
It took  60.681000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (7, 9), (7, 8), (9, 12), (9, 7)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (9, 7), (7, 8), (10, 9), (7, 9)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.875000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 41 ---------------------------
It took  61.007000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.892000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 42 ---------------------------
It took  59.476000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.961000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 43 ---------------------------
It took  60.452000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.839000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 44 ---------------------------
It took  59.502000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.994000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 45 ---------------------------
It took  60.444000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.921000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 46 ---------------------------
It took  60.421000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.866000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 47 ---------------------------
It took  60.684000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.887000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 48 ---------------------------
It took  60.751000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.946000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 49 ---------------------------
It took  59.529000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.076000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 50 ---------------------------
It took  60.827000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.862000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (2, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 10)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 51 ---------------------------
It took  60.944000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.874000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 52 ---------------------------
It took  59.408000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.857000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 53 ---------------------------
It took  61.210000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.861000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 54 ---------------------------
It took  60.924000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.874000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 55 ---------------------------
It took  61.025000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.864000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 56 ---------------------------
It took  61.222000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  4.420000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 57 ---------------------------
It took  59.380000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.853000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 58 ---------------------------
It took  59.378000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.918000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 59 ---------------------------
It took  61.002000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.873000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 60 ---------------------------
It took  60.914000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.839000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 15)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 5)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 61 ---------------------------
It took  60.120000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.838000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 62 ---------------------------
It took  60.554000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.842000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 63 ---------------------------
It took  60.301000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.126000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 64 ---------------------------
It took  60.386000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.828000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 65 ---------------------------
It took  60.726000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.847000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 66 ---------------------------
It took  60.786000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.985000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 67 ---------------------------
It took  61.365000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.868000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 68 ---------------------------
It took  60.641000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.848000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 69 ---------------------------
It took  59.294000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.845000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 70 ---------------------------
It took  60.943000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.085000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (1, 11)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (5, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 71 ---------------------------
It took  61.056000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.855000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 72 ---------------------------
It took  59.579000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.849000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 73 ---------------------------
It took  60.410000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.103000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 74 ---------------------------
It took  59.619000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.915000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 75 ---------------------------
It took  60.755000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.834000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 76 ---------------------------
It took  61.016000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.917000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 77 ---------------------------
It took  60.839000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.905000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 78 ---------------------------
It took  60.139000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.014000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 79 ---------------------------
It took  61.083000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.872000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 80 ---------------------------
It took  59.738000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (9, 10), (10, 10), (9, 8), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (9, 11), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.097000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (13, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (10, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 17)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 13)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 81 ---------------------------
It took  60.647000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.855000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 82 ---------------------------
It took  60.530000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.838000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 83 ---------------------------
It took  59.960000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.865000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 84 ---------------------------
It took  60.631000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.871000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 85 ---------------------------
It took  59.553000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.847000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 86 ---------------------------
It took  60.569000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.859000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 87 ---------------------------
It took  60.229000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.837000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 88 ---------------------------
It took  60.091000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.873000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 89 ---------------------------
It took  60.668000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.841000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 90 ---------------------------
It took  61.137000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  3.108000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (12, 16)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (8, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (16, 12)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (14, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 91 ---------------------------
It took  59.552000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.828000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 92 ---------------------------
It took  60.763000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.876000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 93 ---------------------------
It took  60.642000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.856000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 195, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 94 ---------------------------
It took  60.254000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.872000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 95 ---------------------------
It took  59.377000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.858000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 96 ---------------------------
It took  60.520000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.880000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 97 ---------------------------
It took  60.541000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  4.296000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 98 ---------------------------
It took  59.679000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.840000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
-------------------------- running turn 99 ---------------------------
It took  59.557000ms for start to complete


=> INITIAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   X   -     
 8   -   X   X   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               X         
13               -         

[(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (8, 8), (10, 9), (9, 11), (8, 9), (9, 7), (7, 8), (9, 12), (7, 9)]
[(10, 8), (10, 10), (9, 8), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (7, 8), (10, 9), (9, 7)]

-------------------------------------
TARGET system:
14 participants
()
     6   7   8   9  10  11  
 6               1         
 7           1   X   1     
 8       1   X   X   X   1 
 9   1   X   X   X   X   X 
10       1   X   X   X   1 
11           1   X   1     
12               1         
13                         

Removing move (9, 12) -> (9, 13)  because it moves away from the ideal
Removing move (7, 8) -> (6, 8)  because it moves away from the ideal

-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
14 participants
     6   7   8   9  10  11  
 6               -         
 7           -   0   -     
 8       ?   0   0   0   - 
 9   -   0   0   0   0   = 
10       -   0   0   0   - 
11           -   0   -     
12               ?         
13                         

(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
All remaining bots are frozen
The outcome_max_score = 145
Testing a bot freeze situation
Did this generate a solution?
Yes it did
The initial system score was 144
Freezing the system as-is will change it by 0
The maximum obtainable for the system is 145
The frozen system now has a score of 144
It took  2.864000ms for simplify_system to complete
Picking best move - looking for score of 145
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1082, in act
  File "<string>", line 1037, in decide_actions
  File "<string>", line 942, in choose_moves
  File "<string>", line 196, in pick_best
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (6, 2)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 3)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (11, 1)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (15, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (3, 4)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (7, 8)
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/rgkit/game.py", line 65, in _get_action
    action = self._robot.act(game_info)
  File "<string>", line 1084, in act
KeyError: (9, 12)
