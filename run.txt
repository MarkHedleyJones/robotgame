Game seed: 798935494
Match seed: 798935494-0
--------------------------- running turn 0 ---------------------------
--------------------------- running turn 1 ---------------------------
--------------------------- running turn 2 ---------------------------
--------------------------- running turn 3 ---------------------------
--------------------------- running turn 4 ---------------------------
--------------------------- running turn 5 ---------------------------
--------------------------- running turn 6 ---------------------------
--------------------------- running turn 7 ---------------------------
--------------------------- running turn 8 ---------------------------
--------------------------- running turn 9 ---------------------------
-------------------------- running turn 10 ---------------------------
-------------------------- running turn 11 ---------------------------
-------------------------- running turn 12 ---------------------------
-------------------------- running turn 13 ---------------------------
-------------------------- running turn 14 ---------------------------
-------------------------- running turn 15 ---------------------------
-------------------------- running turn 16 ---------------------------
-------------------------- running turn 17 ---------------------------
-------------------------- running turn 18 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  
 7                       -         
 8                   -   X   -     
 9       X   X   -   X   X   X   - 
10       -   -   -   -   X   -     
11               X   X   -         
12                   -   X         
13                                 

Awarded move for (6, 9)  to (7, 9)
simplification made, repeating
Awarded move for (5, 9)  to (6, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
8 participants
     4   5   6   7   8   9  10  11  
 7                       -         
 8                   -   X   -     
 9                   X   X   X   - 
10               -   -   X   -     
11               X   X   -         
12                   -   X         
13                                 

determine_ideal_outcome called with [(9, 10), (9, 8), (9, 9), (8, 9), (9, 12), (7, 11), (8, 11), (10, 9)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 2
optional - [(10, 8), (11, 9), (10, 10), (8, 8), (8, 10), (9, 11), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (9, 8), (9, 9), (8, 9), (9, 12), (8, 11), (10, 9)]
levels - {8: [(8, 12), (7, 11)], 9: [(9, 12), (8, 11)], 10: [(10, 8), (11, 9), (10, 10), (8, 8), (8, 10), (9, 11), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 76

-------------------------------------
TARGET system:
7 participants
()
     4   5   6   7   8   9  10  11  
 7                       2         
 8                   2   X   2     
 9                   X   X   X   2 
10                   2   X   2     
11                       2         
12                                 
13                                 

This is system split, groups are...
0
  [(7, 11), [(8, 11)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
7 participants
     4   5   6   7   8   9  10  11  
 7                       -         
 8                   -   0   -     
 9                   0   0   0   - 
10                   -   0   -     
11                   X   -         
12                       X         
13                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 7                      10         
 8                  10  11  10     
 9                  11  12  11  10 
10                  10  11  10     
11                   9  10         
12                       9         
13                                 

The system now has a total of 900 options
The initial system score was 99
The maximum obtainable for the system is 104
The score gain were looking for is 5
The system_score_gain_required = 2

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(9, 12), (8, 11)]
bots_outside_system_moving_to_optional  = [(9, 12), (8, 11)]
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 5
current_bots_in_optional = [(9, 12), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 900 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (10, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8)], 'scores': [1, 0, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}


It took  1.797000ms for simplify_system to complete
Will try freezing the system
Move ((9, 10), (9, 10))
Move ((9, 8), (9, 8))
Move ((9, 9), (9, 9))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Works... [((9, 10), (9, 10)), ((9, 8), (9, 8)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((10, 9), (10, 9))]
Can freeze, freezing system
making moves [((9, 10), (9, 10)), ((9, 8), (9, 8)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((10, 9), (10, 9))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (10, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8)], 'scores': [1, 0, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}]
checking possibility for score of 5
this possibility has a score of 5
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (7, 11): {'options': [(8, 11)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(7, 11) - {'options': [(8, 11)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
It took a total of 1.80 Ms for simplify_system to complete
-------------------------- running turn 19 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     5   6   7   8   9  10  11  
 7                   -         
 8           -   -   X   -     
 9   -   X   X   X   X   X   - 
10           -   X   X   -     
11           -   X   X   -     
12                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     5   6   7   8   9  10  11  
 7                   -         
 8           -   -   X   -     
 9   -   X   X   X   X   X   - 
10           -   X   X   -     
11           -   X   X   -     
12                             

determine_ideal_outcome called with [(8, 9), (6, 9), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 11), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
occupied - [(9, 9), (9, 10), (9, 8), (8, 9), (10, 9)]
available_bots - [(8, 9), (6, 9), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 11), (10, 9), (7, 9)]
levels - {8: [(5, 9), (7, 11)], 9: [(6, 9), (7, 10), (10, 11), (7, 8), (8, 11)], 10: [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)], 11: [(9, 10), (9, 8), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     5   6   7   8   9  10  11  
 7                   5         
 8               5   X   5     
 9           5   X   X   X   5 
10               5   X   5     
11                   5         
12                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     5   6   7   8   9  10  11  
 7                   -         
 8               -   0   -     
 9       X   ?   0   0   0   - 
10               ?   0   -     
11               X   ?         
12                             

Cell Scores:
     5   6   7   8   9  10  11  
 7                  10         
 8              10  11  10     
 9       9  10  11  12  11  10 
10              10  11  10     
11               9  10         
12                             

The system now has a total of 9600 options
The initial system score was 104
The maximum obtainable for the system is 106
The score gain were looking for is 2
The system_score_gain_required = 2

bots_in_optional = [(8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = [(7, 9)]
bots_outside_system = [(6, 9), (8, 11)]
bots_outside_system_moving_to_optional  = [(6, 9), (8, 11)]
bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(8, 9)]
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(8, 10), (9, 11), (6, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(8, 10), (9, 11)]
current_bots_in_occupied = [(8, 9), (9, 8), (9, 9), (9, 10), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(8, 9), (9, 8), (9, 10), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(8, 9), (8, 9), (9, 8), (9, 9), (9, 10), (10, 9), (7, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(7, 9)]
So lets move one of [(8, 9), (9, 8), (9, 10), (10, 9)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 9600 options
(8, 9) - {'options': [(9, 9), (8, 8), (8, 10)], 'scores': [1, -1, -1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 10)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}


It took  1.598000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 9), (10, 9))
Works... [((10, 9), (10, 9))]
Can freeze, freezing system
making moves [((10, 9), (10, 9))]
system =
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 8)], 'scores': [-1]}
(9, 10) - {'options': [(10, 10)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 9) - {'options': [(10, 9), (11, 9)], 'scores': [0, -1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
done
system is now =
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 8)], 'scores': [-1]}
(9, 10) - {'options': [(10, 10)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(8, 9): {'options': [(9, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 8)], 'scores': [-1]}, (9, 10): {'options': [(10, 10)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (8, 11): {'options': [(9, 11)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(8, 9): {'options': [(9, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 8)], 'scores': [-1]}, (9, 10): {'options': [(10, 10)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (8, 11): {'options': [(9, 11)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 8)], 'scores': [-1]}
(9, 10) - {'options': [(10, 10)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(8, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
It took a total of 1.60 Ms for simplify_system to complete
-------------------------- running turn 20 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.467000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.47 Ms for simplify_system to complete
-------------------------- running turn 21 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.473000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.47 Ms for simplify_system to complete
-------------------------- running turn 22 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.467000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.47 Ms for simplify_system to complete
-------------------------- running turn 23 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.462000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.46 Ms for simplify_system to complete
-------------------------- running turn 24 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.462000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.46 Ms for simplify_system to complete
-------------------------- running turn 25 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.461000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.46 Ms for simplify_system to complete
-------------------------- running turn 26 ---------------------------


=> INITIAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   X   X   - 
 9   -   X   X   X   X   - 
10       -   X   X   X   - 
11           -   X   -     
12               -         

determine_ideal_outcome called with [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (6, 9), (8, 11)], 10: [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     6   7   8   9  10  11  
 7               5         
 8           5   X   5     
 9       5   X   X   X   5 
10           5   X   5     
11               5         
12                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     6   7   8   9  10  11  
 7               -         
 8           -   0   ?     
 9       ?   0   0   0   - 
10           ?   0   ?     
11               ?         
12                         

Cell Scores:
     6   7   8   9  10  11  
 7              10         
 8          10  11  10     
 9      10  11  12  11  10 
10          10  11  10     
11              10         
12                         

The system now has a total of 270000 options
The initial system score was 106
The maximum obtainable for the system is 106
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 8), (9, 10), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (9, 9), (9, 10), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 270000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  1.464000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 1.46 Ms for simplify_system to complete
-------------------------- running turn 27 ---------------------------


=> INITIAL
BOT Positions:
13 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5                       X   -     
 6                   -   X         
 7                       -         
 8               -   -   X   X   - 
 9       X   -   X   X   X   X   - 
10               -   X   X   X   - 
11                   -   X   -     
12                       -         

Awarded move for (5, 9)  to (6, 9)
Awarded move for (9, 6)  to (9, 7)
simplification made, repeating
Awarded move for (9, 5)  to (9, 6)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5                                 
 6                                 
 7                                 
 8               -   -   X   X   - 
 9               X   X   X   X   - 
10               -   X   X   X   - 
11                   -   X   -     
12                       -         

determine_ideal_outcome called with [(9, 10), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (9, 11), (10, 9), (7, 9)]
outcome = 
num_optional - 5
optional - [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9)]
occupied - [(9, 9), (9, 8), (9, 10), (8, 9), (10, 9)]
available_bots - [(9, 10), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (9, 11), (10, 9), (7, 9)]
levels - {9: [(11, 10), (10, 11), (11, 8), (9, 12), (7, 10), (7, 8), (8, 11)], 10: [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9)], 11: [(9, 8), (9, 10), (8, 9), (10, 9)], 12: [(9, 9)]}
max_score - 106

-------------------------------------
TARGET system:
10 participants
()
     4   5   6   7   8   9  10  11  
 4                                 
 5                                 
 6                                 
 7                                 
 8                   5   X   5     
 9               5   X   X   X   5 
10                   5   X   5     
11                       5         
12                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
10 participants
     4   5   6   7   8   9  10  11  
 4                                 
 5                                 
 6                                 
 7                                 
 8                   -   0   ?     
 9               ?   0   0   0   - 
10                   ?   0   ?     
11                       ?         
12                                 

Cell Scores:
     4   5   6   7   8   9  10  11  
 4                                 
 5                                 
 6                                 
 7                                 
 8                  10  11  10     
 9              10  11  12  11  10 
10                  10  11  10     
11                      10         
12                                 

The system now has a total of 216000 options
The initial system score was 131
The maximum obtainable for the system is 134
The score gain were looking for is 3
The system_score_gain_required = 0

bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 5
current_bots_in_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 8), (10, 10), (8, 10), (9, 11), (7, 9)]
current_bots_in_occupied = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(9, 10), (9, 8), (8, 9), (10, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (9, 8), (9, 9), (8, 9), (10, 9)]

Optional squares exist

System result = ...
The system has a total of 216000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8)], 'scores': [1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}


It took  2.295000ms for simplify_system to complete
Will try freezing the system
Move ((9, 10), (9, 10))
Move ((10, 8), (10, 8))
Move ((9, 8), (9, 8))
Move ((10, 10), (10, 10))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((8, 9), (8, 9))
Move ((9, 11), (9, 11))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((9, 10), (9, 10)), ((10, 8), (10, 8)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((9, 10), (9, 10)), ((10, 8), (10, 8)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8)], 'scores': [1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11)], 'scores': [1, 0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9)], 'scores': [1, 0]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 2.29 Ms for simplify_system to complete
-------------------------- running turn 28 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     5   6   7   8   9  10  11  
 5                             
 6               -   X         
 7               -   X   -     
 8           -   -   X   X   - 
 9   -   X   X   X   X   X   - 
10           -   X   X   X   - 
11               -   X   -     
12                   -   X     
13                   X         
14                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     5   6   7   8   9  10  11  
 5                             
 6               -   X         
 7               -   X   -     
 8           -   -   X   X   - 
 9   -   X   X   X   X   X   - 
10           -   X   X   X   - 
11               -   X   -     
12                   -   X     
13                   X         
14                             

determine_ideal_outcome called with [(9, 13), (6, 9), (10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (10, 12), (8, 9), (9, 7), (9, 6), (10, 9), (7, 9)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 13), (6, 9), (10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (10, 12), (8, 9), (9, 7), (9, 6), (10, 9), (7, 9)]
levels - {8: [(5, 9), (10, 12), (8, 6), (9, 13)], 9: [(6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     5   6   7   8   9  10  11  
 5                             
 6                   2         
 7               2   X   2     
 8           2   X   X   X   2 
 9       2   X   X   X   X   X 
10           2   X   X   X   2 
11               2   X   2     
12                   2         
13                             
14                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     5   6   7   8   9  10  11  
 5                             
 6                   ?         
 7               -   0   -     
 8           -   =   0   0   - 
 9       ?   0   0   0   0   = 
10           -   0   0   0   - 
11               -   0   -     
12                   -   X     
13                   X         
14                             

Cell Scores:
     5   6   7   8   9  10  11  
 5                             
 6                   9         
 7               9  10   9     
 8           9  10  11  10   9 
 9       9  10  11  12  11  10 
10           9  10  11  10   9 
11               9  10   9     
12                   9   8     
13                   8         
14                             

The system now has a total of 48000000 options
The initial system score was 150
The maximum obtainable for the system is 154
The score gain were looking for is 4
The system_score_gain_required = 4

bots_in_optional = [(6, 9), (9, 6)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(9, 13), (10, 12)]
bots_outside_system_moving_to_optional  = [(9, 13), (10, 12)]
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (9, 6), (9, 13), (10, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (9, 6)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (8, 10), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = [(8, 8), (11, 9)]
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (9, 7), (10, 9), (7, 9)]

Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied
len(current_bots_in_optional_that_can_move_to_occupied) = 2
Deficit = 0
It should be possible to make this happen
Like by doing one from 2 of the following solutions
Match sets generated = [[((6, 9), (8, 8)), ((9, 6), (11, 9))], [((6, 9), (11, 9)), ((9, 6), (8, 8))]]

Looking at [((6, 9), (8, 8)), ((9, 6), (11, 9))]
Find paths between (6, 9) and (8, 8)
1 paths = [[(6, 9), (7, 9), (8, 9), (8, 8)]]
Find paths between (9, 6) and (11, 9)
2 paths = [[(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)], [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (8, 9), (10, 9), (11, 9)]]
Finished generating path sets
[[[(6, 9), (7, 9), (8, 9), (8, 8)]], [[(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)], [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (8, 9), (10, 9), (11, 9)]]]

Checking match_set, [((6, 9), (8, 8)), ((9, 6), (11, 9))]
Which generated the set_paths [[[(6, 9), (7, 9), (8, 9), (8, 8)]], [[(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)], [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (8, 9), (10, 9), (11, 9)]]]
Checking ([(6, 9), (7, 9), (8, 9), (8, 8)], [(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)])
Move ((6, 9), (7, 9))
Move ((7, 9), (8, 9))
Move ((8, 9), (8, 8))
Move ((9, 6), (9, 7))
Move ((9, 7), (9, 8))
Move ((9, 8), (10, 8))
Move ((10, 8), (10, 9))
Move ((10, 9), (11, 9))
Works... ([(6, 9), (7, 9), (8, 9), (8, 8)], [(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)])
Looking good, implementing set
making moves ([(6, 9), (7, 9), (8, 9), (8, 8)], [(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)])
system =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8)], 'scores': [1, 0, -1, -1]}
done
system is now =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
after returning, systemm is now =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
The movements were made
unoccupied squares exist ... [(8, 8), (11, 9)]
We need to find paths between those and 2 bots
There are 2 bots that can be used... [(6, 9), (9, 6)]
Match sets generated = [[((6, 9), (8, 8)), ((9, 6), (11, 9))], [((6, 9), (11, 9)), ((9, 6), (8, 8))]]

Looking at [((6, 9), (8, 8)), ((9, 6), (11, 9))]
Find paths between (6, 9) and (8, 8)
1 paths = [[(6, 9), (7, 9), (8, 9), (8, 8)]]
Find paths between (9, 6) and (11, 9)
2 paths = [[(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)], [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (8, 9), (10, 9), (11, 9)]]
Finished generating path sets
[[[(6, 9), (7, 9), (8, 9), (8, 8)]], [[(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)], [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (8, 9), (10, 9), (11, 9)]]]

Checking match_set, [((6, 9), (8, 8)), ((9, 6), (11, 9))]
Which generated the set_paths [[[(6, 9), (7, 9), (8, 9), (8, 8)]], [[(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)], [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (8, 9), (10, 9), (11, 9)]]]
Checking ([(6, 9), (7, 9), (8, 9), (8, 8)], [(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)])
Move ((6, 9), (7, 9))
Move ((7, 9), (8, 9))
Move ((8, 9), (8, 8))
Move ((9, 6), (9, 7))
Move ((9, 7), (9, 8))
Move ((9, 8), (10, 8))
Move ((10, 8), (10, 9))
Move ((10, 9), (11, 9))
Works... ([(6, 9), (7, 9), (8, 9), (8, 8)], [(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)])
Looking good, implementing set
making moves ([(6, 9), (7, 9), (8, 9), (8, 8)], [(9, 6), (9, 7), (9, 8), (10, 8), (10, 9), (11, 9)])
system =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
done
system is now =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
after returning, systemm is now =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
It worked

System result = ...
The system has a total of 360 options
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}


It took  8.261000ms for simplify_system to complete
Will try freezing the system
Move ((10, 10), (10, 10))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Works... [((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11))]
Can freeze, freezing system
making moves [((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11))]
system =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 10), (11, 10)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(9, 10), (8, 10), (8, 11), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10)], 'scores': [0, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
done
system is now =
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 12): {'options': [(10, 11)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}}]
checking possibility for score of 4
this possibility has a score of 4
checking
{(9, 13): {'options': [(9, 12)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 12): {'options': [(10, 11)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
It took a total of 8.26 Ms for simplify_system to complete
-------------------------- running turn 29 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.060000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.06 Ms for simplify_system to complete
-------------------------- running turn 30 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.237000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.24 Ms for simplify_system to complete
-------------------------- running turn 31 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (10, 11), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (10, 11), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 12), (10, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (10, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (10, 11)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (9, 11), (10, 10), (11, 9), (8, 10), (8, 8), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.065000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((9, 11), (9, 11))
Move ((9, 10), (9, 10))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((8, 9), (8, 9))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((10, 11), (10, 11))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((9, 11), (9, 11)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((10, 11), (10, 11)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((9, 11), (9, 11)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((10, 11), (10, 11)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.07 Ms for simplify_system to complete
-------------------------- running turn 32 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (10, 11), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (9, 12), (8, 9), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 11), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (9, 12), (8, 9), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (8, 8), (11, 9), (8, 10), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (8, 8), (9, 8), (11, 9), (8, 10), (9, 9), (9, 10), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.059000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((8, 8), (8, 8))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((9, 12), (9, 12))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((9, 12), (9, 12)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((9, 12), (9, 12)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.06 Ms for simplify_system to complete
-------------------------- running turn 33 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (10, 11), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (9, 12), (10, 11), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 12), (10, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (10, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (10, 11)]
current_bots_in_occupied = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (9, 11), (10, 10), (11, 9), (8, 10), (8, 8), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 11), (9, 10), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (8, 9), (8, 8), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.094000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((9, 11), (9, 11))
Move ((9, 10), (9, 10))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((8, 9), (8, 9))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((10, 11), (10, 11))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((9, 11), (9, 11)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((10, 11), (10, 11)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((9, 11), (9, 11)), ((9, 10), (9, 10)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((10, 11), (10, 11)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.09 Ms for simplify_system to complete
-------------------------- running turn 34 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.075000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.07 Ms for simplify_system to complete
-------------------------- running turn 35 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.104000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.10 Ms for simplify_system to complete
-------------------------- running turn 36 ---------------------------


=> INITIAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   X   -         
 8       -   X   X   X   -     
 9   -   X   X   X   X   X   - 
10       -   X   X   X   -     
11           -   X   X   -     
12               X             
13               -             

determine_ideal_outcome called with [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
outcome = 
num_optional - 2
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (9, 13)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 154

-------------------------------------
TARGET system:
15 participants
()
     6   7   8   9  10  11  12  
 6               2             
 7           2   X   2         
 8       2   X   X   X   2     
 9   2   X   X   X   X   X   2 
10       2   X   X   X   2     
11           2   X   2         
12               2             
13                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
15 participants
     6   7   8   9  10  11  12  
 6               -             
 7           -   0   -         
 8       -   0   0   0   -     
 9   -   0   0   0   0   0   - 
10       -   0   0   0   -     
11           -   0   ?         
12               ?             
13                             

Cell Scores:
     6   7   8   9  10  11  12  
 6               9             
 7           9  10   9         
 8       9  10  11  10   9     
 9   9  10  11  12  11  10   9 
10       9  10  11  10   9     
11           9  10   9         
12               9             
13                             

The system now has a total of 3515625000 options
The initial system score was 154
The maximum obtainable for the system is 154
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 3515625000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}


It took  2.311000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6)], 'scores': [1, 0, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.31 Ms for simplify_system to complete
-------------------------- running turn 37 ---------------------------


=> INITIAL
BOT Positions:
19 participants
     6   7   8   9  10  11  12  13  14  15  
 5                                         
 6           X   -                         
 7           -   X   -                     
 8       -   X   X   X   -                 
 9   -   X   X   X   X   X   -   X   X     
10       -   X   X   X   -       -   -     
11           -   X   X   -                 
12               X   -   X                 
13               -                         

Awarded move for (13, 9)  to (12, 9)
Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
17 participants
     6   7   8   9  10  11  12  13  14  15  
 5                                         
 6           X   -                         
 7           -   X   -                     
 8       -   X   X   X   -                 
 9   -   X   X   X   X   X                 
10       -   X   X   X   -                 
11           -   X   X   -                 
12               X   -   X                 
13               -                         

determine_ideal_outcome called with [(10, 8), (9, 11), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (8, 9), (8, 6), (7, 9), (11, 12), (10, 9), (9, 7)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 3
optional - [(6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (9, 11), (10, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (8, 9), (8, 6), (7, 9), (10, 9), (9, 7)]
levels - {8: [(11, 11), (10, 12), (8, 6), (9, 13)], 9: [(6, 9), (10, 11), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 163

-------------------------------------
TARGET system:
16 participants
()
     6   7   8   9  10  11  12  13  14  15  
 5                                         
 6               3                         
 7           3   X   3                     
 8       3   X   X   X   3                 
 9   3   X   X   X   X   X                 
10       3   X   X   X   3                 
11           3   X   3                     
12               3                         
13                                         

This is system split, groups are...
0
  [(11, 12), [(10, 12)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
16 participants
     6   7   8   9  10  11  12  13  14  15  
 5                                         
 6           X   -                         
 7           -   0   -                     
 8       -   0   0   0   -                 
 9   -   0   0   0   0   0                 
10       -   0   0   0   -                 
11           -   0   ?                     
12               ?                         
13                                         

Cell Scores:
     6   7   8   9  10  11  12  13  14  15  
 5                                         
 6           8   9                         
 7           9  10   9                     
 8       9  10  11  10   9                 
 9   9  10  11  12  11  10                 
10       9  10  11  10   9                 
11           9  10   9                     
12               9                         
13                                         

The system now has a total of 7031250000 options
The initial system score was 184
The maximum obtainable for the system is 188
The score gain were looking for is 4
The system_score_gain_required = 1

bots_in_optional = [(10, 11), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(8, 6)]
bots_outside_system_moving_to_optional  = [(8, 6)]
bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (9, 12), (8, 6)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (9, 12)]
current_bots_in_occupied = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (9, 11), (10, 10), (11, 9), (8, 10), (8, 8), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (9, 11), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 7031250000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7)], 'scores': [1, 1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
(11, 12) - {'options': [(10, 12)], 'scores': [1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  3.185000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 8), (10, 8))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((8, 8), (8, 8))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((9, 11), (9, 11))
Move ((10, 9), (10, 9))
Move ((8, 9), (8, 9))
Move ((9, 7), (9, 7))
Move ((9, 12), (9, 12))
Move ((7, 9), (7, 9))
Works... [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((8, 9), (8, 9)), ((9, 7), (9, 7)), ((9, 12), (9, 12)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((8, 9), (8, 9)), ((9, 7), (9, 7)), ((9, 12), (9, 12)), ((7, 9), (7, 9))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 6) - {'options': [(9, 6)], 'scores': [1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (8, 7)], 'scores': [1, 0, -1, -1]}
(11, 12) - {'options': [(10, 12)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9)], 'scores': [1, 0, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 6) - {'options': [(9, 6)], 'scores': [1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 12) - {'options': [(10, 12)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 6): {'options': [(9, 6)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 12): {'options': [(10, 12)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 4
this possibility has a score of 4
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 6): {'options': [(9, 6)], 'scores': [1]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 12): {'options': [(10, 12)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 6) - {'options': [(9, 6)], 'scores': [1]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 12) - {'options': [(10, 12)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 3.18 Ms for simplify_system to complete
-------------------------- running turn 38 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                                             
 6                   -   X                     
 7                   -   X   -                 
 8               -   X   X   X   -             
 9       X   -   X   X   X   X   X   X   X     
10               -   X   X   X   -   -   -     
11                   -   X   X   -             
12                       X   X   -             
13                       -                     

Awarded move for (5, 9)  to (6, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
19 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                                             
 6                   -   X                     
 7                   -   X   -                 
 8               -   X   X   X   -             
 9               X   X   X   X   X   X   X     
10               -   X   X   X   -   -   -     
11                   -   X   X   -             
12                       X   X   -             
13                       -                     

determine_ideal_outcome called with [(11, 9), (9, 10), (10, 8), (12, 9), (9, 8), (10, 10), (9, 9), (10, 12), (8, 10), (8, 9), (8, 8), (9, 12), (13, 9), (9, 11), (10, 11), (9, 7), (9, 6), (10, 9), (7, 9)]
outcome = 
num_optional - 6
optional - [(10, 11), (9, 6), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(11, 9), (9, 10), (10, 8), (12, 9), (9, 8), (10, 10), (9, 9), (10, 12), (8, 10), (8, 9), (8, 8), (9, 12), (13, 9), (9, 11), (10, 11), (9, 7), (9, 6), (10, 9), (7, 9)]
levels - {7: [(13, 10), (11, 12)], 8: [(11, 11), (10, 12), (12, 10), (8, 6), (9, 13), (13, 9)], 9: [(10, 11), (9, 6), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 190

-------------------------------------
TARGET system:
19 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                                             
 6                       6                     
 7                   6   X   6                 
 8               6   X   X   X   6             
 9               X   X   X   X   X   6         
10               6   X   X   X   6             
11                   6   X   6                 
12                       6                     
13                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
19 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                                             
 6                       ?                     
 7                   -   0   -                 
 8               -   0   0   0   -             
 9               0   0   0   0   0   ?   X     
10               -   0   0   0   -             
11                   -   0   ?                 
12                       ?   X                 
13                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                                             
 6                       9                     
 7                   9  10   9                 
 8               9  10  11  10   9             
 9              10  11  12  11  10   9   8     
10               9  10  11  10   9             
11                   9  10   9                 
12                       9   8                 
13                                             

The system now has a total of 11250000000 options
The initial system score was 196
The maximum obtainable for the system is 199
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(12, 9), (9, 12), (10, 11), (9, 6)]
bots_in_optional_moving_to_occupied = [(12, 9)]
bots_outside_system = [(10, 12), (13, 9)]
bots_outside_system_moving_to_optional  = [(10, 12), (13, 9)]
bots_in_occupied = [(11, 9), (9, 10), (10, 8), (9, 8), (10, 10), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(11, 9)]
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 13
current_bots_in_optional = [(9, 12), (10, 11), (9, 6), (10, 12), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 12), (10, 11), (9, 6)]
current_bots_in_occupied = [(11, 9), (9, 10), (10, 8), (9, 8), (10, 10), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9), (12, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(11, 9), (11, 9), (9, 10), (10, 8), (9, 8), (10, 10), (9, 9), (8, 10), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9), (12, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(12, 9)]
So lets move one of [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 11250000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12)], 'scores': [1, 1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}


It took  3.537000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((9, 7), (9, 7))
Works... [((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((9, 7), (9, 7))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(10, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9), (7, 8), (7, 10)], 'scores': [0, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (11, 10)], 'scores': [0, -1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 7) - {'options': [(9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(10, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (10, 11): {'options': [(9, 11)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (10, 12): {'options': [(10, 11)], 'scores': [1]}, (9, 10): {'options': [(8, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (10, 11): {'options': [(9, 11)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (10, 12): {'options': [(10, 11)], 'scores': [1]}, (9, 10): {'options': [(8, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(10, 11) - {'options': [(9, 11)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(10, 12) - {'options': [(10, 11)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 3.54 Ms for simplify_system to complete
-------------------------- running turn 39 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 

determine_ideal_outcome called with [(10, 8), (6, 9), (10, 11), (10, 10), (11, 8), (9, 6), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (6, 9), (10, 11), (10, 10), (11, 8), (9, 6), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(5, 9), (11, 11), (7, 11), (8, 6), (9, 13), (11, 7), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   7                 
 7               7   X   7             
 8           7   X   X   X   7         
 9       7   X   X   X   X   X   7     
10           7   X   X   X   7         
11               7   X   7             
12                   7                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   ?                 
 7               -   0   -             
 8           -   0   0   0   ?         
 9       ?   0   0   0   0   0   ?     
10           -   0   0   0   -         
11               ?   0   ?             
12                   ?                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 527343750000 options
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 527343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  2.917000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 6), (9, 6))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((12, 9), (12, 9))
Move ((8, 11), (8, 11))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 6), (9, 6)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 6), (9, 6)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.92 Ms for simplify_system to complete
-------------------------- running turn 40 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 

determine_ideal_outcome called with [(10, 8), (6, 9), (10, 11), (10, 10), (11, 8), (9, 6), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(10, 8), (6, 9), (10, 11), (10, 10), (11, 8), (9, 6), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 12), (9, 11), (8, 9), (7, 9), (12, 9), (8, 11), (10, 9), (9, 7)]
levels - {8: [(5, 9), (11, 11), (7, 11), (8, 6), (9, 13), (11, 7), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   7                 
 7               7   X   7             
 8           7   X   X   X   7         
 9       7   X   X   X   X   X   7     
10           7   X   X   X   7         
11               7   X   7             
12                   7                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   ?                 
 7               -   0   -             
 8           -   0   0   0   ?         
 9       ?   0   0   0   0   0   ?     
10           -   0   0   0   -         
11               ?   0   ?             
12                   ?                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 527343750000 options
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (11, 8), (9, 6), (9, 12), (12, 9), (8, 11)]
current_bots_in_occupied = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (10, 10), (11, 9), (8, 10), (8, 8), (9, 11), (7, 9), (9, 7)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(10, 8), (10, 10), (9, 8), (11, 9), (9, 9), (8, 10), (9, 10), (8, 8), (9, 11), (8, 9), (7, 9), (10, 9), (9, 7)]

Optional squares exist

System result = ...
The system has a total of 527343750000 options
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}


It took  2.885000ms for simplify_system to complete
Will try freezing the system
Move ((10, 8), (10, 8))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 6), (9, 6))
Move ((9, 8), (9, 8))
Move ((11, 9), (11, 9))
Move ((9, 9), (9, 9))
Move ((8, 10), (8, 10))
Move ((9, 10), (9, 10))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((8, 9), (8, 9))
Move ((7, 9), (7, 9))
Move ((12, 9), (12, 9))
Move ((8, 11), (8, 11))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Works... [((10, 8), (10, 8)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 6), (9, 6)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
Can freeze, freezing system
making moves [((10, 8), (10, 8)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 6), (9, 6)), ((9, 8), (9, 8)), ((11, 9), (11, 9)), ((9, 9), (9, 9)), ((8, 10), (8, 10)), ((9, 10), (9, 10)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((8, 9), (8, 9)), ((7, 9), (7, 9)), ((12, 9), (12, 9)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7))]
system =
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(10, 8): {'options': [(10, 8)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
It took a total of 2.89 Ms for simplify_system to complete
-------------------------- running turn 41 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 

determine_ideal_outcome called with [(9, 10), (6, 9), (11, 9), (10, 11), (10, 8), (11, 8), (12, 9), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (8, 11), (10, 9), (7, 9)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 10), (6, 9), (11, 9), (10, 11), (10, 8), (11, 8), (12, 9), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (8, 11), (10, 9), (7, 9)]
levels - {8: [(5, 9), (11, 11), (7, 11), (8, 6), (9, 13), (11, 7), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   7                 
 7               7   X   7             
 8           7   X   X   X   7         
 9       7   X   X   X   X   X   7     
10           7   X   X   X   7         
11               7   X   7             
12                   7                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   ?                 
 7               -   0   -             
 8           -   0   0   0   ?         
 9       ?   0   0   0   0   0   ?     
10           -   0   0   0   -         
11               ?   0   ?             
12                   ?                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 527343750000 options
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]

Optional squares exist

System result = ...
The system has a total of 527343750000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}


It took  2.888000ms for simplify_system to complete
Will try freezing the system
Move ((9, 10), (9, 10))
Move ((6, 9), (6, 9))
Move ((11, 9), (11, 9))
Move ((10, 11), (10, 11))
Move ((10, 8), (10, 8))
Move ((11, 8), (11, 8))
Move ((12, 9), (12, 9))
Move ((9, 8), (9, 8))
Move ((10, 10), (10, 10))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((8, 9), (8, 9))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((9, 7), (9, 7))
Move ((9, 6), (9, 6))
Move ((8, 11), (8, 11))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((9, 10), (9, 10)), ((6, 9), (6, 9)), ((11, 9), (11, 9)), ((10, 11), (10, 11)), ((10, 8), (10, 8)), ((11, 8), (11, 8)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((9, 10), (9, 10)), ((6, 9), (6, 9)), ((11, 9), (11, 9)), ((10, 11), (10, 11)), ((10, 8), (10, 8)), ((11, 8), (11, 8)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 2.89 Ms for simplify_system to complete
-------------------------- running turn 42 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 

determine_ideal_outcome called with [(9, 10), (6, 9), (11, 9), (10, 11), (10, 8), (11, 8), (12, 9), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (8, 11), (10, 9), (7, 9)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 10), (6, 9), (11, 9), (10, 11), (10, 8), (11, 8), (12, 9), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (8, 11), (10, 9), (7, 9)]
levels - {8: [(5, 9), (11, 11), (7, 11), (8, 6), (9, 13), (11, 7), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   7                 
 7               7   X   7             
 8           7   X   X   X   7         
 9       7   X   X   X   X   X   7     
10           7   X   X   X   7         
11               7   X   7             
12                   7                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   ?                 
 7               -   0   -             
 8           -   0   0   0   ?         
 9       ?   0   0   0   0   0   ?     
10           -   0   0   0   -         
11               ?   0   ?             
12                   ?                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 527343750000 options
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]

Optional squares exist

System result = ...
The system has a total of 527343750000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}


It took  2.888000ms for simplify_system to complete
Will try freezing the system
Move ((9, 10), (9, 10))
Move ((6, 9), (6, 9))
Move ((11, 9), (11, 9))
Move ((10, 11), (10, 11))
Move ((10, 8), (10, 8))
Move ((11, 8), (11, 8))
Move ((12, 9), (12, 9))
Move ((9, 8), (9, 8))
Move ((10, 10), (10, 10))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((8, 9), (8, 9))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((9, 7), (9, 7))
Move ((9, 6), (9, 6))
Move ((8, 11), (8, 11))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((9, 10), (9, 10)), ((6, 9), (6, 9)), ((11, 9), (11, 9)), ((10, 11), (10, 11)), ((10, 8), (10, 8)), ((11, 8), (11, 8)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((9, 10), (9, 10)), ((6, 9), (6, 9)), ((11, 9), (11, 9)), ((10, 11), (10, 11)), ((10, 8), (10, 8)), ((11, 8), (11, 8)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 2.89 Ms for simplify_system to complete
-------------------------- running turn 43 ---------------------------


=> INITIAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6               -   X                 
 7               -   X   -   -         
 8           -   X   X   X   X         
 9   -   X   X   X   X   X   X   X   - 
10           -   X   X   X   -         
11           -   X   X   X   -         
12                   X                 
13                   -                 

determine_ideal_outcome called with [(9, 10), (6, 9), (11, 9), (10, 11), (10, 8), (11, 8), (12, 9), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (8, 11), (10, 9), (7, 9)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(9, 10), (6, 9), (11, 9), (10, 11), (10, 8), (11, 8), (12, 9), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 12), (9, 11), (9, 7), (9, 6), (8, 11), (10, 9), (7, 9)]
levels - {8: [(5, 9), (11, 11), (7, 11), (8, 6), (9, 13), (11, 7), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   7                 
 7               7   X   7             
 8           7   X   X   X   7         
 9       7   X   X   X   X   X   7     
10           7   X   X   X   7         
11               7   X   7             
12                   7                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   ?                 
 7               -   0   -             
 8           -   0   0   0   ?         
 9       ?   0   0   0   0   0   ?     
10           -   0   0   0   -         
11               ?   0   ?             
12                   ?                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 527343750000 options
The initial system score was 199
The maximum obtainable for the system is 199
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (11, 8), (12, 9), (9, 12), (9, 6), (8, 11)]
current_bots_in_occupied = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(11, 9), (10, 8), (10, 10), (8, 10), (8, 8), (9, 11), (9, 7), (7, 9)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 10), (11, 9), (10, 8), (9, 8), (10, 10), (8, 10), (9, 9), (8, 9), (8, 8), (9, 11), (9, 7), (10, 9), (7, 9)]

Optional squares exist

System result = ...
The system has a total of 527343750000 options
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}


It took  2.911000ms for simplify_system to complete
Will try freezing the system
Move ((9, 10), (9, 10))
Move ((6, 9), (6, 9))
Move ((11, 9), (11, 9))
Move ((10, 11), (10, 11))
Move ((10, 8), (10, 8))
Move ((11, 8), (11, 8))
Move ((12, 9), (12, 9))
Move ((9, 8), (9, 8))
Move ((10, 10), (10, 10))
Move ((8, 10), (8, 10))
Move ((9, 9), (9, 9))
Move ((8, 9), (8, 9))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Move ((9, 11), (9, 11))
Move ((9, 7), (9, 7))
Move ((9, 6), (9, 6))
Move ((8, 11), (8, 11))
Move ((10, 9), (10, 9))
Move ((7, 9), (7, 9))
Works... [((9, 10), (9, 10)), ((6, 9), (6, 9)), ((11, 9), (11, 9)), ((10, 11), (10, 11)), ((10, 8), (10, 8)), ((11, 8), (11, 8)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
Can freeze, freezing system
making moves [((9, 10), (9, 10)), ((6, 9), (6, 9)), ((11, 9), (11, 9)), ((10, 11), (10, 11)), ((10, 8), (10, 8)), ((11, 8), (11, 8)), ((12, 9), (12, 9)), ((9, 8), (9, 8)), ((10, 10), (10, 10)), ((8, 10), (8, 10)), ((9, 9), (9, 9)), ((8, 9), (8, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12)), ((9, 11), (9, 11)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((8, 11), (8, 11)), ((10, 9), (10, 9)), ((7, 9), (7, 9))]
system =
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(9, 10): {'options': [(9, 10)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
It took a total of 2.91 Ms for simplify_system to complete
-------------------------- running turn 44 ---------------------------


=> INITIAL
BOT Positions:
23 participants
     1   2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                     
 6                               -   X                 
 7                               -   X   -   -         
 8                           -   X   X   X   X         
 9       X   -   X   -   X   X   X   X   X   X   X   - 
10                       -   -   X   X   X   -         
11                           -   X   X   X   -         
12                               -   X   -             
13                                   -                 
14                                   X                 
15                                                     

Awarded move for (4, 9)  to (5, 9)
Awarded move for (2, 9)  to (3, 9)
Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
20 participants
     1   2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                     
 6                               -   X                 
 7                               -   X   -   -         
 8                           -   X   X   X   X         
 9                       X   X   X   X   X   X   X   - 
10                       -   -   X   X   X   -         
11                           -   X   X   X   -         
12                               -   X   -             
13                                                     
14                                                     
15                                                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 12)]
outcome = 
num_optional - 7
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (9, 12)]
levels - {8: [(11, 11), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (8, 12), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 199

-------------------------------------
TARGET system:
20 participants
()
     1   2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                     
 6                                   7                 
 7                               7   X   7             
 8                           7   X   X   X   7         
 9                       7   X   X   X   X   X   7     
10                           7   X   X   X   7         
11                               7   X   7             
12                                   7                 
13                                                     
14                                                     
15                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
20 participants
     1   2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                     
 6                                   ?                 
 7                               -   0   -             
 8                           -   0   0   0   ?         
 9                       ?   0   0   0   0   0   ?     
10                           -   0   0   0   -         
11                               ?   0   ?             
12                                   ?                 
13                                                     
14                                                     
15                                                     

Cell Scores:
     1   2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                     
 6                                   9                 
 7                               9  10   9             
 8                           9  10  11  10   9         
 9                       9  10  11  12  11  10   9     
10                           9  10  11  10   9         
11                               9  10   9             
12                                   9                 
13                                                     
14                                                     
15                                                     

The system now has a total of 527343750000 options
The initial system score was 218
The maximum obtainable for the system is 221
The score gain were looking for is 3
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (12, 9), (8, 11), (9, 6), (11, 8), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (12, 9), (8, 11), (9, 6), (11, 8), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (12, 9), (8, 11), (9, 6), (11, 8), (9, 12)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]

Optional squares exist

System result = ...
The system has a total of 527343750000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(2, 9) - {'options': [(3, 9)], 'scores': [1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.464000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(2, 9) - {'options': [(3, 9)], 'scores': [1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(2, 9) - {'options': [(3, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (2, 9): {'options': [(3, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (2, 9): {'options': [(3, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(2, 9) - {'options': [(3, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.46 Ms for simplify_system to complete
-------------------------- running turn 45 ---------------------------


=> INITIAL
BOT Positions:
23 participants
     2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                 
 6                           -   X                 
 7                           -   X   -   -         
 8                       -   X   X   X   X         
 9       X   -   X   X   X   X   X   X   X   X   - 
10               -   -   -   X   X   X   -         
11                       -   X   X   X   -         
12                           -   X   -             
13                               X                 
14                               -                 

Awarded move for (3, 9)  to (4, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
22 participants
     2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                 
 6                           -   X                 
 7                           -   X   -   -         
 8                       -   X   X   X   X         
 9               X   X   X   X   X   X   X   X   - 
10               -   -   -   X   X   X   -         
11                       -   X   X   X   -         
12                           -   X   -             
13                               X                 
14                               -                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 12)]
levels - {7: [(9, 14), (5, 10)], 8: [(5, 9), (11, 11), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (8, 12), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 217

-------------------------------------
TARGET system:
22 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                 
 6                               9                 
 7                           9   X   9             
 8                       9   X   X   X   9         
 9                   9   X   X   X   X   X   9     
10                       9   X   X   X   9         
11                           9   X   9             
12                               9                 
13                                                 
14                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
22 participants
     2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                 
 6                               ?                 
 7                           -   0   -             
 8                       -   0   0   0   ?         
 9               X   ?   0   0   0   0   0   ?     
10                       -   0   0   0   -         
11                           ?   0   ?             
12                               ?                 
13                               X                 
14                                                 

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  
 5                                                 
 6                               9                 
 7                           9  10   9             
 8                       9  10  11  10   9         
 9               8   9  10  11  12  11  10   9     
10                       9  10  11  10   9         
11                           9  10   9             
12                               9                 
13                               8                 
14                                                 

The system now has a total of 13500000000 options
The initial system score was 221
The maximum obtainable for the system is 224
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(6, 9), (10, 11), (12, 9), (8, 11), (9, 6), (11, 8), (9, 12)]
bots_in_optional_moving_to_occupied = [(6, 9), (9, 12)]
bots_outside_system = [(5, 9), (9, 13)]
bots_outside_system_moving_to_optional  = [(5, 9), (9, 13)]
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 11), (7, 9)]
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (12, 9), (8, 11), (9, 6), (11, 8), (5, 9), (9, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (12, 9), (8, 11), (9, 6), (11, 8)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (6, 9), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (7, 9), (9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (6, 9), (9, 12)]

Optional squares exist
2 bots need to move into optional
And 2 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(6, 9), (9, 12)]
So lets move one of [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 13500000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 10), (10, 11)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10)], 'scores': [1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 8), (7, 10)], 'scores': [1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}


It took  4.451000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((8, 10), (8, 10))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((9, 6), (9, 6))
Move ((10, 10), (10, 10))
Works... [((10, 11), (10, 11)), ((8, 10), (8, 10)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((9, 6), (9, 6)), ((10, 10), (10, 10))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((8, 10), (8, 10)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((9, 6), (9, 6)), ((10, 10), (10, 10))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 10), (10, 11)], 'scores': [1, 0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10), (8, 11), (7, 10)], 'scores': [0, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [0, -1, -1, -1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(7, 8)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (10, 11)], 'scores': [0, -1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 8)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 8)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 8)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 8)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 4.45 Ms for simplify_system to complete
-------------------------- running turn 46 ---------------------------


=> INITIAL
BOT Positions:
23 participants
     3   4   5   6   7   8   9  10  11  12  13  
 5                                             
 6                       -   X                 
 7                   -   -   X   -   -         
 8               -   X   X   X   X   X         
 9       X   -   X   X   X   X   X   X   X   - 
10               -   -   X   X   X   X   -     
11                   -   X   X   X   -         
12                           X   -             
13                           -                 

Awarded move for (4, 9)  to (5, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
22 participants
     3   4   5   6   7   8   9  10  11  12  13  
 5                                             
 6                       -   X                 
 7                   -   -   X   -   -         
 8               -   X   X   X   X   X         
 9               X   X   X   X   X   X   X   - 
10               -   -   X   X   X   X   -     
11                   -   X   X   X   -         
12                           X   -             
13                           -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(11, 11), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (13, 9)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 217

-------------------------------------
TARGET system:
22 participants
()
     3   4   5   6   7   8   9  10  11  12  13  
 5                                             
 6                           9                 
 7                       9   X   9             
 8                   9   X   X   X   9         
 9               9   X   X   X   X   X   9     
10                   9   X   X   X   9         
11                       9   X   9             
12                           9                 
13                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
22 participants
     3   4   5   6   7   8   9  10  11  12  13  
 5                                             
 6                           ?                 
 7                       -   0   -             
 8                   ?   0   0   0   ?         
 9               ?   0   0   0   0   0   ?     
10                   -   0   0   0   ?         
11                       ?   0   ?             
12                           ?                 
13                                             

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  
 5                                             
 6                           9                 
 7                       9  10   9             
 8                   9  10  11  10   9         
 9               9  10  11  12  11  10   9     
10                   9  10  11  10   9         
11                       9  10   9             
12                           9                 
13                                             

The system now has a total of 4746093750000 options
The initial system score was 224
The maximum obtainable for the system is 225
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 13
current_bots_in_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_in_optional_that_can_move_to_occupied = [(6, 9), (10, 11), (12, 9), (11, 10), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]

Optional squares exist

System result = ...
The system has a total of 4746093750000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  3.831000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 3.83 Ms for simplify_system to complete
-------------------------- running turn 47 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                 
 6                   -   X                         
 7               -   -   X   -   -                 
 8           -   X   X   X   X   X   -             
 9       X   X   X   X   X   X   X   X   -   X     
10       -   -   -   X   X   X   X   -             
11               -   X   X   X   -                 
12                   -   X   -                     
13                       -                         
14                       X                         
15                                                 

Awarded move for (14, 9)  to (13, 9)
Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
23 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                 
 6                   -   X                         
 7               -   -   X   -   -                 
 8           -   X   X   X   X   X   -             
 9       X   X   X   X   X   X   X   X             
10       -   -   -   X   X   X   X   -             
11               -   X   X   X   -                 
12                   -   X   -                     
13                                                 
14                                                 
15                                                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 10
optional - [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {7: [(5, 10)], 8: [(5, 9), (11, 11), (7, 7), (10, 12), (7, 11), (6, 10), (12, 10), (8, 6), (11, 7), (6, 8), (8, 12), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 226

-------------------------------------
TARGET system:
23 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                 
 6                      10                         
 7                  10   X  10                     
 8              10   X   X   X  10                 
 9          10   X   X   X   X   X  10             
10              10   X   X   X  10                 
11                  10   X  10                     
12                      10                         
13                                                 
14                                                 
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
23 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                 
 6                       ?                         
 7                   -   0   -                     
 8               ?   0   0   0   ?                 
 9       X   ?   0   0   0   0   0   ?             
10               -   0   0   0   ?                 
11                   ?   0   ?                     
12                       ?                         
13                                                 
14                                                 
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 5                                                 
 6                       9                         
 7                   9  10   9                     
 8               9  10  11  10   9                 
 9       8   9  10  11  12  11  10   9             
10               9  10  11  10   9                 
11                   9  10   9                     
12                       9                         
13                                                 
14                                                 
15                                                 

The system now has a total of 759375000000 options
The initial system score was 239
The maximum obtainable for the system is 242
The score gain were looking for is 3
The system_score_gain_required = 1

bots_in_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
bots_in_optional_moving_to_occupied = [(6, 9)]
bots_outside_system = [(5, 9)]
bots_outside_system_moving_to_optional  = [(5, 9)]
bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(7, 9)]
num_target_bots_in_optional = 10
num_target_bots_in_occupied = 13
current_bots_in_optional = [(10, 11), (12, 9), (11, 10), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12), (5, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 11), (12, 9), (11, 10), (8, 11), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_in_occupied = [(9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (6, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(7, 9), (9, 8), (8, 9), (10, 8), (8, 10), (9, 11), (10, 9), (9, 7), (11, 9), (9, 10), (7, 9), (10, 10), (9, 9), (8, 8), (6, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(6, 9)]
So lets move one of [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 759375000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10)], 'scores': [1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 8), (7, 10)], 'scores': [1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 8)], 'scores': [1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  5.226000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 9), (11, 9))
Move ((9, 6), (9, 6))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Works... [((10, 11), (10, 11)), ((9, 8), (9, 8)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 9), (11, 9)), ((9, 6), (9, 6)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((7, 8), (7, 8))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((9, 8), (9, 8)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 9), (11, 9)), ((9, 6), (9, 6)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((7, 8), (7, 8))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 10), (10, 11)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(10, 9) - {'options': [(10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 8)], 'scores': [1, 0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (8, 10): {'options': [(7, 10)], 'scores': [-1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(8, 10) - {'options': [(7, 10)], 'scores': [-1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.23 Ms for simplify_system to complete
-------------------------- running turn 48 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6               -   X                     
 7           -   -   X   -   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6               -   X                     
 7           -   -   X   -   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (9, 14)], 8: [(5, 9), (11, 11), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (9, 13), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6                   X                     
 7               X   X   X                 
 8           X   X   X   X   X             
 9       X   X   X   X   X   X   X         
10           X   X   X   X   X             
11               X   X   X                 
12                   X                     
13                                         
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6                   0                     
 7               =   0   =                 
 8           0   0   0   0   0             
 9       0   0   0   0   0   0   0   X     
10           0   0   0   0   0             
11               0   0   0                 
12                   0                     
13                   X                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                                         
 6                   9                     
 7               9  10   9                 
 8           9  10  11  10   9             
 9       9  10  11  12  11  10   9   8     
10           9  10  11  10   9             
11               9  10   9                 
12                   9                     
13                   8                     
14                                         

The system now has a total of 162000000000 options
The initial system score was 242
The maximum obtainable for the system is 244
The score gain were looking for is 2
The system_score_gain_required = 2

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(9, 13), (13, 9)]
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 11), (11, 9)]
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13), (13, 9)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = [(10, 7), (8, 7)]
target_occupied_with_bot_now_or_definite_bot_next = [(9, 11), (12, 9), (9, 12), (11, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13), (13, 9)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 162000000000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(10, 10), (10, 11)], 'scores': [1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(10, 10), (11, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (8, 11), (10, 11)], 'scores': [1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(8, 10), (8, 11)], 'scores': [1, 0]}
(11, 9) - {'options': [(10, 9), (11, 8), (11, 10)], 'scores': [1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(10, 8), (11, 8)], 'scores': [1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}


It took  4.479000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 10), (11, 10))
Move ((7, 10), (7, 10))
Move ((9, 7), (9, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((7, 8), (7, 8))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 10), (11, 10)), ((7, 10), (7, 10)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 10), (11, 10)), ((7, 10), (7, 10)), ((9, 7), (9, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((7, 8), (7, 8))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(10, 10), (10, 11)], 'scores': [1, 0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 7)], 'scores': [-1]}
(11, 10) - {'options': [(10, 10), (11, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 9), (7, 10)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7), (9, 6)], 'scores': [0, -1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 8)], 'scores': [-1]}
(8, 8) - {'options': [(8, 7)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 9), (7, 8)], 'scores': [1, 0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 7)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 8)], 'scores': [-1]}
(8, 8) - {'options': [(8, 7)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 7)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(8, 10)], 'scores': [-1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 8)], 'scores': [-1]}, (8, 8): {'options': [(8, 7)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(10, 7)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(9, 9)], 'scores': [1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(8, 10)], 'scores': [-1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 8)], 'scores': [-1]}, (8, 8): {'options': [(8, 7)], 'scores': [-1]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(10, 7)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(9, 9)], 'scores': [1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(8, 10)], 'scores': [-1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 8)], 'scores': [-1]}
(8, 8) - {'options': [(8, 7)], 'scores': [-1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 4.48 Ms for simplify_system to complete
-------------------------- running turn 49 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 options
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.100000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.10 Ms for simplify_system to complete
-------------------------- running turn 50 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 options
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.002000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.00 Ms for simplify_system to complete
-------------------------- running turn 51 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 options
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.024000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.02 Ms for simplify_system to complete
-------------------------- running turn 52 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 options
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.130000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.13 Ms for simplify_system to complete
-------------------------- running turn 53 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 options
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  4.176000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.18 Ms for simplify_system to complete
-------------------------- running turn 54 ---------------------------


=> INITIAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     

The system now has a total of 128144531250000 options
The initial system score was 244
The maximum obtainable for the system is 244
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  3.991000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 3.99 Ms for simplify_system to complete
-------------------------- running turn 55 ---------------------------


=> INITIAL
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   -                 
14                   X                 
15                                     

Awarded move for (9, 14)  to (9, 13)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                                     
14                                     
15                                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 0
optional - []
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 244

-------------------------------------
TARGET system:
25 participants
()
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   X                 
 7               X   X   X             
 8           X   X   X   X   X         
 9       X   X   X   X   X   X   X     
10           X   X   X   X   X         
11               X   X   X             
12                   X                 
13                                     
14                                     
15                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
25 participants
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   0                 
 7               0   0   0             
 8           0   0   0   0   0         
 9       0   0   0   0   0   0   0     
10           0   0   0   0   0         
11               0   0   0             
12                   0                 
13                                     
14                                     
15                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                                     
 6                   9                 
 7               9  10   9             
 8           9  10  11  10   9         
 9       9  10  11  12  11  10   9     
10           9  10  11  10   9         
11               9  10   9             
12                   9                 
13                                     
14                                     
15                                     

The system now has a total of 128144531250000 options
The initial system score was 251
The maximum obtainable for the system is 252
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 0
num_target_bots_in_occupied = 25
current_bots_in_optional = []
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = []
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

No optional squares exist so bots should just be packing into occupied squares

System result = ...
The system has a total of 128144531250000 options
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}


It took  5.119000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9)], 'scores': [1, 0]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9)], 'scores': [1, 0]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10)], 'scores': [1, 1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11)], 'scores': [1, 1, 0]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6)], 'scores': [1, 0]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8)], 'scores': [1, 1, 0]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8)], 'scores': [1, 1, 0]}
(9, 12) - {'options': [(9, 11), (9, 12)], 'scores': [1, 0]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.12 Ms for simplify_system to complete
-------------------------- running turn 56 ---------------------------


=> INITIAL
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   X                 
14                   -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   X   -             
 7           -   X   X   X   -         
 8       -   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   -     
11           -   X   X   X   -         
12               -   X   -             
13                   X                 
14                   -                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 1
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {7: [(9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 252

-------------------------------------
TARGET system:
26 participants
()
     5   6   7   8   9  10  11  12  13  
 5                   1                 
 6               1   X   1             
 7           1   X   X   X   1         
 8       1   X   X   X   X   X   1     
 9   1   X   X   X   X   X   X   X   1 
10       1   X   X   X   X   X   1     
11           1   X   X   X   1         
12               1   X   1             
13                   1                 
14                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
26 participants
     5   6   7   8   9  10  11  12  13  
 5                   -                 
 6               -   0   -             
 7           -   0   0   0   -         
 8       -   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   -     
11           -   0   0   0   -         
12               -   0   -             
13                   ?                 
14                                     

Cell Scores:
     5   6   7   8   9  10  11  12  13  
 5                   8                 
 6               8   9   8             
 7           8   9  10   9   8         
 8       8   9  10  11  10   9   8     
 9   8   9  10  11  12  11  10   9   8 
10       8   9  10  11  10   9   8     
11           8   9  10   9   8         
12               8   9   8             
13                   8                 
14                                     

The system now has a total of 214576721191406250 options
The initial system score was 252
The maximum obtainable for the system is 252
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 25
current_bots_in_optional = [(9, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 13)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 214576721191406250 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9)], 'scores': [1, 0, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  3.522000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9)], 'scores': [1, 0, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 3.52 Ms for simplify_system to complete
-------------------------- running turn 57 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  15  
 5                   -                         
 6               -   X   -                     
 7       X   -   X   X   X   -                 
 8       -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   -             
11           -   X   X   X   -                 
12               -   X   -                     
13                   X                         
14                   -                         

Awarded move for (14, 9)  to (13, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
27 participants
     5   6   7   8   9  10  11  12  13  14  15  
 5                   -                         
 6               -   X   -                     
 7       X   -   X   X   X   -                 
 8       -   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X             
10       -   X   X   X   X   X   -             
11           -   X   X   X   -                 
12               -   X   -                     
13                   X                         
14                   -                         

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (6, 7), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
outcome = 
num_optional - 2
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (6, 7), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
levels - {7: [(6, 7), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 260

-------------------------------------
TARGET system:
27 participants
()
     5   6   7   8   9  10  11  12  13  14  15  
 5                   2                         
 6               2   X   2                     
 7           2   X   X   X   2                 
 8       2   X   X   X   X   X   2             
 9   2   X   X   X   X   X   X   X             
10       2   X   X   X   X   X   2             
11           2   X   X   X   2                 
12               2   X   2                     
13                   2                         
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
27 participants
     5   6   7   8   9  10  11  12  13  14  15  
 5                   -                         
 6               -   0   -                     
 7       X   -   0   0   0   -                 
 8       -   0   0   0   0   0   -             
 9   -   0   0   0   0   0   0   0             
10       -   0   0   0   0   0   -             
11           -   0   0   0   -                 
12               -   0   -                     
13                   ?                         
14                                             

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  15  
 5                   8                         
 6               8   9   8                     
 7       7   8   9  10   9   8                 
 8       8   9  10  11  10   9   8             
 9   8   9  10  11  12  11  10   9             
10       8   9  10  11  10   9   8             
11           8   9  10   9   8                 
12               8   9   8                     
13                   8                         
14                                             

The system now has a total of 572204589843750000 options
The initial system score was 266
The maximum obtainable for the system is 268
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(9, 13)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(6, 7)]
bots_outside_system_moving_to_optional  = [(6, 7)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 25
current_bots_in_optional = [(9, 13), (6, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 13)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 572204589843750000 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8)], 'scores': [1, 1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  4.948000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6)], 'scores': [1, 1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8)], 'scores': [1, 1, 0, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(6, 7) - {'options': [(7, 7)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (6, 7): {'options': [(7, 7)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (6, 7): {'options': [(7, 7)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(6, 7) - {'options': [(7, 7)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.95 Ms for simplify_system to complete
-------------------------- running turn 58 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 3
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   3                     
 6               3   X   3                 
 7           3   X   X   X   3             
 8       3   X   X   X   X   X   3         
 9   3   X   X   X   X   X   X   X   3     
10       3   X   X   X   X   X   3         
11           3   X   X   X   3             
12               3   X   3                 
13                   3                     
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           ?   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   ?                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     
14                                         

The system now has a total of 2145767211914062500 options
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2145767211914062500 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  4.022000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.02 Ms for simplify_system to complete
-------------------------- running turn 59 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 3
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   3                     
 6               3   X   3                 
 7           3   X   X   X   3             
 8       3   X   X   X   X   X   3         
 9   3   X   X   X   X   X   X   X   3     
10       3   X   X   X   X   X   3         
11           3   X   X   X   3             
12               3   X   3                 
13                   3                     
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           ?   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   ?                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     
14                                         

The system now has a total of 2145767211914062500 options
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2145767211914062500 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  4.226000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.23 Ms for simplify_system to complete
-------------------------- running turn 60 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 3
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   3                     
 6               3   X   3                 
 7           3   X   X   X   3             
 8       3   X   X   X   X   X   3         
 9   3   X   X   X   X   X   X   X   3     
10       3   X   X   X   X   X   3         
11           3   X   X   X   3             
12               3   X   3                 
13                   3                     
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           ?   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   ?                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     
14                                         

The system now has a total of 2145767211914062500 options
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2145767211914062500 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  3.991000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 3.99 Ms for simplify_system to complete
-------------------------- running turn 61 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 3
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   3                     
 6               3   X   3                 
 7           3   X   X   X   3             
 8       3   X   X   X   X   X   3         
 9   3   X   X   X   X   X   X   X   3     
10       3   X   X   X   X   X   3         
11           3   X   X   X   3             
12               3   X   3                 
13                   3                     
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           ?   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   ?                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     
14                                         

The system now has a total of 2145767211914062500 options
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2145767211914062500 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  4.216000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.22 Ms for simplify_system to complete
-------------------------- running turn 62 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 3
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   3                     
 6               3   X   3                 
 7           3   X   X   X   3             
 8       3   X   X   X   X   X   3         
 9   3   X   X   X   X   X   X   X   3     
10       3   X   X   X   X   X   3         
11           3   X   X   X   3             
12               3   X   3                 
13                   3                     
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           ?   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   ?                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     
14                                         

The system now has a total of 2145767211914062500 options
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2145767211914062500 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  4.066000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.07 Ms for simplify_system to complete
-------------------------- running turn 63 ---------------------------


=> INITIAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6           -   -   X   -                 
 7           X   X   X   X   -             
 8       -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   -   -     
11           -   X   X   X   -             
12               -   X   -                 
13                   X                     
14                   -                     

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
outcome = 
num_optional - 3
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (9, 14)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     5   6   7   8   9  10  11  12  13  14  
 5                   3                     
 6               3   X   3                 
 7           3   X   X   X   3             
 8       3   X   X   X   X   X   3         
 9   3   X   X   X   X   X   X   X   3     
10       3   X   X   X   X   X   3         
11           3   X   X   X   3             
12               3   X   3                 
13                   3                     
14                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     5   6   7   8   9  10  11  12  13  14  
 5                   -                     
 6               -   0   -                 
 7           ?   0   0   0   -             
 8       -   0   0   0   0   0   -         
 9   -   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   -         
11           -   0   0   0   -             
12               -   0   -                 
13                   ?                     
14                                         

Cell Scores:
     5   6   7   8   9  10  11  12  13  14  
 5                   8                     
 6               8   9   8                 
 7           8   9  10   9   8             
 8       8   9  10  11  10   9   8         
 9   8   9  10  11  12  11  10   9   8     
10       8   9  10  11  10   9   8         
11           8   9  10   9   8             
12               8   9   8                 
13                   8                     
14                                         

The system now has a total of 2145767211914062500 options
The initial system score was 268
The maximum obtainable for the system is 268
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2145767211914062500 options
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  4.079000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9)], 'scores': [1, 0, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 4.08 Ms for simplify_system to complete
-------------------------- running turn 64 ---------------------------


=> INITIAL
BOT Positions:
31 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -                     
 6                   -   -   X   -                 
 7                   X   X   X   X   -             
 8               -   X   X   X   X   X   -         
 9       X   -   X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   -   -     
11                   -   X   X   X   -             
12                       -   X   -                 
13                       -   X   -                 
14                           -   X   -             
15                           -   X                 
16                                                 

Awarded move for (4, 9)  to (5, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
30 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -                     
 6                   -   -   X   -                 
 7                   X   X   X   X   -             
 8               -   X   X   X   X   X   -         
 9               X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   -   -     
11                   -   X   X   X   -             
12                       -   X   -                 
13                       -   X   -                 
14                           -   X   -             
15                           -   X                 
16                                                 

determine_ideal_outcome called with [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (10, 14), (8, 11), (11, 9), (10, 15), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 3
optional - [(11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {7: [(13, 10), (7, 6), (10, 13), (9, 14), (8, 13)], 8: [(11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 268

-------------------------------------
TARGET system:
28 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           3                     
 6                       3   X   3                 
 7                   3   X   X   X   3             
 8               3   X   X   X   X   X   3         
 9               X   X   X   X   X   X   X   3     
10               3   X   X   X   X   X   3         
11                   3   X   X   X   3             
12                       3   X   3                 
13                           3                     
14                                                 
15                                                 
16                                                 

This is system split, groups are...
0
  [(10, 15), [(10, 14), (9, 15)], [1, 1]]
  [(10, 14), [(10, 13)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
28 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           -                     
 6                       -   0   -                 
 7                   ?   0   0   0   -             
 8               -   0   0   0   0   0   -         
 9               0   0   0   0   0   0   0   ?     
10               -   0   0   0   0   0   -         
11                   -   0   0   0   -             
12                       -   0   -                 
13                           ?                     
14                                                 
15                                                 
16                                                 

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  
 5                           8                     
 6                       8   9   8                 
 7                   8   9  10   9   8             
 8               8   9  10  11  10   9   8         
 9               9  10  11  12  11  10   9   8     
10               8   9  10  11  10   9   8         
11                   8   9  10   9   8             
12                       8   9   8                 
13                           8                     
14                                                 
15                                                 
16                                                 

The system now has a total of 2861022949218750000 options
The initial system score was 286
The maximum obtainable for the system is 289
The score gain were looking for is 3
The system_score_gain_required = 0

bots_in_optional = [(7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 25
current_bots_in_optional = [(7, 7), (9, 13), (13, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 2861022949218750000 options
(6, 9) - {'options': [(7, 9), (6, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.840000ms for simplify_system to complete
Will try freezing the system
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(6, 9) - {'options': [(7, 9), (6, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 15): {'options': [(10, 14)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (10, 15): {'options': [(10, 14)], 'scores': [1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(10, 15) - {'options': [(10, 14)], 'scores': [1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.84 Ms for simplify_system to complete
-------------------------- running turn 65 ---------------------------


=> INITIAL
BOT Positions:
31 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6               -   -   X   -                 
 7               X   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                   -   X   X   -             
14                       -   X                 
15                           -                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
31 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6               -   -   X   -                 
 7               X   X   X   X   -             
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                   -   X   X   -             
14                       -   X                 
15                           -                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 13), (10, 9), (9, 7), (10, 14), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 5
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 13), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {6: [(10, 14), (11, 13)], 7: [(13, 10), (7, 6), (10, 13), (9, 14), (5, 10), (8, 13)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 284

-------------------------------------
TARGET system:
30 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 5                       5                     
 6                   5   X   5                 
 7               5   X   X   X   5             
 8           5   X   X   X   X   X   5         
 9       5   X   X   X   X   X   X   X   5     
10           5   X   X   X   X   X   5         
11               5   X   X   X   5             
12                   5   X   5                 
13                       5                     
14                                             
15                                             

This is system split, groups are...
0
  [(10, 14), [(10, 13)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
30 participants
     4   5   6   7   8   9  10  11  12  13  14  
 5                       -                     
 6                   -   0   -                 
 7               ?   0   0   0   -             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?   X                 
14                                             
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8   7                 
14                                             
15                                             

The system now has a total of 14305114746093750000 options
The initial system score was 289
The maximum obtainable for the system is 291
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (7, 7), (9, 13), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(10, 13)]
bots_outside_system_moving_to_optional  = [(10, 13)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (9, 13), (13, 9), (10, 13)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (9, 13), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 14305114746093750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.094000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((7, 7), (7, 7))
Move ((12, 9), (12, 9))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((8, 10), (8, 10))
Move ((7, 10), (7, 10))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((7, 7), (7, 7)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((7, 7), (7, 7)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [0, -1, -1, -1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(10, 7) - {'options': [(9, 7), (10, 7), (10, 6)], 'scores': [1, 0, -1]}
(8, 10) - {'options': [(8, 10), (8, 11), (7, 10)], 'scores': [0, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [0, -1, -1, -1]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 0, -1, -1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (10, 14): {'options': [(10, 13)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(10, 14) - {'options': [(10, 13)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 5.09 Ms for simplify_system to complete
-------------------------- running turn 66 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       -   X                 
 6               -   -   X   -                 
 7               X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                   -   X   X                 
14                   X   -   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       -   X                 
 6               -   -   X   -                 
 7               X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                   -   X   X                 
14                   X   -   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 13), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 14), (8, 8), (13, 9), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 7
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 13), (10, 9), (9, 7), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 7), (10, 5), (10, 10), (11, 8), (9, 9), (8, 8), (13, 9), (7, 8), (9, 12)]
levels - {6: [(10, 14)], 7: [(13, 10), (7, 6), (10, 13), (9, 14), (10, 5), (5, 10), (8, 13), (12, 7)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (9, 5), (6, 10), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(10, 8), (8, 10), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 300

-------------------------------------
TARGET system:
32 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       7                     
 6                   7   X   7                 
 7               7   X   X   X   7             
 8           7   X   X   X   X   X   7         
 9       7   X   X   X   X   X   X   X   7     
10           7   X   X   X   X   X   7         
11               7   X   X   X   7             
12                   7   X   7                 
13                       7                     
14                                             
15                                             

This is system split, groups are...
0
  [(8, 14), [(9, 14)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
32 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       -   X                 
 6                   -   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?   X                 
14                                             
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8   7                 
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8   7                 
14                                             
15                                             

The system now has a total of 85830688476562500000 options
The initial system score was 304
The maximum obtainable for the system is 307
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(5, 9), (7, 7), (9, 13), (11, 7), (13, 9)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(10, 13), (10, 5)]
bots_outside_system_moving_to_optional  = [(10, 13), (10, 5)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (9, 13), (11, 7), (13, 9), (10, 13), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (9, 13), (11, 7), (13, 9)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 85830688476562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13), (10, 12)], 'scores': [1, 1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 5) - {'options': [(9, 5), (10, 6)], 'scores': [1, 1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.634000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((7, 7), (7, 7))
Move ((12, 9), (12, 9))
Move ((11, 10), (11, 10))
Move ((8, 10), (8, 10))
Move ((7, 10), (7, 10))
Move ((8, 11), (8, 11))
Move ((8, 7), (8, 7))
Move ((7, 9), (7, 9))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((7, 7), (7, 7)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 11), (8, 11)), ((8, 7), (8, 7)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((7, 7), (7, 7)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 11), (8, 11)), ((8, 7), (8, 7)), ((7, 9), (7, 9)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [0, -1, -1, -1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10), (8, 11), (7, 10)], 'scores': [0, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 0, -1, -1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7), (7, 7)], 'scores': [0, -1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [0, -1, -1, -1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (10, 13): {'options': [(9, 13)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(10, 13) - {'options': [(9, 13)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 5.63 Ms for simplify_system to complete
-------------------------- running turn 67 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   -   -     
11               -   X   X   X   -             
12                   -   X   -                 
13                       X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (9, 13), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (11, 7), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(10, 14)], 7: [(6, 7), (8, 5), (7, 6), (10, 13), (13, 10), (9, 14), (10, 5), (5, 10), (12, 7)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           -   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                       X                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                       7                     
15                                             

The system now has a total of 30899047851562500000 options
The initial system score was 307
The maximum obtainable for the system is 308
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (7, 7), (8, 6), (9, 13), (13, 9), (11, 7), (9, 5)]
bots_in_optional_moving_to_occupied = [(9, 13)]
bots_outside_system = [(9, 14)]
bots_outside_system_moving_to_optional  = [(9, 14)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 12)]
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (8, 6), (13, 9), (11, 7), (9, 5), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (8, 6), (13, 9), (11, 7), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 12), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 13)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 30899047851562500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11)], 'scores': [1, 0, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (10, 12), (8, 12)], 'scores': [1, -1, -1]}


It took  5.666000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((12, 9), (12, 9))
Move ((11, 10), (11, 10))
Move ((8, 10), (8, 10))
Move ((7, 10), (7, 10))
Move ((8, 11), (8, 11))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Works... [((10, 11), (10, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 11), (8, 11)), ((10, 10), (10, 10)), ((13, 9), (13, 9))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 11), (8, 11)), ((10, 10), (10, 10)), ((13, 9), (13, 9))]
system =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [0, -1, -1, -1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10), (8, 11), (7, 10)], 'scores': [0, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10), (7, 10), (7, 11)], 'scores': [1, 0, -1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 0, -1, -1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 5.67 Ms for simplify_system to complete
-------------------------- running turn 68 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 386238098144531250000 options
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.237000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.24 Ms for simplify_system to complete
-------------------------- running turn 69 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 386238098144531250000 options
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.572000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.57 Ms for simplify_system to complete
-------------------------- running turn 70 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 386238098144531250000 options
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.478000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.48 Ms for simplify_system to complete
-------------------------- running turn 71 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 386238098144531250000 options
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.299000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.30 Ms for simplify_system to complete
-------------------------- running turn 72 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 386238098144531250000 options
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.206000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.21 Ms for simplify_system to complete
-------------------------- running turn 73 ---------------------------


=> INITIAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 386238098144531250000 options
The initial system score was 308
The maximum obtainable for the system is 308
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  5.287000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 5.29 Ms for simplify_system to complete
-------------------------- running turn 74 ---------------------------


=> INITIAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X   -                 
14                       -                     
15                       X                     
16                                             

Awarded move for (9, 15)  to (9, 14)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                   -   X   -                 
 6               -   X   X   -                 
 7           -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   -             
12                   -   X   -                 
13                       X   -                 
14                                             
15                                             
16                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 8
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {7: [(4, 9), (10, 13), (8, 5), (7, 6), (12, 7), (13, 10), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 308

-------------------------------------
TARGET system:
33 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   X   8                 
 7               8   X   X   X   8             
 8           8   X   X   X   X   X   8         
 9       8   X   X   X   X   X   X   X   8     
10           8   X   X   X   X   X   8         
11               8   X   X   X   8             
12                   8   X   8                 
13                       8                     
14                                             
15                                             
16                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
33 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   -                 
 7               ?   0   0   0   ?             
 8           -   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               -   0   0   0   -             
12                   -   0   -                 
13                       ?                     
14                                             
15                                             
16                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             
15                                             
16                                             

The system now has a total of 386238098144531250000 options
The initial system score was 314
The maximum obtainable for the system is 315
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 8
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 386238098144531250000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  6.194000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 6.19 Ms for simplify_system to complete
-------------------------- running turn 75 ---------------------------


=> INITIAL
BOT Positions:
36 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 2                                                     
 3                       X                             
 4                       -                             
 5                   -   X   -                         
 6               -   X   X   -                         
 7           -   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   X   -   -             
11           -   -   X   X   X   -                     
12                   -   X   -                         
13                       X   -                         
14                       X   -                         
15                                                     

Awarded move for (9, 3)  to (9, 4)
Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 2                                                     
 3                                                     
 4                                                     
 5                   -   X   -                         
 6               -   X   X   -                         
 7           -   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   -                 
 9   -   X   X   X   X   X   X   X   X   X             
10       -   X   X   X   X   X   X   -   -             
11           -   -   X   X   X   -                     
12                   -   X   -                         
13                       X   -                         
14                       X   -                         
15                                                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 9
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(10, 14)], 7: [(4, 9), (10, 13), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 316

-------------------------------------
TARGET system:
34 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 2                                                     
 3                                                     
 4                                                     
 5                       9                             
 6                   9   X   9                         
 7               9   X   X   X   9                     
 8           9   X   X   X   X   X   9                 
 9       9   X   X   X   X   X   X   X   9             
10           9   X   X   X   X   X   9                 
11               9   X   X   X   9                     
12                   9   X   9                         
13                       9                             
14                                                     
15                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
34 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 2                                                     
 3                                                     
 4                                                     
 5                       ?                             
 6                   ?   0   -                         
 7               ?   0   0   0   ?                     
 8           -   0   0   0   0   0   -                 
 9       ?   0   0   0   0   0   0   0   ?             
10           ?   0   0   0   0   0   -                 
11               -   0   0   0   -                     
12                   -   0   -                         
13                       ?                             
14                       X                             
15                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 2                                                     
 3                                                     
 4                                                     
 5                       8                             
 6                   8   9   8                         
 7               8   9  10   9   8                     
 8           8   9  10  11  10   9   8                 
 9       8   9  10  11  12  11  10   9   8             
10           8   9  10  11  10   9   8                 
11               8   9  10   9   8                     
12                   8   9   8                         
13                       8                             
14                       7                             
15                                                     

The system now has a total of 92697143554687500000 options
The initial system score was 327
The maximum obtainable for the system is 330
The score gain were looking for is 3
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = [(9, 13)]
bots_outside_system = [(9, 14)]
bots_outside_system_moving_to_optional  = [(9, 14)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 12)]
num_target_bots_in_optional = 9
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 5), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (6, 10), (8, 6), (11, 7), (13, 9), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 12), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 13)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 92697143554687500000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11)], 'scores': [1, 0, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 3) - {'options': [(9, 4)], 'scores': [1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (10, 12), (8, 12)], 'scores': [1, -1, -1]}


It took  7.549000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((12, 9), (12, 9))
Move ((11, 10), (11, 10))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Works... [((10, 11), (10, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((10, 10), (10, 10)), ((13, 9), (13, 9))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((10, 10), (10, 10)), ((13, 9), (13, 9))]
system =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [0, -1, -1, -1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 11)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10)], 'scores': [1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(7, 11)], 'scores': [-1]}
(9, 3) - {'options': [(9, 4)], 'scores': [1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 11)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10)], 'scores': [1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(7, 11)], 'scores': [-1]}
(9, 3) - {'options': [(9, 4)], 'scores': [1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 11)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(8, 10)], 'scores': [1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(7, 11)], 'scores': [-1]}, (9, 3): {'options': [(9, 4)], 'scores': [1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 10)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (8, 10): {'options': [(8, 11)], 'scores': [-1]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(8, 10)], 'scores': [1]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(7, 11)], 'scores': [-1]}, (9, 3): {'options': [(9, 4)], 'scores': [1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 10)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(8, 10) - {'options': [(8, 11)], 'scores': [-1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10)], 'scores': [1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(7, 11)], 'scores': [-1]}
(9, 3) - {'options': [(9, 4)], 'scores': [1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 7.55 Ms for simplify_system to complete
-------------------------- running turn 76 ---------------------------


=> INITIAL
BOT Positions:
37 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  
 3                               -                         
 4                               X                         
 5                           -   X   -                     
 6                       -   X   X   -                     
 7                   -   X   X   X   X   X   -             
 8               -   -   X   X   X   X   X   -             
 9       X   -   X   X   X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   X   -   -   -     
11                   -   X   X   X   X   -                 
12                       -   -   X   -                     
13                               X                         
14                               -                         

Awarded move for (3, 9)  to (4, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
36 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  
 3                               -                         
 4                               X                         
 5                           -   X   -                     
 6                       -   X   X   -                     
 7                   -   X   X   X   X   X   -             
 8               -   -   X   X   X   X   X   -             
 9               X   X   X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   X   -   -   -     
11                   -   X   X   X   X   -                 
12                       -   -   X   -                     
13                               X                         
14                               -                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (9, 4), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 11
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (8, 6), (9, 13), (13, 9), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (7, 9), (10, 10), (8, 8), (11, 9), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (7, 7), (8, 9), (9, 4), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(14, 10), (9, 3)], 7: [(7, 12), (9, 4), (14, 9), (5, 8), (6, 7), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (10, 5), (5, 10)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (6, 10), (10, 12), (12, 10), (8, 6), (9, 13), (13, 9), (11, 7), (6, 8), (8, 12), (9, 5), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (7, 9), (10, 10), (8, 8), (11, 9)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 332

-------------------------------------
TARGET system:
36 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                         
 4                                                         
 5                              11                         
 6                          11   X  11                     
 7                      11   X   X   X  11                 
 8                  11   X   X   X   X   X  11             
 9              11   X   X   X   X   X   X   X  11         
10                  11   X   X   X   X   X  11             
11                      11   X   X   X  11                 
12                          11   X  11                     
13                              11                         
14                                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
36 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                         
 4                               X                         
 5                               ?                         
 6                           ?   0   -                     
 7                       ?   0   0   0   ?                 
 8                   -   0   0   0   0   0   -             
 9               ?   0   0   0   0   0   0   0   ?   X     
10                   ?   0   0   0   0   0   -             
11                       ?   0   0   0   -                 
12                           -   0   -                     
13                               ?                         
14                                                         

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  15  
 3                                                         
 4                               7                         
 5                               8                         
 6                           8   9   8                     
 7                       8   9  10   9   8                 
 8                   8   9  10  11  10   9   8             
 9               8   9  10  11  12  11  10   9   8   7     
10                   8   9  10  11  10   9   8             
11                       8   9  10   9   8                 
12                           8   9   8                     
13                               8                         
14                                                         

The system now has a total of 44494628906250000000 options
The initial system score was 336
The maximum obtainable for the system is 339
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (9, 5)]
bots_in_optional_moving_to_occupied = [(13, 9), (9, 5)]
bots_outside_system = [(9, 4), (14, 9)]
bots_outside_system_moving_to_optional  = [(9, 4), (14, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(12, 9), (9, 6)]
num_target_bots_in_optional = 11
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13), (9, 4), (14, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (9, 13)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9), (9, 5)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(12, 9), (9, 6), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (13, 9), (9, 5)]

Optional squares exist
2 bots need to move into optional
And 2 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(13, 9), (9, 5)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 44494628906250000000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9), (12, 10), (12, 8)], 'scores': [1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(8, 7), (8, 6)], 'scores': [1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (8, 7)], 'scores': [1, 0, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10)], 'scores': [1, 0, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (8, 6), (10, 6)], 'scores': [1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  7.721000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((7, 7), (7, 7))
Move ((7, 11), (7, 11))
Move ((11, 10), (11, 10))
Move ((6, 10), (6, 10))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((8, 7), (8, 7))
Move ((9, 13), (9, 13))
Move ((10, 10), (10, 10))
Move ((9, 12), (9, 12))
Works... [((10, 11), (10, 11)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((11, 10), (11, 10)), ((6, 10), (6, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((8, 7), (8, 7)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((11, 10), (11, 10)), ((6, 10), (6, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((8, 7), (8, 7)), ((9, 13), (9, 13)), ((10, 10), (10, 10)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 8)], 'scores': [-1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(7, 7) - {'options': [(8, 7), (7, 7)], 'scores': [1, 0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(7, 10), (7, 11)], 'scores': [1, 0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(10, 7) - {'options': [(10, 6)], 'scores': [-1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10), (7, 11), (6, 10)], 'scores': [0, -1, -1]}
(8, 6) - {'options': [(8, 7), (8, 6)], 'scores': [1, 0]}
(10, 9) - {'options': [(10, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7), (8, 6), (7, 7)], 'scores': [0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [0, -1, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 8)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 6)], 'scores': [-1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 8)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 9)], 'scores': [1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 6)], 'scores': [-1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 8)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 9)], 'scores': [1]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (9, 4): {'options': [(9, 5)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(11, 9)], 'scores': [1]}, (10, 8): {'options': [(11, 8)], 'scores': [-1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 6)], 'scores': [-1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 8)], 'scores': [-1]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(10, 9)], 'scores': [1]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 8)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(9, 4) - {'options': [(9, 5)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(11, 9)], 'scores': [1]}
(10, 8) - {'options': [(11, 8)], 'scores': [-1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 6)], 'scores': [-1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 8)], 'scores': [-1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9)], 'scores': [1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 7.72 Ms for simplify_system to complete
-------------------------- running turn 77 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                           -                     
 5                       -   X   -                 
 6                   -   X   X   X   -             
 7               -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   -   -     
11               -   X   X   X   X   -             
12                   -   -   X   -                 
13                       -   X   -                 
14                       X   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                           -                     
 5                       -   X   -                 
 6                   -   X   X   X   -             
 7               -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   X   -         
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   -   -     
11               -   X   X   X   X   -             
12                   -   -   X   -                 
13                       -   X   -                 
14                       X   -                     
15                                                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 14), (8, 8), (9, 5), (7, 8), (9, 12)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 12
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (10, 10), (11, 8), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(4, 10)], 7: [(7, 12), (9, 4), (5, 8), (4, 9), (10, 13), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 340

-------------------------------------
TARGET system:
37 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                 
 5                          12                     
 6                      12   X  12                 
 7                  12   X   X   X  12             
 8              12   X   X   X   X   X  12         
 9          12   X   X   X   X   X   X   X  12     
10              12   X   X   X   X   X  12         
11                  12   X   X   X  12             
12                      12   X  12                 
13                          12                     
14                                                 
15                                                 

This is system split, groups are...
0
  [(8, 14), [(9, 14)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
37 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                 
 5                           ?                     
 6                       ?   0   ?                 
 7                   ?   0   0   0   ?             
 8               ?   0   0   0   0   0   -         
 9       X   ?   0   0   0   0   0   0   0   ?     
10               ?   0   0   0   0   0   -         
11                   ?   0   0   0   -             
12                       -   0   -                 
13                           ?                     
14                                                 
15                                                 

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                 
 5                           8                     
 6                       8   9   8                 
 7                   8   9  10   9   8             
 8               8   9  10  11  10   9   8         
 9       7   8   9  10  11  12  11  10   9   8     
10               8   9  10  11  10   9   8         
11                   8   9  10   9   8             
12                       8   9   8                 
13                           8                     
14                                                 
15                                                 

The system now has a total of 1112365722656250000000 options
The initial system score was 345
The maximum obtainable for the system is 347
The score gain were looking for is 2
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
bots_in_optional_moving_to_occupied = [(5, 9)]
bots_outside_system = [(4, 9)]
bots_outside_system_moving_to_optional  = [(4, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(6, 9)]
num_target_bots_in_optional = 12
num_target_bots_in_occupied = 25
current_bots_in_optional = [(10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5), (4, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (10, 10), (11, 8), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(5, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 1112365722656250000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10), (6, 8)], 'scores': [1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}


It took  8.197000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 13), (9, 13))
Move ((11, 9), (11, 9))
Move ((8, 7), (8, 7))
Move ((9, 5), (9, 5))
Move ((9, 6), (9, 6))
Move ((11, 7), (11, 7))
Move ((6, 8), (6, 8))
Move ((10, 10), (10, 10))
Move ((11, 8), (11, 8))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 13), (9, 13)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 13), (9, 13)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((10, 10), (10, 10)), ((11, 8), (11, 8)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 10), (7, 11)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(8, 10), (7, 10)], 'scores': [0, -1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(8, 10), (7, 10), (7, 11), (6, 10)], 'scores': [1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(10, 10) - {'options': [(10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 8), (6, 8), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(9, 12), (9, 13), (10, 12)], 'scores': [0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 14): {'options': [(9, 14)], 'scores': [1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 14) - {'options': [(9, 14)], 'scores': [1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
It took a total of 8.20 Ms for simplify_system to complete
-------------------------- running turn 78 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12)]
levels - {6: [(10, 14)], 7: [(7, 12), (9, 4), (5, 8), (4, 9), (10, 13), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      13                     
 6                  13   X  13                 
 7              13   X   X   X  13             
 8          13   X   X   X   X   X  13         
 9      13   X   X   X   X   X   X   X  13     
10          13   X   X   X   X   X  13         
11              13   X   X   X  13             
12                  13   X  13                 
13                      13                     
14                                             
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   ?   0   -                 
13                       ?                     
14                       X                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                       7                     
15                                             

The system now has a total of 5005645751953125000000 options
The initial system score was 347
The maximum obtainable for the system is 348
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5)]
bots_in_optional_moving_to_occupied = [(9, 13)]
bots_outside_system = [(9, 14)]
bots_outside_system_moving_to_optional  = [(9, 14)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 12)]
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (6, 8), (8, 12), (9, 5), (9, 14)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (6, 8), (8, 12), (9, 5)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 12), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12), (9, 13)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 13)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 5005645751953125000000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11)], 'scores': [1, 0, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (8, 12)], 'scores': [1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (10, 12), (8, 12)], 'scores': [1, -1, -1]}


It took  7.340000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((9, 7), (9, 7))
Move ((8, 11), (8, 11))
Move ((8, 7), (8, 7))
Move ((9, 5), (9, 5))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((11, 7), (11, 7))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((9, 7), (9, 7)), ((8, 11), (8, 11)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((7, 8), (7, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(12, 9), (13, 9), (12, 10)], 'scores': [0, -1, -1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(10, 7) - {'options': [(9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(8, 10), (8, 11), (7, 10)], 'scores': [0, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 0, -1, -1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [0, -1, -1, -1]}
(11, 7) - {'options': [(10, 7), (11, 7)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (8, 12)], 'scores': [1, 0]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(12, 8)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(12, 8)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(12, 8)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
It took a total of 7.34 Ms for simplify_system to complete
-------------------------- running turn 79 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {7: [(7, 12), (9, 4), (5, 8), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      13                     
 6                  13   X  13                 
 7              13   X   X   X  13             
 8          13   X   X   X   X   X  13         
 9      13   X   X   X   X   X   X   X  13     
10          13   X   X   X   X   X  13         
11              13   X   X   X  13             
12                  13   X  13                 
13                      13                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   ?         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   ?   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 93855857849121093750000 options
The initial system score was 348
The maximum obtainable for the system is 348
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 93855857849121093750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}


It took  6.715000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.71 Ms for simplify_system to complete
-------------------------- running turn 80 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {7: [(7, 12), (9, 4), (5, 8), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      13                     
 6                  13   X  13                 
 7              13   X   X   X  13             
 8          13   X   X   X   X   X  13         
 9      13   X   X   X   X   X   X   X  13     
10          13   X   X   X   X   X  13         
11              13   X   X   X  13             
12                  13   X  13                 
13                      13                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   ?         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   ?   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 93855857849121093750000 options
The initial system score was 348
The maximum obtainable for the system is 348
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 93855857849121093750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}


It took  6.770000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.77 Ms for simplify_system to complete
-------------------------- running turn 81 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {7: [(7, 12), (9, 4), (5, 8), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      13                     
 6                  13   X  13                 
 7              13   X   X   X  13             
 8          13   X   X   X   X   X  13         
 9      13   X   X   X   X   X   X   X  13     
10          13   X   X   X   X   X  13         
11              13   X   X   X  13             
12                  13   X  13                 
13                      13                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   ?         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   ?   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 93855857849121093750000 options
The initial system score was 348
The maximum obtainable for the system is 348
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 93855857849121093750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}


It took  6.720000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.72 Ms for simplify_system to complete
-------------------------- running turn 82 ---------------------------


=> INITIAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   X   -                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -     
11           -   X   X   X   X   -             
12               -   X   X   -                 
13                   -   X                     
14                       -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {7: [(7, 12), (9, 4), (5, 8), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                      13                     
 6                  13   X  13                 
 7              13   X   X   X  13             
 8          13   X   X   X   X   X  13         
 9      13   X   X   X   X   X   X   X  13     
10          13   X   X   X   X   X  13         
11              13   X   X   X  13             
12                  13   X  13                 
13                      13                     
14                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       ?                     
 6                   ?   0   ?                 
 7               ?   0   0   0   ?             
 8           ?   0   0   0   0   0   ?         
 9       ?   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   -         
11               ?   0   0   0   -             
12                   ?   0   -                 
13                       ?                     
14                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                                             
 5                       8                     
 6                   8   9   8                 
 7               8   9  10   9   8             
 8           8   9  10  11  10   9   8         
 9       8   9  10  11  12  11  10   9   8     
10           8   9  10  11  10   9   8         
11               8   9  10   9   8             
12                   8   9   8                 
13                       8                     
14                                             

The system now has a total of 93855857849121093750000 options
The initial system score was 348
The maximum obtainable for the system is 348
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 93855857849121093750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}


It took  6.691000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.69 Ms for simplify_system to complete
-------------------------- running turn 83 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               -                     
 5                           -   X   -                 
 6                       -   X   X   X   -             
 7                   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   X   -     
 9       X   -   X   X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   X   -   -     
11                   -   X   X   X   X   -             
12                       -   X   X   -                 
13                           -   X                     
14                               -                     

Awarded move for (3, 9)  to (4, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
38 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               -                     
 5                           -   X   -                 
 6                       -   X   X   X   -             
 7                   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   X   -     
 9               X   X   X   X   X   X   X   X   X     
10               -   X   X   X   X   X   X   -   -     
11                   -   X   X   X   X   -             
12                       -   X   X   -                 
13                           -   X                     
14                               -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 13
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {7: [(7, 12), (9, 4), (5, 8), (6, 7), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (13, 8), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 348

-------------------------------------
TARGET system:
38 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                     
 5                              13                     
 6                          13   X  13                 
 7                      13   X   X   X  13             
 8                  13   X   X   X   X   X  13         
 9              13   X   X   X   X   X   X   X  13     
10                  13   X   X   X   X   X  13         
11                      13   X   X   X  13             
12                          13   X  13                 
13                              13                     
14                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
38 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                     
 5                               ?                     
 6                           ?   0   ?                 
 7                       ?   0   0   0   ?             
 8                   ?   0   0   0   0   0   ?         
 9               ?   0   0   0   0   0   0   0   ?     
10                   ?   0   0   0   0   0   -         
11                       ?   0   0   0   -             
12                           ?   0   -                 
13                               ?                     
14                                                     

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                     
 5                               8                     
 6                           8   9   8                 
 7                       8   9  10   9   8             
 8                   8   9  10  11  10   9   8         
 9               8   9  10  11  12  11  10   9   8     
10                   8   9  10  11  10   9   8         
11                       8   9  10   9   8             
12                           8   9   8                 
13                               8                     
14                                                     

The system now has a total of 93855857849121093750000 options
The initial system score was 354
The maximum obtainable for the system is 355
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 13
num_target_bots_in_occupied = 25
current_bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_optional_that_can_move_to_occupied = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]

Optional squares exist

System result = ...
The system has a total of 93855857849121093750000 options
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}


It took  7.906000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((13, 9), (13, 9))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((13, 9), (13, 9)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9)], 'scores': [1, 0]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10)], 'scores': [1, 1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8)], 'scores': [1, 1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.91 Ms for simplify_system to complete
-------------------------- running turn 84 ---------------------------


=> INITIAL
BOT Positions:
39 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                           -                     
 5                       -   X   -                 
 6                   -   X   X   X   -             
 7               -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   X   X   -     
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   -   -     
11               -   X   X   X   X   -             
12                   -   X   X   -                 
13                       -   X                     
14                           -                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
39 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                           -                     
 5                       -   X   -                 
 6                   -   X   X   X   -             
 7               -   X   X   X   X   X   -         
 8           -   X   X   X   X   X   X   X   -     
 9       X   X   X   X   X   X   X   X   X   X     
10       -   -   X   X   X   X   X   X   -   -     
11               -   X   X   X   X   -             
12                   -   X   X   -                 
13                       -   X                     
14                           -                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 14
optional - [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(4, 10)], 7: [(7, 12), (9, 4), (5, 8), (4, 9), (8, 5), (7, 6), (12, 7), (13, 10), (9, 14), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 356

-------------------------------------
TARGET system:
39 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                 
 5                          14                     
 6                      14   X  14                 
 7                  14   X   X   X  14             
 8              14   X   X   X   X   X  14         
 9          14   X   X   X   X   X   X   X  14     
10              14   X   X   X   X   X  14         
11                  14   X   X   X  14             
12                      14   X  14                 
13                          14                     
14                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
39 participants
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                 
 5                           ?                     
 6                       ?   0   ?                 
 7                   ?   0   0   0   ?             
 8               ?   0   0   0   0   0   ?         
 9       X   ?   0   0   0   0   0   0   0   ?     
10               ?   0   0   0   0   0   -         
11                   ?   0   0   0   -             
12                       ?   0   -                 
13                           ?                     
14                                                 

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  
 4                                                 
 5                           8                     
 6                       8   9   8                 
 7                   8   9  10   9   8             
 8               8   9  10  11  10   9   8         
 9       7   8   9  10  11  12  11  10   9   8     
10               8   9  10  11  10   9   8         
11                   8   9  10   9   8             
12                       8   9   8                 
13                           8                     
14                                                 

The system now has a total of 10011291503906250000000 options
The initial system score was 355
The maximum obtainable for the system is 356
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(5, 9), (10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
bots_in_optional_moving_to_occupied = [(5, 9)]
bots_outside_system = [(4, 9)]
bots_outside_system_moving_to_optional  = [(4, 9)]
bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(6, 9)]
num_target_bots_in_optional = 14
num_target_bots_in_occupied = 25
current_bots_in_optional = [(10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8), (4, 9)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 6), (7, 7), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_in_occupied = [(6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9)]
current_bots_in_occupied_that_can_move_to_optional = [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(6, 9), (6, 9), (10, 11), (9, 8), (8, 9), (12, 9), (10, 8), (11, 10), (10, 7), (8, 10), (9, 11), (7, 10), (10, 9), (9, 7), (8, 11), (11, 9), (9, 10), (8, 7), (9, 6), (7, 9), (11, 8), (10, 10), (9, 9), (8, 8), (7, 8), (9, 12), (5, 9)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(5, 9)]
So lets move one of [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (7, 8), (9, 12)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 10011291503906250000000 options
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9), (6, 10), (6, 8)], 'scores': [1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11)], 'scores': [1, 1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13)], 'scores': [1, 0]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12)], 'scores': [1, 1, 0]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}


It took  7.929000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((11, 9), (11, 9))
Move ((8, 7), (8, 7))
Move ((9, 5), (9, 5))
Move ((9, 6), (9, 6))
Move ((11, 7), (11, 7))
Move ((6, 8), (6, 8))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((12, 8), (12, 8))
Works... [((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11)], 'scores': [1, 0, -1]}
(9, 8) - {'options': [(9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6)], 'scores': [1, 1, 0]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7)], 'scores': [1, 1, 0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 10), (7, 11)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10), (6, 10)], 'scores': [1, 0]}
(8, 10) - {'options': [(8, 10), (7, 10)], 'scores': [0, -1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(8, 10), (7, 10), (7, 11), (6, 10)], 'scores': [1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6)], 'scores': [1, 1, 0]}
(10, 9) - {'options': [(10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5)], 'scores': [1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 8)], 'scores': [1, 0]}
(8, 12) - {'options': [(9, 12)], 'scores': [1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 0, -1, -1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9)], 'scores': [1, 0]}
(7, 8) - {'options': [(8, 8), (7, 8), (6, 8), (7, 7)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(10, 12)], 'scores': [-1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8)], 'scores': [1, 1, 0]}
done
system is now =
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(9, 12)], 'scores': [1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(10, 12)], 'scores': [-1]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(9, 12)], 'scores': [1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(10, 12)], 'scores': [-1]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(6, 9)], 'scores': [1]}, (6, 9): {'options': [(7, 9)], 'scores': [1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 9): {'options': [(9, 9)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(5, 9)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 12)], 'scores': [-1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(8, 9)], 'scores': [1]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(9, 12)], 'scores': [1]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(10, 12)], 'scores': [-1]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(6, 9)], 'scores': [1]}
(6, 9) - {'options': [(7, 9)], 'scores': [1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 9) - {'options': [(9, 9)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(5, 9)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 12)], 'scores': [-1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(8, 9)], 'scores': [1]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(9, 12)], 'scores': [1]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(10, 12)], 'scores': [-1]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.93 Ms for simplify_system to complete
-------------------------- running turn 85 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -   X                     
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   X   -   X         
 9   -   X   X   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   X   -   -             
11           -   X   X   X   X   -                     
12               -   X   X   X   -                     
13                   -   X   -                         
14                       -                             
15                       X                             
16                                                     

Awarded move for (9, 15)  to (9, 14)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
42 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   X   -   X                     
 6               -   X   X   X   -                     
 7           -   X   X   X   X   X   -                 
 8       -   X   X   X   X   X   X   X   -   X         
 9   -   X   X   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   X   -   -             
11           -   X   X   X   X   -                     
12               -   X   X   X   -                     
13                   -   X   -                         
14                                                     
15                                                     
16                                                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (11, 5), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (15, 9), (9, 5), (7, 8), (14, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 1
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (10, 13), (11, 12), (7, 6), (12, 7), (13, 10), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (11, 5), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (15, 9), (9, 5), (7, 8), (14, 8), (9, 12), (12, 8)]
levels - {6: [(11, 5), (15, 9), (14, 8)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (10, 13), (11, 12), (7, 6), (12, 7), (13, 10), (6, 11), (13, 8), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 379

-------------------------------------
TARGET system:
42 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       1                             
 5                   1   X   1                         
 6               1   X   X   X   1                     
 7           1   X   X   X   X   X   1                 
 8       1   X   X   X   X   X   X   X   1             
 9   1   X   X   X   X   X   X   X   X   X   1         
10       1   X   X   X   X   X   X   X   1             
11           1   X   X   X   X   X                     
12               1   X   X   X   1                     
13                   1   X   1                         
14                                                     
15                                                     
16                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
42 participants
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       -                             
 5                   -   0   -   X                     
 6               -   0   0   0   -                     
 7           -   0   0   0   0   0   -                 
 8       -   0   0   0   0   0   0   0   -   X         
 9   -   0   0   0   0   0   0   0   0   0   -   X     
10       -   0   0   0   0   0   0   =   -             
11           -   0   0   0   0   =                     
12               -   0   0   0   -                     
13                   -   0   -                         
14                                                     
15                                                     
16                                                     

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                       7                             
 5                   7   8   7   6                     
 6               7   8   9   8   7                     
 7           7   8   9  10   9   8   7                 
 8       7   8   9  10  11  10   9   8   7   6         
 9   7   8   9  10  11  12  11  10   9   8   7   6     
10       7   8   9  10  11  10   9   8   7             
11           7   8   9  10   9   8                     
12               7   8   9   8   7                     
13                   7   8   7                         
14                                                     
15                                                     
16                                                     

The system now has a total of 894069671630859375000000000 options
The initial system score was 380
The maximum obtainable for the system is 386
The score gain were looking for is 6
The system_score_gain_required = 5

bots_in_optional = []
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(11, 5), (15, 9), (14, 8)]
bots_outside_system_moving_to_optional  = [(11, 5), (15, 9), (14, 8)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 1
num_target_bots_in_occupied = 41
current_bots_in_optional = [(11, 5), (15, 9), (14, 8)]
current_bots_in_optional_that_can_move_to_occupied = []
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

ALERT! - There -2 bots too many that will have to stay in optional squares
Occupied squares that need someone assigned are
[(12, 10), (11, 11)]
Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied
len(current_bots_in_optional_that_can_move_to_occupied) = 0
Deficit = 2
failed_occupied_coord_scores = [8, 8]
optional_square_score = 7
The max gain should now be reduced by -2
score_gain_required now = 4
score_absolute_max now = 384
unoccupied squares exist ... [(12, 10), (11, 11)]
We need to find paths between those and 2 bots
There are 0 bots that can be used... []
Match sets generated = [[]]

Looking at []
Finished generating path sets
[]

Checking match_set, []
Which generated the set_paths []
Checking ()
Works... ()
Looking good, implementing set
making moves ()
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(11, 5) - {'options': [(10, 5), (11, 6)], 'scores': [1, 1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7)], 'scores': [1, 1, 0, -1]}
done
system is now =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(11, 5) - {'options': [(10, 5), (11, 6)], 'scores': [1, 1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7)], 'scores': [1, 1, 0, -1]}
after returning, systemm is now =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(11, 5) - {'options': [(10, 5), (11, 6)], 'scores': [1, 1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7)], 'scores': [1, 1, 0, -1]}
It worked

System result = ...
The system has a total of 894069671630859375000000000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(11, 5) - {'options': [(10, 5), (11, 6)], 'scores': [1, 1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7)], 'scores': [1, 1, 0, -1]}


It took  10.764000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((8, 10), (8, 10))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((10, 12), (10, 12))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 13), (9, 13))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 5), (9, 5))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((11, 7), (11, 7))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((9, 9), (9, 9))
Move ((10, 10), (10, 10))
Move ((8, 8), (8, 8))
Move ((13, 9), (13, 9))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((10, 12), (10, 12)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 13), (9, 13)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((8, 10), (8, 10)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((10, 12), (10, 12)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 13), (9, 13)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 5), (9, 5)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((11, 7), (11, 7)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((9, 9), (9, 9)), ((10, 10), (10, 10)), ((8, 8), (8, 8)), ((13, 9), (13, 9)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (11, 6)], 'scores': [1, 1, 0, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7)], 'scores': [1, 1, 0, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (14, 8): {'options': [(13, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 4
this possibility has a score of 4
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (14, 8): {'options': [(13, 8)], 'scores': [1]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(14, 8) - {'options': [(13, 8)], 'scores': [1]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 10.76 Ms for simplify_system to complete
-------------------------- running turn 86 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -   -                     
 5                   -   X   X                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -   -         
 8       -   X   X   X   X   X   X   X   X         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -                 
12               -   X   X   X   -                 
13                   -   X   -                     
14                       X   -                     
15                                                 


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -   -                     
 5                   -   X   X                     
 6               -   X   X   X   -                 
 7           -   X   X   X   X   X   -   -         
 8       -   X   X   X   X   X   X   X   X         
 9   -   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   -   -   -     
11           -   X   X   X   X   -                 
12               -   X   X   X   -                 
13                   -   X   -                     
14                       X   -                     
15                                                 

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (13, 8), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (10, 13), (11, 12), (7, 6), (9, 4), (5, 8), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (6, 8), (8, 12), (13, 9), (9, 13), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (13, 8), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (14, 10), (10, 4), (13, 7)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (4, 9), (10, 13), (11, 12), (7, 6), (9, 4), (5, 8), (12, 7), (13, 10), (9, 14), (6, 11), (6, 7), (10, 5), (5, 10), (8, 13), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (6, 8), (8, 12), (13, 9), (9, 13), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (8, 7), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       2                         
 5                   2   X   2                     
 6               2   X   X   X   2                 
 7           2   X   X   X   X   X   2             
 8       2   X   X   X   X   X   X   X   2         
 9   2   X   X   X   X   X   X   X   X   X   2     
10       2   X   X   X   X   X   X   X   2         
11           2   X   X   X   X   X                 
12               2   X   X   X   2                 
13                   2   X   2                     
14                       2                         
15                                                 


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       -                         
 5                   -   0   ?                     
 6               -   0   0   0   -                 
 7           -   0   0   0   0   0   -             
 8       -   0   0   0   0   0   0   0   ?         
 9   -   0   0   0   0   0   0   0   0   0   ?     
10       -   0   0   0   0   0   0   =   -         
11           -   0   0   0   0   =                 
12               -   0   0   0   -                 
13                   -   0   -                     
14                       ?                         
15                                                 

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  15  
 4                       7                         
 5                   7   8   7                     
 6               7   8   9   8   7                 
 7           7   8   9  10   9   8   7             
 8       7   8   9  10  11  10   9   8   7         
 9   7   8   9  10  11  12  11  10   9   8   7     
10       7   8   9  10  11  10   9   8   7         
11           7   8   9  10   9   8                 
12               7   8   9   8   7                 
13                   7   8   7                     
14                       7                         
15                                                 

The system now has a total of 25145709514617919921875000000 options
The initial system score was 384
The maximum obtainable for the system is 386
The score gain were looking for is 2
The system_score_gain_required = 2

bots_in_optional = [(13, 8), (14, 9), (9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(13, 8), (14, 9), (9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(13, 8), (14, 9), (9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = [(12, 10), (11, 11)]
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (8, 11), (11, 9), (9, 10), (8, 7), (13, 9), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist
2 bots need to move out of optional
And 2 bots need to move into occupied
len(current_bots_in_optional_that_can_move_to_occupied) = 4
Deficit = -2
It should be possible to make this happen
Like by doing one from 2 of the following solutions
Match sets generated = [[((13, 8), (12, 10)), ((14, 9), (11, 11))], [((13, 8), (11, 11)), ((14, 9), (12, 10))], [((13, 8), (12, 10)), ((9, 14), (11, 11))], [((13, 8), (11, 11)), ((9, 14), (12, 10))], [((13, 8), (12, 10)), ((10, 5), (11, 11))], [((13, 8), (11, 11)), ((10, 5), (12, 10))], [((14, 9), (12, 10)), ((9, 14), (11, 11))], [((14, 9), (11, 11)), ((9, 14), (12, 10))], [((14, 9), (12, 10)), ((10, 5), (11, 11))], [((14, 9), (11, 11)), ((10, 5), (12, 10))], [((9, 14), (12, 10)), ((10, 5), (11, 11))], [((9, 14), (11, 11)), ((10, 5), (12, 10))]]

Looking at [((13, 8), (12, 10)), ((14, 9), (11, 11))]
Find paths between (13, 8) and (12, 10)
2 paths = [[(13, 8), (13, 9), (12, 9), (12, 10)], [(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)]]
Find paths between (14, 9) and (11, 11)
1 paths = [[(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)]]
Finished generating path sets
[[[(13, 8), (13, 9), (12, 9), (12, 10)], [(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)]], [[(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)]]]

Checking match_set, [((13, 8), (12, 10)), ((14, 9), (11, 11))]
Which generated the set_paths [[[(13, 8), (13, 9), (12, 9), (12, 10)], [(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)]], [[(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)]]]
Checking ([(13, 8), (13, 9), (12, 9), (12, 10)], [(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)])
Move ((13, 8), (13, 9))
Move ((13, 9), (12, 9))
Move ((12, 9), (12, 10))
Move ((14, 9), (13, 9))
Referenced non-available move ((14, 9), (13, 9))
Checking ([(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)], [(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)])
Move ((13, 8), (12, 8))
Move ((12, 8), (11, 8))
Move ((11, 8), (12, 9))
Referenced non-available move ((11, 8), (12, 9))
Tried all moves but none worked

Looking at [((13, 8), (11, 11)), ((14, 9), (12, 10))]
Find paths between (13, 8) and (11, 11)
3 paths = [[(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (12, 9), (11, 9), (11, 10), (11, 11)]]
Find paths between (14, 9) and (12, 10)
1 paths = [[(14, 9), (13, 9), (12, 9), (12, 10)]]
Finished generating path sets
[[[(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (12, 9), (11, 9), (11, 10), (11, 11)]], [[(14, 9), (13, 9), (12, 9), (12, 10)]]]

Checking match_set, [((13, 8), (11, 11)), ((14, 9), (12, 10))]
Which generated the set_paths [[[(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (12, 9), (11, 9), (11, 10), (11, 11)]], [[(14, 9), (13, 9), (12, 9), (12, 10)]]]
Checking ([(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
Move ((13, 8), (13, 9))
Move ((13, 9), (12, 9))
Move ((12, 9), (11, 9))
Move ((11, 9), (11, 10))
Move ((11, 10), (11, 11))
Move ((14, 9), (13, 9))
Referenced non-available move ((14, 9), (13, 9))
Checking ([(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
Move ((13, 8), (12, 8))
Move ((12, 8), (11, 8))
Move ((11, 8), (11, 9))
Move ((11, 9), (11, 10))
Move ((11, 10), (11, 11))
Move ((14, 9), (13, 9))
Move ((13, 9), (12, 9))
Move ((12, 9), (12, 10))
Works... ([(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
Looking good, implementing set
making moves ([(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(13, 9), (12, 8), (13, 8)], 'scores': [1, 1, 0]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10)], 'scores': [1, 0, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
after returning, systemm is now =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
The movements were made
unoccupied squares exist ... [(12, 10), (11, 11)]
We need to find paths between those and 2 bots
There are 4 bots that can be used... [(13, 8), (14, 9), (9, 14), (10, 5)]
Match sets generated = [[((13, 8), (12, 10)), ((14, 9), (11, 11))], [((13, 8), (11, 11)), ((14, 9), (12, 10))], [((13, 8), (12, 10)), ((9, 14), (11, 11))], [((13, 8), (11, 11)), ((9, 14), (12, 10))], [((13, 8), (12, 10)), ((10, 5), (11, 11))], [((13, 8), (11, 11)), ((10, 5), (12, 10))], [((14, 9), (12, 10)), ((9, 14), (11, 11))], [((14, 9), (11, 11)), ((9, 14), (12, 10))], [((14, 9), (12, 10)), ((10, 5), (11, 11))], [((14, 9), (11, 11)), ((10, 5), (12, 10))], [((9, 14), (12, 10)), ((10, 5), (11, 11))], [((9, 14), (11, 11)), ((10, 5), (12, 10))]]

Looking at [((13, 8), (12, 10)), ((14, 9), (11, 11))]
Find paths between (13, 8) and (12, 10)
2 paths = [[(13, 8), (13, 9), (12, 9), (12, 10)], [(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)]]
Find paths between (14, 9) and (11, 11)
1 paths = [[(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)]]
Finished generating path sets
[[[(13, 8), (13, 9), (12, 9), (12, 10)], [(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)]], [[(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)]]]

Checking match_set, [((13, 8), (12, 10)), ((14, 9), (11, 11))]
Which generated the set_paths [[[(13, 8), (13, 9), (12, 9), (12, 10)], [(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)]], [[(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)]]]
Checking ([(13, 8), (13, 9), (12, 9), (12, 10)], [(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)])
Move ((13, 8), (13, 9))
Referenced non-available move ((13, 8), (13, 9))
Checking ([(13, 8), (12, 8), (11, 8), (12, 9), (12, 10)], [(14, 9), (13, 9), (12, 9), (11, 9), (11, 8), (11, 10), (11, 11)])
Move ((13, 8), (12, 8))
Move ((12, 8), (11, 8))
Move ((11, 8), (12, 9))
Referenced non-available move ((11, 8), (12, 9))
Tried all moves but none worked

Looking at [((13, 8), (11, 11)), ((14, 9), (12, 10))]
Find paths between (13, 8) and (11, 11)
3 paths = [[(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (12, 9), (11, 9), (11, 10), (11, 11)]]
Find paths between (14, 9) and (12, 10)
1 paths = [[(14, 9), (13, 9), (12, 9), (12, 10)]]
Finished generating path sets
[[[(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (12, 9), (11, 9), (11, 10), (11, 11)]], [[(14, 9), (13, 9), (12, 9), (12, 10)]]]

Checking match_set, [((13, 8), (11, 11)), ((14, 9), (12, 10))]
Which generated the set_paths [[[(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(13, 8), (12, 8), (12, 9), (11, 9), (11, 10), (11, 11)]], [[(14, 9), (13, 9), (12, 9), (12, 10)]]]
Checking ([(13, 8), (13, 9), (12, 9), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
Move ((13, 8), (13, 9))
Referenced non-available move ((13, 8), (13, 9))
Checking ([(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
Move ((13, 8), (12, 8))
Move ((12, 8), (11, 8))
Move ((11, 8), (11, 9))
Move ((11, 9), (11, 10))
Move ((11, 10), (11, 11))
Move ((14, 9), (13, 9))
Move ((13, 9), (12, 9))
Move ((12, 9), (12, 10))
Works... ([(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
Looking good, implementing set
making moves ([(13, 8), (12, 8), (11, 8), (11, 9), (11, 10), (11, 11)], [(14, 9), (13, 9), (12, 9), (12, 10)])
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
after returning, systemm is now =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
It worked

System result = ...
The system has a total of 146484375000000000000000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}


It took  42.526000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((10, 8), (10, 8))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((8, 11), (8, 11))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((10, 8), (10, 8)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((10, 8), (10, 8)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((8, 11), (8, 11)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (10, 12)], 'scores': [1, 1, 0, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12)], 'scores': [1, 1, 0, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (10, 7)], 'scores': [1, 1, 0, -1]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (10, 10)], 'scores': [1, 0, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (10, 11)], 'scores': [1, 1, 0, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (13, 8): {'options': [(12, 8)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 10)], 'scores': [-1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 11)], 'scores': [-1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(11, 8)], 'scores': [1]}}]
checking possibility for score of 2
this possibility has a score of 2
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (13, 8): {'options': [(12, 8)], 'scores': [1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(13, 9)], 'scores': [1]}, (12, 9): {'options': [(12, 10)], 'scores': [-1]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 11)], 'scores': [-1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 10)], 'scores': [-1]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (13, 9): {'options': [(12, 9)], 'scores': [1]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 9)], 'scores': [1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(11, 8)], 'scores': [1]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(13, 8) - {'options': [(12, 8)], 'scores': [1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(13, 9)], 'scores': [1]}
(12, 9) - {'options': [(12, 10)], 'scores': [-1]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 11)], 'scores': [-1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 10)], 'scores': [-1]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(13, 9) - {'options': [(12, 9)], 'scores': [1]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 9)], 'scores': [1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(11, 8)], 'scores': [1]}
It took a total of 42.53 Ms for simplify_system to complete
-------------------------- running turn 87 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 174622982740402221679687500000 options
The initial system score was 386
The maximum obtainable for the system is 386
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 174622982740402221679687500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.082000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.08 Ms for simplify_system to complete
-------------------------- running turn 88 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 174622982740402221679687500000 options
The initial system score was 386
The maximum obtainable for the system is 386
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 174622982740402221679687500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.206000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.21 Ms for simplify_system to complete
-------------------------- running turn 89 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 174622982740402221679687500000 options
The initial system score was 386
The maximum obtainable for the system is 386
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 174622982740402221679687500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.306000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.31 Ms for simplify_system to complete
-------------------------- running turn 90 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 174622982740402221679687500000 options
The initial system score was 386
The maximum obtainable for the system is 386
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 174622982740402221679687500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.168000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.17 Ms for simplify_system to complete
-------------------------- running turn 91 ---------------------------


=> INITIAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 174622982740402221679687500000 options
The initial system score was 386
The maximum obtainable for the system is 386
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 174622982740402221679687500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.338000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.34 Ms for simplify_system to complete
-------------------------- running turn 92 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                       -                     
16                       X                     
17                                             

Awarded move for (9, 16)  to (9, 15)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             
16                                             
17                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 2
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 386

-------------------------------------
TARGET system:
43 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       2                     
 5                   2   X   2                 
 6               2   X   X   X   2             
 7           2   X   X   X   X   X   2         
 8       2   X   X   X   X   X   X   X   2     
 9   2   X   X   X   X   X   X   X   X   X   2 
10       2   X   X   X   X   X   X   X   2     
11           2   X   X   X   X   X   2         
12               2   X   X   X   2             
13                   2   X   2                 
14                       2                     
15                                             
16                                             
17                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
43 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             
16                                             
17                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             
16                                             
17                                             

The system now has a total of 174622982740402221679687500000 options
The initial system score was 391
The maximum obtainable for the system is 392
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 2
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 174622982740402221679687500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 16) - {'options': [(9, 15)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.189000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 16) - {'options': [(9, 15)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 16) - {'options': [(9, 15)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 16): {'options': [(9, 15)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (9, 16): {'options': [(9, 15)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(9, 16) - {'options': [(9, 15)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.19 Ms for simplify_system to complete
-------------------------- running turn 93 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                       X   -                 
16                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       -   X   X   X   X   X   X   X   -     
11           -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                       X   -                 
16                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (9, 15), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (6, 8), (8, 12), (13, 9), (9, 13), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (9, 15), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {5: [(10, 15)], 6: [(9, 15), (10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (6, 8), (8, 12), (13, 9), (9, 13), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             
16                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       -   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                       X                     
16                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                       6                     
16                                             

The system now has a total of 41909515857696533203125000000 options
The initial system score was 392
The maximum obtainable for the system is 393
The score gain were looking for is 1
The system_score_gain_required = 1

bots_in_optional = [(9, 14), (10, 5)]
bots_in_optional_moving_to_occupied = [(9, 14)]
bots_outside_system = [(9, 15)]
bots_outside_system_moving_to_optional  = [(9, 15)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = [(9, 13)]
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(10, 5), (9, 15)]
current_bots_in_optional_that_can_move_to_occupied = [(10, 5)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8), (9, 14)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(9, 13), (5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8), (9, 14)]

Optional squares exist
1 bots need to move into optional
And 1 bots need to move out of occupied
LOGIC NEEDS ATTENTION ON MOVE
bots_in_optional_moving_to_occupied = [(9, 14)]
So lets move one of [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
Who is near the entering bot (above), into the nearest available optional square

System result = ...
The system has a total of 41909515857696533203125000000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (10, 13), (8, 13)], 'scores': [1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.015000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((10, 6), (10, 6))
Move ((8, 10), (8, 10))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((11, 10), (11, 10))
Move ((9, 5), (9, 5))
Move ((6, 10), (6, 10))
Move ((10, 12), (10, 12))
Move ((7, 10), (7, 10))
Move ((8, 11), (8, 11))
Move ((12, 10), (12, 10))
Move ((10, 5), (10, 5))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Move ((12, 8), (12, 8))
Works... [((10, 11), (10, 11)), ((11, 11), (11, 11)), ((10, 6), (10, 6)), ((8, 10), (8, 10)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((9, 5), (9, 5)), ((6, 10), (6, 10)), ((10, 12), (10, 12)), ((7, 10), (7, 10)), ((8, 11), (8, 11)), ((12, 10), (12, 10)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((11, 11), (11, 11)), ((10, 6), (10, 6)), ((8, 10), (8, 10)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((11, 10), (11, 10)), ((9, 5), (9, 5)), ((6, 10), (6, 10)), ((10, 12), (10, 12)), ((7, 10), (7, 10)), ((8, 11), (8, 11)), ((12, 10), (12, 10)), ((10, 5), (10, 5)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6), (10, 5), (11, 6)], 'scores': [0, -1, -1]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 10) - {'options': [(8, 10), (8, 11), (7, 10)], 'scores': [0, -1, -1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [0, -1, -1, -1]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 0, -1, -1]}
(9, 5) - {'options': [(9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [0, -1, -1, -1]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(7, 10), (6, 10), (6, 11)], 'scores': [1, 0, -1]}
(10, 12) - {'options': [(10, 11), (10, 12), (11, 12), (10, 13)], 'scores': [1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(8, 10), (7, 10), (7, 11), (6, 10)], 'scores': [1, 0, -1, -1]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 0, -1, -1]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(6, 8), (6, 7), (5, 8)], 'scores': [0, -1, -1]}
(8, 12) - {'options': [(8, 11), (8, 12), (7, 12), (8, 13)], 'scores': [1, 0, -1, -1]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10), (11, 10), (10, 11)], 'scores': [0, -1, -1]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(12, 8) - {'options': [(12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(10, 8)], 'scores': [-1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 8)], 'scores': [1]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 9)], 'scores': [1]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (9, 15): {'options': [(9, 14)], 'scores': [1]}, (10, 7): {'options': [(9, 7)], 'scores': [1]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(9, 10)], 'scores': [1]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 7)], 'scores': [1]}, (10, 9): {'options': [(11, 9)], 'scores': [-1]}, (9, 7): {'options': [(9, 6)], 'scores': [-1]}, (9, 14): {'options': [(9, 13)], 'scores': [1]}, (11, 7): {'options': [(10, 7)], 'scores': [1]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 8)], 'scores': [-1]}, (9, 10): {'options': [(9, 9)], 'scores': [1]}, (8, 7): {'options': [(7, 7)], 'scores': [-1]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(8, 6)], 'scores': [-1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 12)], 'scores': [1]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 7)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(8, 9)], 'scores': [-1]}, (8, 8): {'options': [(9, 8)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (9, 12): {'options': [(9, 11)], 'scores': [1]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(10, 8)], 'scores': [-1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 8)], 'scores': [1]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 9)], 'scores': [1]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(9, 15) - {'options': [(9, 14)], 'scores': [1]}
(10, 7) - {'options': [(9, 7)], 'scores': [1]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(9, 10)], 'scores': [1]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 7)], 'scores': [1]}
(10, 9) - {'options': [(11, 9)], 'scores': [-1]}
(9, 7) - {'options': [(9, 6)], 'scores': [-1]}
(9, 14) - {'options': [(9, 13)], 'scores': [1]}
(11, 7) - {'options': [(10, 7)], 'scores': [1]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 8)], 'scores': [-1]}
(9, 10) - {'options': [(9, 9)], 'scores': [1]}
(8, 7) - {'options': [(7, 7)], 'scores': [-1]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(8, 6)], 'scores': [-1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12)], 'scores': [1]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 7)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(8, 9)], 'scores': [-1]}
(8, 8) - {'options': [(9, 8)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(9, 12) - {'options': [(9, 11)], 'scores': [1]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.01 Ms for simplify_system to complete
-------------------------- running turn 94 ---------------------------


=> INITIAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -   -                 
 5                   -   X   X                 
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(5, 11), (10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       ?   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 options
The initial system score was 393
The maximum obtainable for the system is 393
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  6.619000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((5, 10), (5, 10))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 6.62 Ms for simplify_system to complete
-------------------------- running turn 95 ---------------------------


=> INITIAL
BOT Positions:
45 participants
     4   5   6   7   8   9  10  11  12  13  14  
 3                                             
 4                       -   -   X             
 5                   -   X   X   -             
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
45 participants
     4   5   6   7   8   9  10  11  12  13  14  
 3                                             
 4                       -   -   X             
 5                   -   X   X   -             
 6               -   X   X   X   -             
 7           -   X   X   X   X   X   -         
 8       -   X   X   X   X   X   X   X   -     
 9   -   X   X   X   X   X   X   X   X   X   - 
10       X   X   X   X   X   X   X   X   -     
11       -   -   X   X   X   X   X   -         
12               -   X   X   X   -             
13                   -   X   -                 
14                       X   -                 
15                                             

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (11, 4), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
Determining ideal outcome again as the result changed
outcome = 
num_optional - 3
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(11, 5), (5, 11), (10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (4, 9), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (11, 7), (6, 8), (8, 12), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 393

-------------------------------------
TARGET system:
44 participants
()
     4   5   6   7   8   9  10  11  12  13  14  
 3                                             
 4                       3                     
 5                   3   X   3                 
 6               3   X   X   X   3             
 7           3   X   X   X   X   X   3         
 8       3   X   X   X   X   X   X   X   3     
 9   3   X   X   X   X   X   X   X   X   X   3 
10       3   X   X   X   X   X   X   X   3     
11           3   X   X   X   X   X   3         
12               3   X   X   X   3             
13                   3   X   3                 
14                       3                     
15                                             

This is system split, groups are...
0
  [(11, 4), [(11, 5)], [1]]



-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
44 participants
     4   5   6   7   8   9  10  11  12  13  14  
 3                                             
 4                       -                     
 5                   -   0   ?                 
 6               -   0   0   0   -             
 7           -   0   0   0   0   0   -         
 8       -   0   0   0   0   0   0   0   -     
 9   -   0   0   0   0   0   0   0   0   0   - 
10       ?   0   0   0   0   0   0   0   -     
11           -   0   0   0   0   0   -         
12               -   0   0   0   -             
13                   -   0   -                 
14                       ?                     
15                                             

Cell Scores:
     4   5   6   7   8   9  10  11  12  13  14  
 3                                             
 4                       7                     
 5                   7   8   7                 
 6               7   8   9   8   7             
 7           7   8   9  10   9   8   7         
 8       7   8   9  10  11  10   9   8   7     
 9   7   8   9  10  11  12  11  10   9   8   7 
10       7   8   9  10  11  10   9   8   7     
11           7   8   9  10   9   8   7         
12               7   8   9   8   7             
13                   7   8   7                 
14                       7                     
15                                             

The system now has a total of 523868948221206665039062500000 options
The initial system score was 398
The maximum obtainable for the system is 399
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(9, 14), (10, 5), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 3
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 523868948221206665039062500000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(11, 4) - {'options': [(11, 5)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.321000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((5, 10), (5, 10))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(11, 4) - {'options': [(11, 5)], 'scores': [1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(11, 4) - {'options': [(11, 5)], 'scores': [1]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (11, 4): {'options': [(11, 5)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (11, 4): {'options': [(11, 5)], 'scores': [1]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(11, 4) - {'options': [(11, 5)], 'scores': [1]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.32 Ms for simplify_system to complete
-------------------------- running turn 96 ---------------------------


=> INITIAL
BOT Positions:
47 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               -   -                 
 5                           -   X   X   X   -         
 6                       -   X   X   X   -             
 7               X   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   X   -     
 9       X   -   X   X   X   X   X   X   X   X   X   - 
10               X   X   X   X   X   X   X   X   -     
11               -   -   X   X   X   X   X   -         
12                       -   X   X   X   -             
13                           -   X   -                 
14                               X   -                 
15                                                     

Awarded move for (3, 9)  to (4, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
46 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               -   -                 
 5                           -   X   X   X   -         
 6                       -   X   X   X   -             
 7               X   -   X   X   X   X   X   -         
 8               -   X   X   X   X   X   X   X   -     
 9               X   X   X   X   X   X   X   X   X   - 
10               X   X   X   X   X   X   X   X   -     
11               -   -   X   X   X   X   X   -         
12                       -   X   X   X   -             
13                           -   X   -                 
14                               X   -                 
15                                                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (11, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (5, 7), (9, 9), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 5
optional - [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (12, 9), (11, 10), (8, 7), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (6, 8), (8, 12), (13, 9), (9, 13), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (11, 5), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (5, 7), (9, 9), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {5: [(12, 5)], 6: [(5, 7), (11, 5), (5, 11), (10, 14), (10, 4)], 7: [(7, 12), (8, 5), (9, 4), (14, 9), (5, 8), (11, 12), (7, 6), (13, 10), (9, 14), (6, 11), (10, 13), (13, 8), (12, 11), (6, 7), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (11, 7), (8, 6), (6, 8), (8, 12), (13, 9), (9, 13), (12, 8)], 9: [(6, 9), (10, 11), (12, 9), (11, 10), (8, 7), (10, 7), (7, 10), (8, 11), (9, 6), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 407

-------------------------------------
TARGET system:
46 participants
()
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               5                     
 5                           5   X   5                 
 6                       5   X   X   X   5             
 7                   5   X   X   X   X   X   5         
 8               5   X   X   X   X   X   X   X   5     
 9               X   X   X   X   X   X   X   X   X   5 
10               5   X   X   X   X   X   X   X   5     
11                   5   X   X   X   X   X   5         
12                       5   X   X   X   5             
13                           5   X   5                 
14                               5                     
15                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
46 participants
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               -                     
 5                           -   0   ?   X             
 6                       -   0   0   0   -             
 7               X   -   0   0   0   0   0   -         
 8               -   0   0   0   0   0   0   0   -     
 9               0   0   0   0   0   0   0   0   0   - 
10               ?   0   0   0   0   0   0   0   -     
11                   -   0   0   0   0   0   -         
12                       -   0   0   0   -             
13                           -   0   -                 
14                               ?                     
15                                                     

Cell Scores:
     2   3   4   5   6   7   8   9  10  11  12  13  14  
 4                               7                     
 5                           7   8   7   6             
 6                       7   8   9   8   7             
 7               6   7   8   9  10   9   8   7         
 8               7   8   9  10  11  10   9   8   7     
 9               8   9  10  11  12  11  10   9   8   7 
10               7   8   9  10  11  10   9   8   7     
11                   7   8   9  10   9   8   7         
12                       7   8   9   8   7             
13                           7   8   7                 
14                               7                     
15                                                     

The system now has a total of 2095475792884826660156250000000 options
The initial system score was 411
The maximum obtainable for the system is 414
The score gain were looking for is 3
The system_score_gain_required = 2

bots_in_optional = [(9, 14), (10, 5), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = [(11, 5), (5, 7)]
bots_outside_system_moving_to_optional  = [(11, 5), (5, 7)]
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (9, 9), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 5
num_target_bots_in_occupied = 41
current_bots_in_optional = [(9, 14), (10, 5), (5, 10), (11, 5), (5, 7)]
current_bots_in_optional_that_can_move_to_occupied = [(9, 14), (10, 5), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (9, 9), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (9, 9), (10, 10), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 2095475792884826660156250000000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (5, 8)], 'scores': [1, 0, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 5) - {'options': [(10, 5), (11, 6)], 'scores': [1, 1]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(5, 7) - {'options': [(6, 7), (5, 8)], 'scores': [1, 1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.858000ms for simplify_system to complete
Will try freezing the system
A movable bot cant stay where it is
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((10, 7), (10, 7))
Move ((10, 12), (10, 12))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((11, 9), (11, 9))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((9, 13), (9, 13))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((13, 9), (13, 9))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((10, 11), (10, 11)), ((11, 11), (11, 11)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((10, 12), (10, 12)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((10, 11), (10, 11)), ((11, 11), (11, 11)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((10, 7), (10, 7)), ((10, 12), (10, 12)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((11, 9), (11, 9)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((9, 13), (9, 13)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((13, 9), (13, 9)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(10, 6) - {'options': [(10, 7), (10, 6), (11, 6)], 'scores': [1, 0, -1]}
(7, 7) - {'options': [(8, 7), (7, 7), (7, 6)], 'scores': [1, 0, -1]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 12)], 'scores': [-1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 8), (10, 7), (10, 6), (11, 7)], 'scores': [1, 0, -1, -1]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 0, -1, -1]}
(10, 9) - {'options': [(10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7), (8, 6), (7, 7)], 'scores': [0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(5, 10) - {'options': [(6, 10)], 'scores': [1]}
(6, 8) - {'options': [(6, 8), (5, 8)], 'scores': [0, -1]}
(8, 12) - {'options': [(9, 12), (8, 12), (8, 13)], 'scores': [1, 0, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(5, 7) - {'options': [(6, 7)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 10) - {'options': [(10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 0, -1, -1]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9)], 'scores': [1, 0, -1, -1]}
(9, 12) - {'options': [(9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 12)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(5, 10) - {'options': [(6, 10)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(5, 7) - {'options': [(6, 7)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
A system with max gain has been found!
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 9)], 'scores': [1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 12)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (5, 10): {'options': [(6, 10)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (5, 7): {'options': [(6, 7)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 3
this possibility has a score of 3
checking
{(5, 9): {'options': [(5, 10)], 'scores': [-1]}, (6, 9): {'options': [(5, 9)], 'scores': [-1]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (9, 8): {'options': [(9, 9)], 'scores': [1]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (8, 10): {'options': [(8, 9)], 'scores': [1]}, (8, 9): {'options': [(8, 8)], 'scores': [-1]}, (7, 11): {'options': [(7, 12)], 'scores': [-1]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (11, 5): {'options': [(10, 5)], 'scores': [1]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(7, 10)], 'scores': [1]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (9, 11): {'options': [(8, 11)], 'scores': [-1]}, (7, 10): {'options': [(7, 11)], 'scores': [-1]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 8)], 'scores': [1]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (8, 11): {'options': [(8, 10)], 'scores': [1]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 11)], 'scores': [-1]}, (3, 9): {'options': [(4, 9)], 'scores': [1]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (9, 6): {'options': [(9, 7)], 'scores': [1]}, (7, 9): {'options': [(6, 9)], 'scores': [-1]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(9, 5)], 'scores': [1]}, (5, 10): {'options': [(6, 10)], 'scores': [1]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (7, 8): {'options': [(7, 9)], 'scores': [1]}, (5, 7): {'options': [(6, 7)], 'scores': [1]}, (9, 9): {'options': [(9, 10)], 'scores': [-1]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (8, 8): {'options': [(7, 8)], 'scores': [-1]}, (9, 5): {'options': [(9, 6)], 'scores': [1]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 10)], 'scores': [-1]}
(6, 9) - {'options': [(5, 9)], 'scores': [-1]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(9, 8) - {'options': [(9, 9)], 'scores': [1]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(8, 10) - {'options': [(8, 9)], 'scores': [1]}
(8, 9) - {'options': [(8, 8)], 'scores': [-1]}
(7, 11) - {'options': [(7, 12)], 'scores': [-1]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(11, 5) - {'options': [(10, 5)], 'scores': [1]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(7, 10)], 'scores': [1]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(9, 11) - {'options': [(8, 11)], 'scores': [-1]}
(7, 10) - {'options': [(7, 11)], 'scores': [-1]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 8)], 'scores': [1]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(8, 11) - {'options': [(8, 10)], 'scores': [1]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 11)], 'scores': [-1]}
(3, 9) - {'options': [(4, 9)], 'scores': [1]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(9, 6) - {'options': [(9, 7)], 'scores': [1]}
(7, 9) - {'options': [(6, 9)], 'scores': [-1]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(9, 5)], 'scores': [1]}
(5, 10) - {'options': [(6, 10)], 'scores': [1]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(7, 8) - {'options': [(7, 9)], 'scores': [1]}
(5, 7) - {'options': [(6, 7)], 'scores': [1]}
(9, 9) - {'options': [(9, 10)], 'scores': [-1]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(8, 8) - {'options': [(7, 8)], 'scores': [-1]}
(9, 5) - {'options': [(9, 6)], 'scores': [1]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.86 Ms for simplify_system to complete
-------------------------- running turn 97 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           -   -                         
 5                       -   X   X                         
 6                   -   X   X   X   -                     
 7           -   X   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   X   X   X   -   X     
10       -   X   X   X   X   X   X   X   X   -             
11           -   -   X   X   X   X   X   -                 
12                   X   X   X   X   -                     
13                   -   -   X   -                         
14                           X   -                         
15                                                         

Awarded move for (15, 9)  to (14, 9)
simplification made, repeating

-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
47 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           -   -                         
 5                       -   X   X                         
 6                   -   X   X   X   -                     
 7           -   X   X   X   X   X   X   -                 
 8           -   X   X   X   X   X   X   X   -             
 9   -   X   X   X   X   X   X   X   X   X   X             
10       -   X   X   X   X   X   X   X   X   -             
11           -   -   X   X   X   X   X   -                 
12                   X   X   X   X   -                     
13                   -   -   X   -                         
14                           X   -                         
15                                                         

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (6, 7), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 6
optional - [(7, 12), (8, 5), (13, 8), (5, 8), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (6, 7), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(5, 7), (5, 11), (4, 10), (10, 14), (10, 4), (3, 9), (7, 13)], 7: [(7, 12), (8, 5), (13, 8), (5, 8), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 414

-------------------------------------
TARGET system:
47 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           6                             
 5                       6   X   6                         
 6                   6   X   X   X   6                     
 7               6   X   X   X   X   X   6                 
 8           6   X   X   X   X   X   X   X   6             
 9       6   X   X   X   X   X   X   X   X   X             
10           6   X   X   X   X   X   X   X   6             
11               6   X   X   X   X   X   6                 
12                   6   X   X   X   6                     
13                       6   X   6                         
14                           6                             
15                                                         


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
47 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           -                             
 5                       -   0   ?                         
 6                   -   0   0   0   -                     
 7               ?   0   0   0   0   0   -                 
 8           -   0   0   0   0   0   0   0   -             
 9       ?   0   0   0   0   0   0   0   0   0             
10           ?   0   0   0   0   0   0   0   -             
11               -   0   0   0   0   0   -                 
12                   ?   0   0   0   -                     
13                       -   0   -                         
14                           ?                             
15                                                         

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  16  
 4                           7                             
 5                       7   8   7                         
 6                   7   8   9   8   7                     
 7               7   8   9  10   9   8   7                 
 8           7   8   9  10  11  10   9   8   7             
 9       7   8   9  10  11  12  11  10   9   8             
10           7   8   9  10  11  10   9   8   7             
11               7   8   9  10   9   8   7                 
12                   7   8   9   8   7                     
13                       7   8   7                         
14                           7                             
15                                                         

The system now has a total of 11787051334977149963378906250000 options
The initial system score was 420
The maximum obtainable for the system is 421
The score gain were looking for is 1
The system_score_gain_required = 0

bots_in_optional = [(7, 12), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 6
num_target_bots_in_occupied = 41
current_bots_in_optional = [(7, 12), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 12), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 11787051334977149963378906250000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9), (5, 8)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9), (4, 9)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (13, 8)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8), (6, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  8.249000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((7, 12), (7, 12))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((4, 9), (4, 9))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((6, 7), (6, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((5, 10), (5, 10))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((4, 9), (4, 9)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((6, 7), (6, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((4, 9), (4, 9)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((6, 7), (6, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9), (5, 8)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9), (4, 9)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (13, 8)], 'scores': [1, 0, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8), (6, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(4, 9)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(6, 7) - {'options': [(6, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(4, 9)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (6, 7): {'options': [(6, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 1
this possibility has a score of 1
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(4, 9)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (6, 7): {'options': [(6, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (15, 9): {'options': [(14, 9)], 'scores': [1]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(4, 9)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(6, 7) - {'options': [(6, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(15, 9) - {'options': [(14, 9)], 'scores': [1]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 8.25 Ms for simplify_system to complete
-------------------------- running turn 98 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -   -                     
 5                       -   X   X                     
 6                   -   X   X   X   -                 
 7           -   X   X   X   X   X   X   -             
 8           -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   X   X   -             
12                   X   X   X   X   -                 
13                   -   -   X   -                     
14                           X   -                     
15                                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -   -                     
 5                       -   X   X                     
 6                   -   X   X   X   -                 
 7           -   X   X   X   X   X   X   -             
 8           -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   X   X   -             
12                   X   X   X   X   -                 
13                   -   -   X   -                     
14                           X   -                     
15                                                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (6, 7), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 7
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (5, 8), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (6, 7), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(5, 7), (10, 14), (5, 11), (4, 10), (14, 10), (10, 4), (3, 9), (7, 13)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (5, 8), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 421

-------------------------------------
TARGET system:
48 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           7                         
 5                       7   X   7                     
 6                   7   X   X   X   7                 
 7               7   X   X   X   X   X   7             
 8           7   X   X   X   X   X   X   X   7         
 9       7   X   X   X   X   X   X   X   X   X   7     
10           7   X   X   X   X   X   X   X   7         
11               7   X   X   X   X   X   7             
12                   7   X   X   X   7                 
13                       7   X   7                     
14                           7                         
15                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -                         
 5                       -   0   ?                     
 6                   -   0   0   0   -                 
 7               ?   0   0   0   0   0   -             
 8           -   0   0   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   0   0   -         
11               -   0   0   0   0   0   -             
12                   ?   0   0   0   -                 
13                       -   0   -                     
14                           ?                         
15                                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           7                         
 5                       7   8   7                     
 6                   7   8   9   8   7                 
 7               7   8   9  10   9   8   7             
 8           7   8   9  10  11  10   9   8   7         
 9       7   8   9  10  11  12  11  10   9   8   7     
10           7   8   9  10  11  10   9   8   7         
11               7   8   9  10   9   8   7             
12                   7   8   9   8   7                 
13                       7   8   7                     
14                           7                         
15                                                     

The system now has a total of 29467628337442874908447265625000 options
The initial system score was 421
The maximum obtainable for the system is 421
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 12), (14, 9), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 41
current_bots_in_optional = [(7, 12), (14, 9), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 12), (14, 9), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 29467628337442874908447265625000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9), (5, 8)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9), (4, 9)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8), (6, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.923000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((7, 12), (7, 12))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((14, 9), (14, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((4, 9), (4, 9))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((6, 7), (6, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((5, 10), (5, 10))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((4, 9), (4, 9)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((6, 7), (6, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((4, 9), (4, 9)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((6, 7), (6, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9), (5, 8)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9), (4, 9)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8), (6, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(4, 9)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(6, 7) - {'options': [(6, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(4, 9)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (6, 7): {'options': [(6, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(4, 9)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (6, 7): {'options': [(6, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(4, 9)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(6, 7) - {'options': [(6, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.92 Ms for simplify_system to complete
-------------------------- running turn 99 ---------------------------


=> INITIAL
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -   -                     
 5                       -   X   X                     
 6                   -   X   X   X   -                 
 7           -   X   X   X   X   X   X   -             
 8           -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   X   X   -             
12                   X   X   X   X   -                 
13                   -   -   X   -                     
14                           X   -                     
15                                                     


-------------------------------------
=> AFTER DANGLING GRANTS
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -   -                     
 5                       -   X   X                     
 6                   -   X   X   X   -                 
 7           -   X   X   X   X   X   X   -             
 8           -   X   X   X   X   X   X   X   -         
 9   -   X   X   X   X   X   X   X   X   X   X   X     
10       -   X   X   X   X   X   X   X   X   -   -     
11           -   -   X   X   X   X   X   -             
12                   X   X   X   X   -                 
13                   -   -   X   -                     
14                           X   -                     
15                                                     

determine_ideal_outcome called with [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (6, 7), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
outcome = 
num_optional - 7
optional - [(7, 12), (8, 5), (13, 8), (14, 9), (5, 8), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)]
occupied - [(9, 9), (9, 8), (8, 9), (10, 9), (9, 10), (8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8), (6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8), (5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)]
available_bots - [(5, 9), (6, 9), (10, 11), (11, 11), (7, 12), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (14, 9), (12, 9), (10, 8), (11, 10), (4, 9), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (9, 14), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (6, 7), (9, 6), (7, 9), (9, 13), (10, 5), (5, 10), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
levels - {6: [(5, 7), (10, 14), (5, 11), (4, 10), (14, 10), (10, 4), (3, 9), (7, 13)], 7: [(7, 12), (8, 5), (13, 8), (14, 9), (5, 8), (4, 9), (7, 6), (9, 4), (13, 10), (9, 14), (6, 11), (10, 13), (12, 11), (6, 7), (11, 12), (10, 5), (5, 10), (8, 13), (12, 7), (11, 6)], 8: [(5, 9), (11, 11), (10, 6), (7, 7), (7, 11), (9, 5), (6, 10), (10, 12), (12, 10), (9, 13), (8, 6), (8, 12), (11, 7), (6, 8), (13, 9), (12, 8)], 9: [(6, 9), (10, 11), (8, 7), (12, 9), (11, 10), (10, 7), (9, 6), (7, 10), (8, 11), (11, 8), (9, 12), (7, 8)], 10: [(8, 10), (10, 8), (9, 11), (9, 7), (11, 9), (7, 9), (10, 10), (8, 8)], 11: [(9, 8), (8, 9), (10, 9), (9, 10)], 12: [(9, 9)]}
max_score - 421

-------------------------------------
TARGET system:
48 participants
()
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           7                         
 5                       7   X   7                     
 6                   7   X   X   X   7                 
 7               7   X   X   X   X   X   7             
 8           7   X   X   X   X   X   X   X   7         
 9       7   X   X   X   X   X   X   X   X   X   7     
10           7   X   X   X   X   X   X   X   7         
11               7   X   X   X   X   X   7             
12                   7   X   X   X   7                 
13                       7   X   7                     
14                           7                         
15                                                     


-------------------------------------
=> SYSTEM PUSHED TOWARDS IDEAL
BOT Positions:
48 participants
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           -                         
 5                       -   0   ?                     
 6                   -   0   0   0   -                 
 7               ?   0   0   0   0   0   -             
 8           -   0   0   0   0   0   0   0   -         
 9       ?   0   0   0   0   0   0   0   0   0   ?     
10           ?   0   0   0   0   0   0   0   -         
11               -   0   0   0   0   0   -             
12                   ?   0   0   0   -                 
13                       -   0   -                     
14                           ?                         
15                                                     

Cell Scores:
     3   4   5   6   7   8   9  10  11  12  13  14  15  
 4                           7                         
 5                       7   8   7                     
 6                   7   8   9   8   7                 
 7               7   8   9  10   9   8   7             
 8           7   8   9  10  11  10   9   8   7         
 9       7   8   9  10  11  12  11  10   9   8   7     
10           7   8   9  10  11  10   9   8   7         
11               7   8   9  10   9   8   7             
12                   7   8   9   8   7                 
13                       7   8   7                     
14                           7                         
15                                                     

The system now has a total of 29467628337442874908447265625000 options
The initial system score was 421
The maximum obtainable for the system is 421
The score gain were looking for is 0
The system_score_gain_required = 0

bots_in_optional = [(7, 12), (14, 9), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
bots_in_optional_moving_to_occupied = []
bots_outside_system = []
bots_outside_system_moving_to_optional  = []
bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
bots_in_occupied_moving_to_optional = []
movable_bots_in_occupied_that_have_to_move = []
num_target_bots_in_optional = 7
num_target_bots_in_occupied = 41
current_bots_in_optional = [(7, 12), (14, 9), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
current_bots_in_optional_that_can_move_to_occupied = [(7, 12), (14, 9), (4, 9), (9, 14), (6, 7), (10, 5), (5, 10)]
current_bots_in_occupied = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]
current_bots_in_occupied_that_can_move_to_optional = [(5, 9), (11, 11), (10, 6), (7, 7), (10, 12), (7, 11), (6, 10), (8, 6), (11, 7), (13, 9), (12, 10), (9, 13), (6, 8), (8, 12), (9, 5), (12, 8)]
current_bots_outside = []
target_occupied_not_occupied = []
target_occupied_with_bot_now_or_definite_bot_next = [(5, 9), (6, 9), (10, 11), (11, 11), (9, 8), (10, 6), (7, 7), (10, 12), (8, 9), (7, 11), (12, 9), (10, 8), (11, 10), (10, 7), (6, 10), (8, 10), (9, 11), (7, 10), (8, 6), (10, 9), (9, 7), (11, 7), (13, 9), (8, 11), (11, 9), (9, 10), (8, 7), (12, 10), (9, 6), (7, 9), (9, 13), (6, 8), (8, 12), (11, 8), (10, 10), (9, 9), (8, 8), (9, 5), (7, 8), (9, 12), (12, 8)]

Optional squares exist

System result = ...
The system has a total of 29467628337442874908447265625000 options
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9), (5, 8)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9), (4, 9)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8), (6, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}


It took  7.783000ms for simplify_system to complete
Will try freezing the system
Move ((5, 9), (5, 9))
Move ((6, 9), (6, 9))
Move ((10, 11), (10, 11))
Move ((11, 11), (11, 11))
Move ((7, 12), (7, 12))
Move ((9, 8), (9, 8))
Move ((10, 6), (10, 6))
Move ((7, 7), (7, 7))
Move ((10, 12), (10, 12))
Move ((8, 9), (8, 9))
Move ((7, 11), (7, 11))
Move ((14, 9), (14, 9))
Move ((12, 9), (12, 9))
Move ((10, 8), (10, 8))
Move ((11, 10), (11, 10))
Move ((4, 9), (4, 9))
Move ((10, 7), (10, 7))
Move ((6, 10), (6, 10))
Move ((8, 10), (8, 10))
Move ((9, 11), (9, 11))
Move ((7, 10), (7, 10))
Move ((8, 6), (8, 6))
Move ((10, 9), (10, 9))
Move ((9, 7), (9, 7))
Move ((9, 14), (9, 14))
Move ((11, 7), (11, 7))
Move ((13, 9), (13, 9))
Move ((8, 11), (8, 11))
Move ((11, 9), (11, 9))
Move ((9, 10), (9, 10))
Move ((8, 7), (8, 7))
Move ((12, 10), (12, 10))
Move ((6, 7), (6, 7))
Move ((9, 6), (9, 6))
Move ((7, 9), (7, 9))
Move ((9, 13), (9, 13))
Move ((10, 5), (10, 5))
Move ((5, 10), (5, 10))
Move ((6, 8), (6, 8))
Move ((8, 12), (8, 12))
Move ((11, 8), (11, 8))
Move ((10, 10), (10, 10))
Move ((9, 9), (9, 9))
Move ((8, 8), (8, 8))
Move ((9, 5), (9, 5))
Move ((7, 8), (7, 8))
Move ((9, 12), (9, 12))
Move ((12, 8), (12, 8))
Works... [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((4, 9), (4, 9)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((6, 7), (6, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
Can freeze, freezing system
making moves [((5, 9), (5, 9)), ((6, 9), (6, 9)), ((10, 11), (10, 11)), ((11, 11), (11, 11)), ((7, 12), (7, 12)), ((9, 8), (9, 8)), ((10, 6), (10, 6)), ((7, 7), (7, 7)), ((10, 12), (10, 12)), ((8, 9), (8, 9)), ((7, 11), (7, 11)), ((14, 9), (14, 9)), ((12, 9), (12, 9)), ((10, 8), (10, 8)), ((11, 10), (11, 10)), ((4, 9), (4, 9)), ((10, 7), (10, 7)), ((6, 10), (6, 10)), ((8, 10), (8, 10)), ((9, 11), (9, 11)), ((7, 10), (7, 10)), ((8, 6), (8, 6)), ((10, 9), (10, 9)), ((9, 7), (9, 7)), ((9, 14), (9, 14)), ((11, 7), (11, 7)), ((13, 9), (13, 9)), ((8, 11), (8, 11)), ((11, 9), (11, 9)), ((9, 10), (9, 10)), ((8, 7), (8, 7)), ((12, 10), (12, 10)), ((6, 7), (6, 7)), ((9, 6), (9, 6)), ((7, 9), (7, 9)), ((9, 13), (9, 13)), ((10, 5), (10, 5)), ((5, 10), (5, 10)), ((6, 8), (6, 8)), ((8, 12), (8, 12)), ((11, 8), (11, 8)), ((10, 10), (10, 10)), ((9, 9), (9, 9)), ((8, 8), (8, 8)), ((9, 5), (9, 5)), ((7, 8), (7, 8)), ((9, 12), (9, 12)), ((12, 8), (12, 8))]
system =
(5, 9) - {'options': [(6, 9), (5, 9), (5, 10), (4, 9), (5, 8)], 'scores': [1, 0, -1, -1, -1]}
(6, 9) - {'options': [(7, 9), (6, 9), (5, 9), (6, 10), (6, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 11) - {'options': [(9, 11), (10, 10), (10, 11), (11, 11), (10, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 11) - {'options': [(11, 10), (10, 11), (11, 11), (11, 12), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(7, 12) - {'options': [(7, 11), (8, 12), (7, 12)], 'scores': [1, 1, 0]}
(9, 8) - {'options': [(9, 9), (9, 8), (10, 8), (8, 8), (9, 7)], 'scores': [1, 0, -1, -1, -1]}
(10, 6) - {'options': [(10, 7), (9, 6), (10, 6), (10, 5), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(7, 7) - {'options': [(7, 8), (8, 7), (7, 7), (7, 6), (6, 7)], 'scores': [1, 1, 0, -1, -1]}
(10, 12) - {'options': [(10, 11), (9, 12), (10, 12), (11, 12), (10, 13)], 'scores': [1, 1, 0, -1, -1]}
(8, 9) - {'options': [(9, 9), (8, 9), (8, 8), (8, 10), (7, 9)], 'scores': [1, 0, -1, -1, -1]}
(7, 11) - {'options': [(8, 11), (7, 10), (7, 11), (7, 12), (6, 11)], 'scores': [1, 1, 0, -1, -1]}
(14, 9) - {'options': [(13, 9), (14, 9)], 'scores': [1, 0]}
(12, 9) - {'options': [(11, 9), (12, 9), (13, 9), (12, 10), (12, 8)], 'scores': [1, 0, -1, -1, -1]}
(10, 8) - {'options': [(9, 8), (10, 9), (10, 8), (11, 8), (10, 7)], 'scores': [1, 1, 0, -1, -1]}
(11, 10) - {'options': [(11, 9), (10, 10), (11, 10), (12, 10), (11, 11)], 'scores': [1, 1, 0, -1, -1]}
(4, 9) - {'options': [(5, 9), (4, 9)], 'scores': [1, 0]}
(10, 7) - {'options': [(10, 8), (9, 7), (10, 7), (10, 6), (11, 7)], 'scores': [1, 1, 0, -1, -1]}
(6, 10) - {'options': [(6, 9), (7, 10), (6, 10), (6, 11), (5, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 10) - {'options': [(9, 10), (8, 9), (8, 10), (8, 11), (7, 10)], 'scores': [1, 1, 0, -1, -1]}
(9, 11) - {'options': [(9, 10), (9, 11), (8, 11), (10, 11), (9, 12)], 'scores': [1, 0, -1, -1, -1]}
(7, 10) - {'options': [(8, 10), (7, 9), (7, 10), (7, 11), (6, 10)], 'scores': [1, 1, 0, -1, -1]}
(8, 6) - {'options': [(9, 6), (8, 7), (8, 6), (7, 6), (8, 5)], 'scores': [1, 1, 0, -1, -1]}
(10, 9) - {'options': [(9, 9), (10, 9), (10, 8), (11, 9), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 7) - {'options': [(9, 8), (9, 7), (10, 7), (9, 6), (8, 7)], 'scores': [1, 0, -1, -1, -1]}
(9, 14) - {'options': [(9, 13), (9, 14)], 'scores': [1, 0]}
(11, 7) - {'options': [(11, 8), (10, 7), (11, 7), (12, 7), (11, 6)], 'scores': [1, 1, 0, -1, -1]}
(13, 9) - {'options': [(12, 9), (13, 9), (13, 10), (14, 9), (13, 8)], 'scores': [1, 0, -1, -1, -1]}
(8, 11) - {'options': [(9, 11), (8, 10), (8, 11), (7, 11), (8, 12)], 'scores': [1, 1, 0, -1, -1]}
(11, 9) - {'options': [(10, 9), (11, 9), (11, 8), (11, 10), (12, 9)], 'scores': [1, 0, -1, -1, -1]}
(9, 10) - {'options': [(9, 9), (9, 10), (9, 11), (8, 10), (10, 10)], 'scores': [1, 0, -1, -1, -1]}
(8, 7) - {'options': [(8, 8), (9, 7), (8, 7), (8, 6), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(12, 10) - {'options': [(11, 10), (12, 9), (12, 10), (13, 10), (12, 11)], 'scores': [1, 1, 0, -1, -1]}
(6, 7) - {'options': [(7, 7), (6, 8), (6, 7)], 'scores': [1, 1, 0]}
(9, 6) - {'options': [(9, 7), (9, 6), (8, 6), (10, 6), (9, 5)], 'scores': [1, 0, -1, -1, -1]}
(7, 9) - {'options': [(8, 9), (7, 9), (6, 9), (7, 8), (7, 10)], 'scores': [1, 0, -1, -1, -1]}
(9, 13) - {'options': [(9, 12), (9, 13), (9, 14), (10, 13), (8, 13)], 'scores': [1, 0, -1, -1, -1]}
(10, 5) - {'options': [(9, 5), (10, 6), (10, 5)], 'scores': [1, 1, 0]}
(5, 10) - {'options': [(5, 9), (6, 10), (5, 10)], 'scores': [1, 1, 0]}
(6, 8) - {'options': [(7, 8), (6, 9), (6, 8), (6, 7), (5, 8)], 'scores': [1, 1, 0, -1, -1]}
(8, 12) - {'options': [(8, 11), (9, 12), (8, 12), (7, 12), (8, 13)], 'scores': [1, 1, 0, -1, -1]}
(11, 8) - {'options': [(11, 9), (10, 8), (11, 8), (11, 7), (12, 8)], 'scores': [1, 1, 0, -1, -1]}
(10, 10) - {'options': [(9, 10), (10, 9), (10, 10), (11, 10), (10, 11)], 'scores': [1, 1, 0, -1, -1]}
(9, 9) - {'options': [(9, 9), (9, 10), (8, 9), (9, 8), (10, 9)], 'scores': [0, -1, -1, -1, -1]}
(8, 8) - {'options': [(8, 9), (9, 8), (8, 8), (7, 8), (8, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 5) - {'options': [(9, 6), (9, 5), (10, 5), (8, 5), (9, 4)], 'scores': [1, 0, -1, -1, -1]}
(7, 8) - {'options': [(8, 8), (7, 9), (7, 8), (6, 8), (7, 7)], 'scores': [1, 1, 0, -1, -1]}
(9, 12) - {'options': [(9, 11), (9, 12), (9, 13), (10, 12), (8, 12)], 'scores': [1, 0, -1, -1, -1]}
(12, 8) - {'options': [(11, 8), (12, 9), (12, 8), (12, 7), (13, 8)], 'scores': [1, 1, 0, -1, -1]}
done
system is now =
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(4, 9)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(6, 7) - {'options': [(6, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
system_walk - system is settled, returning
possibilities from system_walk are...
[{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(4, 9)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (6, 7): {'options': [(6, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}]
checking possibility for score of 0
this possibility has a score of 0
checking
{(5, 9): {'options': [(5, 9)], 'scores': [0]}, (6, 9): {'options': [(6, 9)], 'scores': [0]}, (10, 11): {'options': [(10, 11)], 'scores': [0]}, (11, 11): {'options': [(11, 11)], 'scores': [0]}, (7, 12): {'options': [(7, 12)], 'scores': [0]}, (9, 8): {'options': [(9, 8)], 'scores': [0]}, (10, 6): {'options': [(10, 6)], 'scores': [0]}, (7, 7): {'options': [(7, 7)], 'scores': [0]}, (10, 12): {'options': [(10, 12)], 'scores': [0]}, (8, 9): {'options': [(8, 9)], 'scores': [0]}, (7, 11): {'options': [(7, 11)], 'scores': [0]}, (14, 9): {'options': [(14, 9)], 'scores': [0]}, (12, 9): {'options': [(12, 9)], 'scores': [0]}, (10, 8): {'options': [(10, 8)], 'scores': [0]}, (11, 10): {'options': [(11, 10)], 'scores': [0]}, (4, 9): {'options': [(4, 9)], 'scores': [0]}, (10, 7): {'options': [(10, 7)], 'scores': [0]}, (6, 10): {'options': [(6, 10)], 'scores': [0]}, (8, 10): {'options': [(8, 10)], 'scores': [0]}, (9, 11): {'options': [(9, 11)], 'scores': [0]}, (7, 10): {'options': [(7, 10)], 'scores': [0]}, (8, 6): {'options': [(8, 6)], 'scores': [0]}, (10, 9): {'options': [(10, 9)], 'scores': [0]}, (9, 7): {'options': [(9, 7)], 'scores': [0]}, (9, 14): {'options': [(9, 14)], 'scores': [0]}, (11, 7): {'options': [(11, 7)], 'scores': [0]}, (13, 9): {'options': [(13, 9)], 'scores': [0]}, (8, 11): {'options': [(8, 11)], 'scores': [0]}, (11, 9): {'options': [(11, 9)], 'scores': [0]}, (9, 10): {'options': [(9, 10)], 'scores': [0]}, (8, 7): {'options': [(8, 7)], 'scores': [0]}, (12, 10): {'options': [(12, 10)], 'scores': [0]}, (6, 7): {'options': [(6, 7)], 'scores': [0]}, (9, 6): {'options': [(9, 6)], 'scores': [0]}, (7, 9): {'options': [(7, 9)], 'scores': [0]}, (9, 13): {'options': [(9, 13)], 'scores': [0]}, (10, 5): {'options': [(10, 5)], 'scores': [0]}, (5, 10): {'options': [(5, 10)], 'scores': [0]}, (6, 8): {'options': [(6, 8)], 'scores': [0]}, (8, 12): {'options': [(8, 12)], 'scores': [0]}, (11, 8): {'options': [(11, 8)], 'scores': [0]}, (10, 10): {'options': [(10, 10)], 'scores': [0]}, (9, 9): {'options': [(9, 9)], 'scores': [0]}, (8, 8): {'options': [(8, 8)], 'scores': [0]}, (9, 5): {'options': [(9, 5)], 'scores': [0]}, (7, 8): {'options': [(7, 8)], 'scores': [0]}, (9, 12): {'options': [(9, 12)], 'scores': [0]}, (12, 8): {'options': [(12, 8)], 'scores': [0]}}
Found a winner!!!!!!!!!!!!!!
solve_system returned - choose moves will return
(5, 9) - {'options': [(5, 9)], 'scores': [0]}
(6, 9) - {'options': [(6, 9)], 'scores': [0]}
(10, 11) - {'options': [(10, 11)], 'scores': [0]}
(11, 11) - {'options': [(11, 11)], 'scores': [0]}
(7, 12) - {'options': [(7, 12)], 'scores': [0]}
(9, 8) - {'options': [(9, 8)], 'scores': [0]}
(10, 6) - {'options': [(10, 6)], 'scores': [0]}
(7, 7) - {'options': [(7, 7)], 'scores': [0]}
(10, 12) - {'options': [(10, 12)], 'scores': [0]}
(8, 9) - {'options': [(8, 9)], 'scores': [0]}
(7, 11) - {'options': [(7, 11)], 'scores': [0]}
(14, 9) - {'options': [(14, 9)], 'scores': [0]}
(12, 9) - {'options': [(12, 9)], 'scores': [0]}
(10, 8) - {'options': [(10, 8)], 'scores': [0]}
(11, 10) - {'options': [(11, 10)], 'scores': [0]}
(4, 9) - {'options': [(4, 9)], 'scores': [0]}
(10, 7) - {'options': [(10, 7)], 'scores': [0]}
(6, 10) - {'options': [(6, 10)], 'scores': [0]}
(8, 10) - {'options': [(8, 10)], 'scores': [0]}
(9, 11) - {'options': [(9, 11)], 'scores': [0]}
(7, 10) - {'options': [(7, 10)], 'scores': [0]}
(8, 6) - {'options': [(8, 6)], 'scores': [0]}
(10, 9) - {'options': [(10, 9)], 'scores': [0]}
(9, 7) - {'options': [(9, 7)], 'scores': [0]}
(9, 14) - {'options': [(9, 14)], 'scores': [0]}
(11, 7) - {'options': [(11, 7)], 'scores': [0]}
(13, 9) - {'options': [(13, 9)], 'scores': [0]}
(8, 11) - {'options': [(8, 11)], 'scores': [0]}
(11, 9) - {'options': [(11, 9)], 'scores': [0]}
(9, 10) - {'options': [(9, 10)], 'scores': [0]}
(8, 7) - {'options': [(8, 7)], 'scores': [0]}
(12, 10) - {'options': [(12, 10)], 'scores': [0]}
(6, 7) - {'options': [(6, 7)], 'scores': [0]}
(9, 6) - {'options': [(9, 6)], 'scores': [0]}
(7, 9) - {'options': [(7, 9)], 'scores': [0]}
(9, 13) - {'options': [(9, 13)], 'scores': [0]}
(10, 5) - {'options': [(10, 5)], 'scores': [0]}
(5, 10) - {'options': [(5, 10)], 'scores': [0]}
(6, 8) - {'options': [(6, 8)], 'scores': [0]}
(8, 12) - {'options': [(8, 12)], 'scores': [0]}
(11, 8) - {'options': [(11, 8)], 'scores': [0]}
(10, 10) - {'options': [(10, 10)], 'scores': [0]}
(9, 9) - {'options': [(9, 9)], 'scores': [0]}
(8, 8) - {'options': [(8, 8)], 'scores': [0]}
(9, 5) - {'options': [(9, 5)], 'scores': [0]}
(7, 8) - {'options': [(7, 8)], 'scores': [0]}
(9, 12) - {'options': [(9, 12)], 'scores': [0]}
(12, 8) - {'options': [(12, 8)], 'scores': [0]}
It took a total of 7.78 Ms for simplify_system to complete
[5, 48] - seed: 798935494-0
